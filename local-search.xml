<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>AI_Leetcode</title>
    <link href="/2025/06/19/AI-Leetcode/"/>
    <url>/2025/06/19/AI-Leetcode/</url>
    
    <content type="html"><![CDATA[<ul><li>把一个矩阵的行列反过来：  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]]<br>b = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">zip</span>(*a))<br><span class="hljs-comment"># b = [[1, 3], [2, 4]]</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>实验室工作</title>
    <link href="/2025/06/04/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E5%B7%A5%E4%BD%9C/"/>
    <url>/2025/06/04/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E5%B7%A5%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="Report-this-week-5-30-—-6-5">Report this week (5.30 — 6.5)</h2><ol><li><code>Inverse kinematics</code> to control Piper going up and down;</li><li>Try to reproduce <code>GraspNet-1B</code>.</li></ol><h3 id="使用-IK-控制-Piper-机械臂的运动">使用 IK 控制 Piper 机械臂的运动</h3><p>Use <code>curobo</code> project, needs the <code>urdf</code> and <code>usd</code> of Piper</p><details><summary> Python 代码示例 (IK/FK 控制 Piper 机械臂)</summary>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python">robot_cfg = RobotConfig.from_basic(URDF_PATH, BASE_LINK, EE_LINK)<br>ik_config = IKSolverConfig.load_from_robot_config(<br>    robot_cfg,<br>    position_threshold=<span class="hljs-number">0.05</span>, <span class="hljs-comment"># 位置阈值 (米)</span><br>    rotation_threshold=<span class="hljs-number">0.3</span>, <span class="hljs-comment"># 旋转阈值 (弧度)</span><br>    self_collision_check=<span class="hljs-literal">False</span>,<br>    self_collision_opt=<span class="hljs-literal">False</span>,<br>)<br>ik_solver = IKSolver(ik_config)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">IK</span>(<span class="hljs-params">ee_position: torch.tensor, ee_quat: torch.tensor</span>):<br>    <span class="hljs-comment"># 确保是float32</span><br>    ee_position = ee_position.<span class="hljs-built_in">float</span>()<br>    ee_quat = ee_quat.<span class="hljs-built_in">float</span>()  <br>    goal = Pose(ee_position, ee_quat)<br>    result = ik_solver.solve_batch(goal)<br>    <br>    <span class="hljs-keyword">if</span> torch.count_nonzero(result.success).item() &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> result.solution[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>].cpu().numpy()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">raise</span> RuntimeError(<span class="hljs-string">&quot;IK solution not found.&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">K</span>(<span class="hljs-params">joint_angles: torch.tensor</span>):<br>    joint_angles = joint_angles.<span class="hljs-built_in">float</span>() <span class="hljs-comment"># 确保是float32</span><br>    kin_state = ik_solver.fk(joint_angles)<br>    <span class="hljs-keyword">return</span> kin_state.ee_position.cpu().numpy(), kin_state.ee_quaternion.cpu().numpy()<br></code></pre></td></tr></table></figure></details><h3 id="安装-GraspNet-环境">安装 GraspNet 环境</h3><ul><li><code>python</code> needs 3.8, the only one which can compile drivers successfully, but <code>open3d</code> errors (need <code>glibc 2.18</code>)</li><li>Compile <code>open3d</code> by source code ot install by <code>conda</code>(conda cannot do this)?(need <code>clang</code> but I do not have <code>SUDO</code>)</li><li><code>python3.7</code>, cannot compile other cuda drivers.</li></ul><p><br><br></p><h2 id="Report-this-week-6-6-–-6-12">Report this week (6.6 – 6.12)</h2><h3 id="Curobo-in-server">Curobo in server</h3><ul><li>load pytorch by <code>pip</code>, <code>conda</code> gets <code>glibc</code> error,</li><li>need to run <code>pip install scikit_build_core</code> after load pytorch,</li><li><code>module load cuda/12.1 gcc/9.3.0</code> before <code>pip install -e . --no-build-isolation  </code></li><li>暂时无法解决</li></ul><h3 id="Configure-Curobo-of-Piper">Configure Curobo of Piper</h3><ul><li>urdf and usd,</li><li>use Lula Robot to create sphere,<br><img src="/img/Lab/2/sphere.png" alt=""></li><li>some configure need to change,</li><li>current result:<br><img src="/img/Lab/2/exp.png" alt=""></li><li>possible result: FK different from hands and gripper.</li></ul><p><br><br></p><h2 id="Report-this-week-6-26-–-7-3">Report this week (6.26 – 7.3)</h2><ol><li>reproduce Minimind-V and understand the code of Vision-Language model;</li></ol><h3 id="VLM-model">VLM model</h3><p><img src="/img/Lab/3/vlm_structure.png" alt="VLM 架构"><br>Assume that the batch size is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>, seqence length is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>639</mn></mrow><annotation encoding="application/x-tex">639</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">639</span></span></span></span>, hidden size is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>768</mn></mrow><annotation encoding="application/x-tex">768</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">768</span></span></span></span>, vocab size is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6400</mn></mrow><annotation encoding="application/x-tex">6400</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6400</span></span></span></span>.</p><ul><li>Input example: “&lt;image&gt;\n这个图像中有什么内容？”</li><li>Prompt: “<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover><mover><mrow><mi mathvariant="normal">@</mi><mi mathvariant="normal">@</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">@</mi><mi mathvariant="normal">@</mi></mrow><mo stretchy="true">⏞</mo></mover><mtext>196个 @</mtext></mover></mrow><annotation encoding="application/x-tex">\overbrace{@@...@@}^{\text{196个 @}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0285em;"></span><span class="mord mover"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.0285em;"><span style="top:-3.3424em;"><span class="pstrut" style="height:3.3424em;"></span><span class="mord mover"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3424em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">@@...@@</span></span></span><span class="svg-align" style="top:-3.7944em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMinYMin slice"><path d="M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMidYMin slice"><path d="M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMaxYMin slice"><path d="M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z"/></svg></span></span></span></span></span></span></span></span><span style="top:-4.8849em;"><span class="pstrut" style="height:3.3424em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">196</span><span class="mord cjk_fallback mtight">个</span><span class="mord mtight"> @</span></span></span></span></span></span></span></span></span></span></span></span>\n这个图像中有什么内容？”, input_ids: “<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>34</mn></mrow><annotation encoding="application/x-tex">34</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">34</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>34</mn></mrow><annotation encoding="application/x-tex">34</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">34</span></span></span></span> … <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>34</mn></mrow><annotation encoding="application/x-tex">34</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">34</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1234</mn></mrow><annotation encoding="application/x-tex">1234</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1234</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>183</mn></mrow><annotation encoding="application/x-tex">183</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">183</span></span></span></span> … <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>123</mn></mrow><annotation encoding="application/x-tex">123</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">123</span></span></span></span>”</li><li>To tokens: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>639</mn><mo separator="true">,</mo><mn>768</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1, 639, 768]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">639</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">768</span><span class="mclose">]</span></span></span></span></li><li>Image feature: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>224</mn><mo separator="true">,</mo><mn>224</mn><mo stretchy="false">]</mo><mo>→</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>196</mn><mo separator="true">,</mo><mn>768</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1, 3, 224, 224] \rightarrow [1, 1, 196, 768]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">224</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">224</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">196</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">768</span><span class="mclose">]</span></span></span></span></li><li>Replace the position of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">@</mi></mrow><annotation encoding="application/x-tex">@</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">@</span></span></span></span> to image feature, so the input shape of transformer layers is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>639</mn><mo separator="true">,</mo><mn>768</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1, 639, 768]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">639</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">768</span><span class="mclose">]</span></span></span></span></li><li>Output shape of transformer(after RMSNorm) is also <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>639</mn><mo separator="true">,</mo><mn>768</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1, 639, 768]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">639</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">768</span><span class="mclose">]</span></span></span></span></li><li>Output shape after the linear classification layer is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>639</mn><mo separator="true">,</mo><mn>6400</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1, 639, 6400]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">639</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6400</span><span class="mclose">]</span></span></span></span></li></ul><h3 id="VLA-model">VLA model</h3><p><img src="/img/Lab/3/vla_structure.png" alt="VLA 架构"><br>Use the structure of OpenVLA, the last <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>256</mn></mrow><annotation encoding="application/x-tex">256</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">256</span></span></span></span> token ids are action tokens.</p><ul><li>Input example: “&lt;image&gt;\n机器人应该怎么做才能完成{任务}？答：”<br>For OpenVLA, image features are always placed at the beginning of the prompt.</li><li>Input_ids: “<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>34</mn></mrow><annotation encoding="application/x-tex">34</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">34</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>34</mn></mrow><annotation encoding="application/x-tex">34</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">34</span></span></span></span> … <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>34</mn></mrow><annotation encoding="application/x-tex">34</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">34</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1234</mn></mrow><annotation encoding="application/x-tex">1234</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1234</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>183</mn></mrow><annotation encoding="application/x-tex">183</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">183</span></span></span></span> … <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>123</mn></mrow><annotation encoding="application/x-tex">123</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">123</span></span></span></span>”</li><li>To tokens: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>639</mn><mo separator="true">,</mo><mn>768</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1, 639, 768]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">639</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">768</span><span class="mclose">]</span></span></span></span></li><li>…</li><li>Output shape after the linear classification layer is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>639</mn><mo separator="true">,</mo><mn>6400</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1, 639, 6400]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">639</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6400</span><span class="mclose">]</span></span></span></span>, and assume the last <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn></mrow><annotation encoding="application/x-tex">7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span></span></span></span> tokens are “<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6344</mn></mrow><annotation encoding="application/x-tex">6344</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6344</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6298</mn></mrow><annotation encoding="application/x-tex">6298</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6298</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6392</mn></mrow><annotation encoding="application/x-tex">6392</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6392</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6306</mn></mrow><annotation encoding="application/x-tex">6306</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6306</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6280</mn></mrow><annotation encoding="application/x-tex">6280</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6280</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6314</mn></mrow><annotation encoding="application/x-tex">6314</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6314</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6399</mn></mrow><annotation encoding="application/x-tex">6399</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6399</span></span></span></span>”</li><li>This last <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn></mrow><annotation encoding="application/x-tex">7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span></span></span></span> tokens would be decoded into action ranged <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1, 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>, that is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>0.569</mn><mo separator="true">,</mo><mo>−</mo><mn>0.208</mn><mo separator="true">,</mo><mo>−</mo><mn>0.945</mn><mo separator="true">,</mo><mo>−</mo><mn>0.270</mn><mo separator="true">,</mo><mo>−</mo><mn>0.067</mn><mo separator="true">,</mo><mo>−</mo><mn>0.333</mn><mo separator="true">,</mo><mo>−</mo><mn>0.996</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-0.569, -0.208, -0.945, -0.270, -0.067, -0.333, -0.996]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">0.569</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">0.208</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">0.945</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">0.270</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">0.067</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">0.333</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">0.996</span><span class="mclose">]</span></span></span></span><br>Formula:<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>action</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mo>−</mo><mn>1</mn><mo>+</mo><mfrac><mrow><mn>2</mn><mo>⋅</mo><mtext>clip</mtext><mo stretchy="false">(</mo><mn>6400</mn><mo>−</mo><mtext>last_tokens</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>254</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><mn>255</mn></mfrac></mrow><annotation encoding="application/x-tex">\text{action}[i] = -1 + \frac{2 \cdot \text{clip}(6400 - \text{last\_tokens}[i] - 1, 0, 254) + 1}{255}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">action</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.397em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.052em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">255</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.527em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">⋅</span><span class="mord text mtight"><span class="mord mtight">clip</span></span><span class="mopen mtight">(</span><span class="mord mtight">6400</span><span class="mbin mtight">−</span><span class="mord text mtight"><span class="mord mtight">last_tokens</span></span><span class="mopen mtight">[</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">]</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">254</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><h3 id="VLM-to-VLA">VLM to VLA</h3><ol><li>Training mode: freeze vision model and train language model;</li><li>Training data: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>L</mi><mi>D</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">RLDS</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>e</mi><mi>r</mi><mi>o</mi><mi>b</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Lerobot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">ero</span><span class="mord mathnormal">b</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span></span></span></span> or common dataset, first using libero data?</li><li>Model Architecture: requires implementing an <strong>action tokenizer</strong> and model architecture needs fine-tuning: for example, the image’s position must always be at the very beginning of the prompt.</li><li>Inference Code: using the Libero simulation environment.</li></ol><h3 id="VLM-Pretrained-Result">VLM Pretrained Result</h3><p><img src="/img/Lab/3/loss.png" alt="minimind-v 复现结果"><br>The pretrained model has not been evaluated yet, given the huge loss gap compared to what author reported, I suspect there’s an issue with loading the pre-trained language model.</p><h3 id="Next-week">Next week</h3><ol><li>Complete the VLA structure and training script;</li><li>turning LIBERO dataset to RLDS or Lerobot or common dataset;</li><li>训练时的输入架构？查看openvla</li><li>直接通过训好的 vlm 进行训练</li></ol><br><h2 id="Report-this-week-7-3-–-7-10">Report this week (7.3 – 7.10)</h2><ol><li><strong><code>OpenVLA</code> 架构研究与实现</strong>：深入分析了 <code>OpenVLA</code> 的输入架构，并着手实现了类似的结构。</li><li><strong><code>Action Token</code> 筛选</strong>：从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6400</mn></mrow><annotation encoding="application/x-tex">6400</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6400</span></span></span></span> 个词汇中，筛选出使用频率最低的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>128</mn></mrow><annotation encoding="application/x-tex">128</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">128</span></span></span></span> 个 <code>token</code> 序号，并整理生成了 <code>action_token_map.json</code> 文件。</li><li><strong><code>Libero</code> 数据集处理</strong>：成功下载了 <code>Libero</code> 数据集，并将其处理成模型训练所需的格式。</li></ol><hr><h4 id="Work">Work</h4><h5 id="1-OpenVLA-Input-Structure">1. OpenVLA Input Structure</h5><ul><li><p><strong>输入与输出形状 (Input/Output Shape):</strong></p><table><thead><tr><th style="text-align:left">输入/输出部分</th><th style="text-align:left">维度/形状 (Dimension/Shape)</th></tr></thead><tbody><tr><td style="text-align:left"><code>&lt;bos&gt;</code> (起始符)</td><td style="text-align:left"><code>[bs, 1, hidden_size]</code></td></tr><tr><td style="text-align:left"><code>image features</code> (图像特征)</td><td style="text-align:left"><code>[bs, num * 196, hidden_size]</code></td></tr><tr><td style="text-align:left"><code>text features</code> (文本特征)</td><td style="text-align:left"><code>[bs, text_length, hidden_size]</code></td></tr><tr><td style="text-align:left"><code>action tokens</code> (动作指令)</td><td style="text-align:left"><code>[bs, 7, hidden_size]</code></td></tr><tr><td style="text-align:left"><code>&lt;eos&gt;</code> (结束符)</td><td style="text-align:left"><code>[bs, 1, hidden_size]</code></td></tr></tbody></table></li><li><p><strong>时间错位机制 (Temporal Misalignment):</strong></p><ul><li>模型输入 (Input): <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>u</mi><mi>l</mi><mi>l</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mi>s</mi><mo stretchy="false">[</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">full\_labels[:, :-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li><li>模型输出 (Output): <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>u</mi><mi>l</mi><mi>l</mi><mi mathvariant="normal">_</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>e</mi><mi>l</mi><mi>s</mi><mo stretchy="false">[</mo><mo>:</mo><mo separator="true">,</mo><mn>1</mn><mo>:</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">full\_labels[:, 1:]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">ab</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">]</span></span></span></span></li></ul></li><li><p><strong>损失计算 (Loss Calculation) 策略:</strong></p><ol><li><strong>官方策略</strong>：同时计算 <code>text features</code> 和 <code>action tokens</code> 的损失。</li><li><strong>备选策略</strong>：仅计算 <code>action tokens</code> 的损失。</li></ol></li><li><p><strong>后续优化点:</strong></p><ul><li>根据原论文，当前实现缺少<strong>本体感知特征</strong>和<strong>历史信息特征</strong>，可在后续版本中迭代添加。</li></ul></li></ul><br><h5 id="2-Least-Used-Tokens">2. Least Used Tokens</h5><ul><li><p><strong>发现问题</strong>：与 <code>Llama</code> 不同，<code>minimind</code> 的词汇表并非按使用频率倒序排列。例如，词汇表的最后5个是常见英文词：</p><ul><li><code>&quot;Ġeconomy&quot;: 6395</code></li><li><code>&quot;Ġethically&quot;: 6396</code></li><li><code>&quot;éĻĪ&quot;: 6397</code></li><li><code>&quot;Ġschools&quot;: 6398</code></li><li><code>&quot;Ġnetworks&quot;: 6399</code></li></ul></li><li><p><strong>解决方案</strong>：为精确找到真正低频的 <code>token</code> 以用作 <code>action token</code>，我下载了约 <strong>13G</strong> 的中英文语料数据集，并使用 <code>minimind</code> 的 <code>tokenizer</code> 对其进行词频统计，筛选出频率最低的词汇，并将其索引存入 <code>action_token_map.json</code> 文件。</p></li></ul><br><h5 id="3-Libero-Dataset">3. Libero Dataset</h5><ul><li><p><strong>数据加载</strong>：直接利用 Hugging Face 提供的 <code>lerobot</code> 格式 <code>Libero</code> 数据集，简化了数据获取流程。</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset<br>ds = load_dataset(<span class="hljs-string">&quot;physical-intelligence/libero&quot;</span>)[<span class="hljs-string">&#x27;train&#x27;</span>]<br></code></pre></td></tr></table></figure></li><li><p><strong>数据适配</strong>：对数据集进行了格式处理，当前阶段主要使用 <code>ds['image']</code> (主视角图像), <code>ds['wrist_image']</code> (腕部图像) 和 <code>ds['action']</code> (动作)。任务描述则通过 <code>json</code> 文件加载。</p></li><li><p><strong><code>LiberoDataset</code> 类代码预览</strong>：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">LiberoDataset</span>(<span class="hljs-title class_ inherited__">Dataset</span>):<br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, hf_dataset, transform=<span class="hljs-literal">None</span>, task_file_path=<span class="hljs-string">&#x27;dataset/meta/tasks.jsonl&#x27;</span></span>):<br>      <span class="hljs-variable language_">self</span>.dataset = hf_dataset<br>      <span class="hljs-variable language_">self</span>.transform = transform<br>      <span class="hljs-comment"># 加载任务信息</span><br>      <span class="hljs-variable language_">self</span>.task_info = load_task_info(task_file_path)<br>      <br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):<br>      <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(<span class="hljs-variable language_">self</span>.dataset)<br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, idx</span>):<br>      sample = <span class="hljs-variable language_">self</span>.dataset[idx]<br>      image = <span class="hljs-variable language_">self</span>.transform(sample[<span class="hljs-string">&#x27;image&#x27;</span>])<br>      wrist_image = <span class="hljs-variable language_">self</span>.transform(sample[<span class="hljs-string">&#x27;wrist_image&#x27;</span>])<br>      state = torch.tensor(sample[<span class="hljs-string">&#x27;state&#x27;</span>], dtype=torch.float32)<br>      actions = torch.tensor(sample[<span class="hljs-string">&#x27;actions&#x27;</span>], dtype=torch.float32)<br>      task_index = sample[<span class="hljs-string">&#x27;task_index&#x27;</span>]<br>      <br>      <span class="hljs-comment"># 根据 task_index 获取任务描述</span><br>      task_description = <span class="hljs-variable language_">self</span>.task_info.get(task_index, <span class="hljs-string">f&quot;Unknown task <span class="hljs-subst">&#123;task_index&#125;</span>&quot;</span>)<br>      <br>      <span class="hljs-keyword">return</span> &#123;<br>          <span class="hljs-string">&#x27;image&#x27;</span>: image,<br>          <span class="hljs-string">&#x27;wrist_image&#x27;</span>: wrist_image,<br>          <span class="hljs-string">&#x27;state&#x27;</span>: state,<br>          <span class="hljs-string">&#x27;actions&#x27;</span>: actions,<br>          <span class="hljs-string">&#x27;task_description&#x27;</span>: task_description,<br>      &#125;<br></code></pre></td></tr></table></figure></li></ul><hr><h4 id="Problems">Problems</h4><ol><li><strong>模型格式问题</strong>：发现 <code>minimind-v</code> 预训练模型似乎没有可用的 <code>.pth</code> 格式权重。加载官方提供的 <code>.pth</code> 文件会导致输出乱码，只有 <code>Hugging Face</code> 格式的 <code>model.bin</code> 则可以正常使用。这是否意味着我们还是需要再进行预训练？</li><li><strong>语言能力限制</strong>：当前模型主要处理中文，这是否会对 <code>VLA</code> (Vision-Language-Action) 模型的性能，产生负面影响？</li></ol><p><br><br></p><h2 id="Report-this-week-7-10-–-7-17">Report this week (7.10 – 7.17)</h2><ol><li>成功让训练代码跑起来，但是结果还没有进行验证，也就是并没有训练到底，有可能训练代码存在问题；<br><img src="/img/Lab/4/train.png" alt="train"></li><li>全量微调正好需要吃掉24G显存</li><li>下周先训练一下这个模型，并且查看一下代码是否有问题，写一下 evaluation 的脚本</li><li>感觉可以在训练时给长任务分配大一点权重。</li></ol><p><br><br></p><h2 id="Report-this-week-7-17-–-7-24">Report this week (7.17 – 7.24)</h2><ol><li>训练代码中增加动作正确率检测环节；</li><li>写好Libero的evaluation代码，但是还没有检查细节；</li><li>对数据集的处理进行了一些改动；</li></ol><h3 id="Training-Scripts">Training Scripts</h3><p>训练代码中增加动作检测环节：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">compute_action_metrics</span>(<span class="hljs-params">outputs, batch, action_tokenizer: ActionTokenizer, num_vision_patches=<span class="hljs-number">196</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    计算动作预测准确率</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    action_preds = outputs[<span class="hljs-string">&#x27;logits&#x27;</span>][:, <span class="hljs-number">2</span> * num_vision_patches + <span class="hljs-number">1</span>:, ].argmax(dim=<span class="hljs-number">2</span>)<br>    action_gt = batch[<span class="hljs-string">&#x27;input_ids&#x27;</span>][:, <span class="hljs-number">1</span>:].to(action_preds.device)<br>    <br>    <span class="hljs-comment"># 创建mask来标识真正的动作token位置</span><br>    action_token_ids = <span class="hljs-built_in">set</span>(action_tokenizer.action_to_token_id.values())<br>    mask = torch.zeros_like(action_gt, dtype=torch.<span class="hljs-built_in">bool</span>)<br>    <span class="hljs-keyword">for</span> token_id <span class="hljs-keyword">in</span> action_token_ids:<br>        mask |= (action_gt == token_id)<br>    <span class="hljs-keyword">if</span> mask.<span class="hljs-built_in">sum</span>() == <span class="hljs-number">0</span>: <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br>    <br>    <span class="hljs-comment"># 计算准确率</span><br>    correct_preds = (action_preds == action_gt) &amp; mask<br>    action_accuracy = correct_preds.<span class="hljs-built_in">sum</span>().<span class="hljs-built_in">float</span>() / mask.<span class="hljs-built_in">sum</span>().<span class="hljs-built_in">float</span>()<br>    <br>    <span class="hljs-keyword">return</span> action_accuracy<br></code></pre></td></tr></table></figure><p>目前动作输出正确率如下，不知道结果是否正常。</p><table><thead><tr><th>训练轮数</th><th>训练集Loss</th><th>测试集Loss</th><th>训练集动作准确率</th><th>测试集动作准确率</th></tr></thead><tbody><tr><td>1</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.7787</mn></mrow><annotation encoding="application/x-tex">0.7787</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7787</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.8006</mn></mrow><annotation encoding="application/x-tex">0.8006</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.8006</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1609</mn></mrow><annotation encoding="application/x-tex">0.1609</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1609</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1416</mn></mrow><annotation encoding="application/x-tex">0.1416</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1416</span></span></span></span></td></tr><tr><td>2</td><td>0.6424</td><td>0.8550</td><td>0.1272</td><td>0.1165</td></tr><tr><td>3</td><td>0.5552</td><td>0.9446</td><td>0.1001</td><td>0.1016</td></tr><tr><td>4</td><td>0.4880</td><td>1.0350</td><td>0.0862</td><td>0.0949</td></tr><tr><td>5</td><td>0.4332</td><td>1.1186</td><td>0.0785</td><td>0.0793</td></tr></tbody></table><h3 id="LIBERO-Evaluation">LIBERO Evaluation</h3><p>这个代码已经写好，现在正在检查细节是否有问题，预计下周可以测试一下训练出来的模型是否有效果。</p><h3 id="Dataset">Dataset</h3><ul><li>对main image 和wrist image使用不同的归一化代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-variable language_">self</span>.stats = load_stats(<span class="hljs-variable language_">self</span>.stats_path)<br>      <span class="hljs-variable language_">self</span>.main_tfs = transforms.Compose([<br>          transforms.Resize((<span class="hljs-number">224</span>, <span class="hljs-number">224</span>)),<br>          transforms.ToTensor(),<br>          transforms.Normalize(<br>              mean=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;image&#x27;</span>][<span class="hljs-string">&#x27;mean&#x27;</span>],      <span class="hljs-comment"># [0.485, 0.456, 0.406]</span><br>              std=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;image&#x27;</span>][<span class="hljs-string">&#x27;std&#x27;</span>]         <span class="hljs-comment"># [0.229, 0.224, 0.225]</span><br>          )<br>      ])<br>      <span class="hljs-variable language_">self</span>.wrist_tfs = transforms.Compose([<br>          transforms.Resize((<span class="hljs-number">224</span>, <span class="hljs-number">224</span>)),<br>          transforms.ToTensor(),<br>          transforms.Normalize(<br>              mean=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;wrist_image&#x27;</span>][<span class="hljs-string">&#x27;mean&#x27;</span>], <span class="hljs-comment"># [0.512, 0.398, 0.321]</span><br>              std=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;wrist_image&#x27;</span>][<span class="hljs-string">&#x27;std&#x27;</span>]    <span class="hljs-comment"># [0.201, 0.189, 0.243]</span><br>          )<br>      ])<br></code></pre></td></tr></table></figure></li><li>由于我认为动作准确率不高，所以对action数据，根据openvla论文中说的，首先收集好了每个动作维度的1st和99th中位数，将其放入stats.json中，接下来以它们为min action和max action，这样就可以减少异常动作的影响。（这个因为有7维动作，似乎需要7个min和max，但openvla中好像没有这个考虑，具体代码我还在实现中。）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">compute_and_save_action_quantiles</span>(<span class="hljs-params">self, quantiles=[<span class="hljs-number">1</span>, <span class="hljs-number">99</span>]</span>):<br>      <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">      计算动作数据的分位数并保存到stats.json文件</span><br><span class="hljs-string">      quantiles: 要计算的分位数列表，例如 [1, 99]</span><br><span class="hljs-string">      stats_path: stats.json文件路径</span><br><span class="hljs-string">      &quot;&quot;&quot;</span><br>      stats_path = <span class="hljs-variable language_">self</span>.stats_path<br>      total_samples = <span class="hljs-built_in">len</span>(<span class="hljs-variable language_">self</span>.dataset)<br>      all_actions = []<br>      <br>      <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(total_samples), desc=<span class="hljs-string">&quot;Loading actions&quot;</span>):<br>          sample = <span class="hljs-variable language_">self</span>.dataset[i]<br>          actions = np.array(sample[<span class="hljs-string">&#x27;actions&#x27;</span>])<br>          all_actions.append(actions)<br>      <br>      all_actions = np.array(all_actions)<br>      <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Action data shape: <span class="hljs-subst">&#123;all_actions.shape&#125;</span>&quot;</span>)<br>      <br>      <span class="hljs-comment"># 计算每个维度的分位数</span><br>      action_quantiles = &#123;&#125;<br>      <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> quantiles: <br>          action_quantiles[<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;q&#125;</span>th_percentile&#x27;</span>] = np.percentile(all_actions, q, axis=<span class="hljs-number">0</span>).tolist()<br>      <br>      <span class="hljs-comment"># 读取现有的stats.json</span><br>      <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(stats_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>          stats_data = json.load(f)<br><br>      <span class="hljs-comment"># 更新actions部分</span><br>      <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;actions&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> stats_data: stats_data[<span class="hljs-string">&#x27;actions&#x27;</span>] = &#123;&#125;<br>      stats_data[<span class="hljs-string">&#x27;actions&#x27;</span>].update(action_quantiles)<br>      <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(stats_path, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>          json.dump(stats_data, f, indent=<span class="hljs-number">4</span>, ensure_ascii=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure></li></ul><h3 id="Problems-2">Problems</h3><p>我觉得可以增加一些框架，对state进行处理。</p><p><br><br></p><h2 id="Report-this-week-7-25-–-7-31">Report this week (7.25 – 7.31)</h2><ol><li>给ActionTokenizer每个维度加上1st - 99th 分位数；</li><li>完成大部分的推理代码撰写，但是还没有调试通KV cache的部分；</li><li>完成ddp加速训练代码的撰写。</li><li>完成对action-only的loss计算。</li></ol><h3 id="1st-Percentile">1st Percentile</h3><p>实现方式是把分位数提取出来放进config中，然后在解码的时候，根据不同的动作维度进行解码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ActionTokenizer</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    一个动作分词器，使用预先计算好的、非连续的低频词元ID作为动作空间。</span><br><span class="hljs-string">    支持每个动作维度使用不同的最小值和最大值。</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params"></span><br><span class="hljs-params">        self,</span><br><span class="hljs-params">        tokenizer: PreTrainedTokenizerBase,</span><br><span class="hljs-params">        action_token_map_path: <span class="hljs-built_in">str</span>,</span><br><span class="hljs-params">        min_actions: <span class="hljs-type">List</span>[<span class="hljs-built_in">float</span>] = <span class="hljs-literal">None</span>,</span><br><span class="hljs-params">        max_actions: <span class="hljs-type">List</span>[<span class="hljs-built_in">float</span>] = <span class="hljs-literal">None</span>,</span><br><span class="hljs-params">        bins: <span class="hljs-built_in">int</span> = <span class="hljs-number">256</span>,</span><br><span class="hljs-params">    </span>) -&gt; <span class="hljs-literal">None</span>:<br>        <span class="hljs-variable language_">self</span>.tokenizer = tokenizer<br>        <span class="hljs-variable language_">self</span>.n_bins = bins<br>        <span class="hljs-variable language_">self</span>.min_actions = np.array(min_actions)<br>        <span class="hljs-variable language_">self</span>.max_actions = np.array(max_actions)<br>        <span class="hljs-variable language_">self</span>.action_dims = <span class="hljs-built_in">len</span>(min_actions)<br><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(action_token_map_path, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            action_map_str_keys = json.load(f)<br>            <span class="hljs-variable language_">self</span>.action_to_token_id = &#123;<span class="hljs-built_in">int</span>(k): v <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> action_map_str_keys.items()&#125;<br>            <br>        <span class="hljs-variable language_">self</span>.token_id_to_action = &#123;v: k <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.action_to_token_id.items()&#125;<br><br>        <span class="hljs-comment"># 为每个动作维度创建bins和bin_centers</span><br>        <span class="hljs-variable language_">self</span>.bins = []<br>        <span class="hljs-variable language_">self</span>.bin_centers = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-variable language_">self</span>.action_dims):<br>            bins_i = np.linspace(<span class="hljs-variable language_">self</span>.min_actions[i], <span class="hljs-variable language_">self</span>.max_actions[i], <span class="hljs-variable language_">self</span>.n_bins)<br>            bin_centers_i = (bins_i[:-<span class="hljs-number">1</span>] + bins_i[<span class="hljs-number">1</span>:]) / <span class="hljs-number">2.0</span><br>            <span class="hljs-variable language_">self</span>.bins.append(bins_i)<br>            <span class="hljs-variable language_">self</span>.bin_centers.append(bin_centers_i)<br>        <br>        <span class="hljs-variable language_">self</span>.bins = np.array(<span class="hljs-variable language_">self</span>.bins)                <span class="hljs-comment"># shape: [action_dims, n_bins]</span><br>        <span class="hljs-variable language_">self</span>.bin_centers = np.array(<span class="hljs-variable language_">self</span>.bin_centers)  <span class="hljs-comment"># shape: [action_dims, n_bins-1]</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encode</span>(<span class="hljs-params">self, action: np.ndarray</span>) -&gt; np.ndarray:<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        核心编码功能：将连续的动作值编码为对应的【词元ID数组】。</span><br><span class="hljs-string">        这是用于模型训练的主要函数。</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        action = np.array(action)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(action.shape) == <span class="hljs-number">1</span>: <span class="hljs-comment"># 单个动作: [action_dims]</span><br>            action = action.reshape(<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>)<br>            is_single = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">else</span>: is_single = <span class="hljs-literal">False</span>  <span class="hljs-comment"># 批量动作: [batch_size, action_dims]</span><br>        <br>        batch_size, action_dims = action.shape<br>        token_ids = np.zeros_like(action, dtype=<span class="hljs-built_in">int</span>)<br>        <br>        <span class="hljs-keyword">for</span> dim <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(action_dims):<br>            clipped_action = np.clip(action[:, dim], <span class="hljs-variable language_">self</span>.min_actions[dim], <span class="hljs-variable language_">self</span>.max_actions[dim])<br>            discretized_bins = np.digitize(clipped_action, <span class="hljs-variable language_">self</span>.bins[dim]) - <span class="hljs-number">1</span><br>            discretized_bins = np.clip(discretized_bins, <span class="hljs-number">0</span>, <span class="hljs-variable language_">self</span>.n_bins - <span class="hljs-number">1</span>)<br>            mapper = np.vectorize(<span class="hljs-variable language_">self</span>.action_to_token_id.get)<br>            token_ids[:, dim] = mapper(discretized_bins)<br>        <br>        <span class="hljs-comment"># 恢复原始形状</span><br>        <span class="hljs-keyword">if</span> is_single:<br>            token_ids = token_ids.squeeze(<span class="hljs-number">0</span>)<br>        <br>        <span class="hljs-keyword">return</span> token_ids<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decode_token_ids_to_actions</span>(<span class="hljs-params">self, action_token_ids: np.ndarray</span>) -&gt; np.ndarray:<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        将token IDs解码为动作值</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        action_token_ids = np.array(action_token_ids)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(action_token_ids.shape) == <span class="hljs-number">1</span>: <span class="hljs-comment"># 单个动作: [action_dims]</span><br>            action_token_ids = action_token_ids.reshape(<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>)<br>            is_single = <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">else</span>: is_single = <span class="hljs-literal">False</span> <span class="hljs-comment"># 批量动作: [batch_size, action_dims]</span><br>        <br>        batch_size, action_dims = action_token_ids.shape<br>        actions = np.zeros_like(action_token_ids, dtype=<span class="hljs-built_in">float</span>)<br>        <br>        <span class="hljs-keyword">for</span> dim <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(action_dims):<br>            mapper = np.vectorize(<span class="hljs-variable language_">self</span>.token_id_to_action.get)<br>            discretized_actions = mapper(action_token_ids[:, dim])<br>            actions[:, dim] = <span class="hljs-variable language_">self</span>.bin_centers[dim][discretized_actions]<br>        <br>        <span class="hljs-comment"># 恢复原始形状</span><br>        <span class="hljs-keyword">if</span> is_single:<br>            actions = actions.squeeze(<span class="hljs-number">0</span>)<br>        <br>        <span class="hljs-keyword">return</span> actions<br></code></pre></td></tr></table></figure><h3 id="DDP">DDP</h3><ol><li>初始化：获得当前rank（0为主进程），所有的print信息只在主进程上打印</li><li>数据集需要并行处理：用DistributedSampler<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">train_sampler = DistributedSampler(train_dataset, num_replicas=world_size, rank=rank)<br>val_sampler = DistributedSampler(val_dataset, num_replicas=world_size, rank=rank, shuffle=<span class="hljs-literal">False</span>)<br><br>sampler.set_epoch(epoch) <span class="hljs-comment"># 保证每个epoch数据打乱的方式不同</span><br></code></pre></td></tr></table></figure></li><li>模型需要封装：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">model = DDP(model, device_ids=[local_rank], find_unused_parameters=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure>保存模型时，需要保存model.module.state_dict()。 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.save(model.module.state_dict(), checkpoint_path)<br></code></pre></td></tr></table></figure></li></ol><h3 id="Action-Only-Loss">Action Only Loss</h3><p>思路：在输出的结果中，找到那些是action_token 的输出位置，并将其设置为计算loss。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 创建action token mask</span><br>action_only_labels = text_labels.clone()<br>action_mask = torch.zeros_like(action_only_labels, dtype=torch.<span class="hljs-built_in">bool</span>)<br>action_token_ids = <span class="hljs-built_in">set</span>(<span class="hljs-variable language_">self</span>.action_tokenizer.action_to_token_id.values())<br><span class="hljs-keyword">for</span> token_id <span class="hljs-keyword">in</span> action_token_ids:<br>   action_mask |= (action_only_labels == token_id)<br><br><span class="hljs-comment"># 将非action tokens设为IGNORE_INDEX</span><br>action_only_labels[~action_mask] = IGNORE_INDEX<br></code></pre></td></tr></table></figure><p>发现有问题。希望的修改方式：严格按照格式，mask掉除了7个action以外的任何位置。</p><h3 id="Evaluate">Evaluate</h3><p>其他部分已经全部调试好，目前只剩下model输出时候的函数predict_action还没有完全实现，主要难点在如何实现kv cache上。</p><ul><li>kv cache: 即只在在没有缓存（即首次调用）时，才进行图像特征的提取和拼接；在有缓存时，则跳过这些操作，因为其所需要的信息都储存在past_key_value中。</li><li>动作token选择：找到概率最高的<strong>动作token</strong>，然后输出。</li></ul><h2 id="本周工作报告-2025年7月31日-8月7日">本周工作报告 (2025年7月31日 - 8月7日)</h2><p>本周主要围绕模型的推理与评估展开，具体工作总结如下：</p><ol><li><strong>实现并验证了 <code>predict_action</code> 函数</strong>：完成了该函数在使用与不使用 KV Cache 两种模式下的代码编写，并通过实验成功验证了其功能。</li><li><strong>运行评估（Evaluation）流程</strong>：成功跑通了完整的评估代码，但在过程中发现模型评估结果存在明显问题。</li><li><strong>问题定位与调试</strong>：当前工作的重心是深入分析并定位评估准确率为零的原因。</li></ol><h3 id="Predict-Action-函数详解"><strong>Predict Action 函数详解</strong></h3><p>此函数是模型推理的核心部分，其功能是根据给定的起始符 <code>&lt;bos&gt;</code> 和图像信息，自回归地生成7个 <code>action dim</code> 数值，这7个值共同构成了机械臂要执行的动作指令。在模型的词汇表中，动作由256个特定的 Token 表示，因此在生成的每一步，我们都选择概率最高（greedy search）的 Token 作为输出。</p><p>KV Cache 是一种通过复用先前已计算 Token 的键（Key）和值（Value）信息，来加速后续 Token 生成的技术。这是一种以空间换取时间的经典优化策略。从下面的推理时间对比可以看出，KV Cache 显著降低了模型的推理延迟。</p><div align="center"><img src="/img/Lab/5/with_kv_cache.png" alt="With KV Cache" width="45%"><img src="/img/Lab/5/no_kv_cache.png" alt="Without KV Cache" width="45%"></div><h3 id="评估代码"><strong>评估代码</strong></h3><p>评估代码现已能顺利运行。其核心依赖于 <code>predict_action</code> 函数的正确实现，该部分的完成是打通整个评估流程的关键。</p><h3 id="当前遇到的问题"><strong>当前遇到的问题</strong></h3><p>在运行评估流程后，发现所有任务的成功率均为0。通过回放任务视频，观察到机械臂在每个步骤都执行完全相同的动作（持续向右移动）。</p><p>为定位问题，我进行了代码调试，发现模型在每次推理时，无论输入如何变化，都输出完全相同的动作指令序列（Action Tokens）。如下图所示，调试信息确认了这一异常现象。目前，我正在深入排查导致此问题的根本原因。</p><video src="/img/Lab/5/video.mp4" controls="controls" style="max-width: 720px; display: block; margin: 0 auto;"></video><br><div align="center">  <figure>    <img src="/img/Lab/5/prob.png" alt="问题所在" width="60%">    <figcaption>调试信息：模型输出了完全相同的Action Token</figcaption>  </figure></div><p>// …existing code…</p><h2 id="本周工作报告（2025年8月14日-8月21日）">本周工作报告（2025年8月14日 - 8月21日）</h2><p>本周由于入职上海人工智能实验室实习以及服务器集群资源紧张，实验进展相对有限。主要工作集中在论文阅读、问题诊断和后续计划制定上。</p><h3 id="Paper-reading">Paper reading</h3><p><code>GAMMA：Graspability-Aware Mobile MAnipulation</code><br>Key word: <code>Grasp</code>, <code>Mobile</code>, <code>Fusion</code></p><h3 id="Debug">Debug</h3><p>通过 <code>ipdb</code> 对模型输出进行深入调试，发现了一个关键问题：</p><ul><li><strong>训练阶段</strong>：模型能够输出多样化的动作token</li><li><strong>评估阶段</strong>：在剔除语言token后，模型总是产生相同的动作token序列</li></ul><h3 id="Prob">Prob</h3><p>基于调试结果，提出以下两个可能的原因：</p><ol><li><strong>推理函数缺陷</strong>：训练过程正常，但 <code>generate</code> 函数的实现存在错误</li><li><strong>训练阶段假象</strong>：训练时观察到的动作多样性可能是由于未剔除language token导致</li></ol><h3 id="Future-Work">Future Work</h3><ol><li><p><strong>损失函数优化</strong>：给loss增加一个非动作惩罚项，并绘制对应的 loss 曲线。</p></li><li><p><strong>评估机制完善</strong>：增加调试信息，在evaluation的时候，输入两张图片，看看他输出的结果和目标结果是否一样</p></li></ol><p><em><strong>多个相同输入输出，看eval时能不能输出对应的值。</strong></em></p><p><br><br></p><h2 id="本周工作报告（2025年8月12日-8月28日）">本周工作报告（2025年8月12日 - 8月28日）</h2><ol><li>深入排查了训练与验证代码，定位并修复了一处关键Bug，使得模型目前能够生成语义正确且有效的动作指令；</li><li>集成了Weights &amp; Biases (W&amp;B) 工具，用于实时监控并记录训练过程中的各项关键指标；</li><li>对项目整体代码进行了一次大规模重构，显著优化了代码结构，提升了可读性与可维护性。</li></ol><h3 id="Bug-Find">Bug Find</h3><ol><li><p>首先，为排查模型是否在训练初期就无法生成动作Token，编写了<code>detect_action</code>函数进行检测。实验表明，此问题并非根本原因：在首个Epoch训练仅20秒后，模型输出已全部为有效的动作Token。<br><img src="/img/Lab/5/detect_action.png" alt="detect action函数检测结果"></p></li><li><p>其次，对模型的损失（Loss）曲线进行了分析。下图展示了使用4块GPU并行训练20个Epochs后的结果：</p> <div align="center"> <table>     <tr>     <td align="center"><b>训练集 Loss (Batch)</b></td>     <td align="center"><b>训练集动作准确率 (Batch)</b></td>     </tr>     <tr>     <td><img src="/img/Lab/5/train_loss.png" alt="Train Loss" width="100%"></td>     <td><img src="/img/Lab/5/train_action_acc.png" alt="Train Action Accuracy" width="100%"></td>     </tr>     <tr>     <td align="center"><b>验证集 Loss (Epoch)</b></td>     <td align="center"><b>验证集动作准确率 (Epoch)</b></td>     </tr>     <tr>     <td><img src="/img/Lab/5/val_loss.png" alt="Validation Loss" width="100%"></td>     <td><img src="/img/Lab/5/val_action_acc.png" alt="Validation Action Accuracy" width="100%"></td>     </tr> </table> </div> 从图中可以看出，各项指标曲线的整体趋势符合预期，但在第8个Epoch后模型开始出现显著的过拟合现象。后续实验也证实，严重过拟合的模型在评估任务中表现不佳。</li><li><p>最后，通过对评估（Evaluation）代码的逐行审查，定位了问题的根源：</p></li></ol><ul><li><strong>训练阶段</strong>：由于Libero数据集提供的图像尺寸为(256, 256)，而CLIP模型要求输入为(224, 224)，因此数据预处理流程中包含了对图像的缩放（Resize）和归一化操作；</li><li><strong>验证阶段</strong>：直接从Libero仿真环境中获取了(224, 224)尺寸的图像，无需进行缩放操作，导致了训练与推理之间的数据处理不一致（Data Gap），这是导致评估失败的核心原因。</li></ul><ol start="4"><li>在修复问题后，我对单个轨迹进行了评估，不同训练阶段（Epoch）的模型表现如下： <div align="center"> <table> <tr>     <td align="center"><b>Epoch 1</b></td>     <td align="center"><b>Epoch 2</b></td>     <td align="center"><b>Epoch 3</b></td> </tr> <tr>     <td><video src="/img/Lab/5/epoch_1.mp4" controls="controls" style="max-width: 100%;"></video></td>     <td><video src="/img/Lab/5/epoch_2.mp4" controls="controls" style="max-width: 100%;"></video></td>     <td><video src="/img/Lab/5/epoch_3.mp4" controls="controls" style="max-width: 100%;"></video></td> </tr> <tr>     <td align="center"><b>Epoch 4</b></td>     <td align="center"><b>Epoch 8</b></td>     <td align="center"><b>Epoch 9</b></td> </tr> <tr>     <td><video src="/img/Lab/5/epoch_4.mp4" controls="controls" style="max-width: 100%;"></video></td>     <td><video src="/img/Lab/5/epoch_8.mp4" controls="controls" style="max-width: 100%;"></video></td>     <td><video src="/img/Lab/5/epoch_9.mp4" controls="controls" style="max-width: 100%;"></video></td> </tr> </table> </div> 实验发现，自第9个Epoch起，模型便无法成功完成任务，这与先前观察到的过拟合现象相吻合。</li></ol><h3 id="Beautify-project-code">Beautify project code</h3><ol><li>为提升代码的可维护性和模块化程度，原先冗长的<code>train_vla_ddp.py</code>脚本被拆分为多个独立模块，新的项目结构如下：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">trainer/<br>├── config.py         <span class="hljs-comment"># 配置与环境变量加载</span><br>├── data_utils.py     <span class="hljs-comment"># 数据集处理与加载</span><br>├── ddp_utils.py      <span class="hljs-comment"># 分布式训练（DDP）设置</span><br>├── eval.py           <span class="hljs-comment"># 评估脚本（待完善）</span><br>├── __init__.py<br>├── metrics.py        <span class="hljs-comment"># 动作准确率等指标计算</span><br>├── model_utils.py    <span class="hljs-comment"># 模型加载与初始化</span><br>├── test.py           <span class="hljs-comment"># 用于逻辑测试的简化训练脚本</span><br>└── train_vla_ddp.py  <span class="hljs-comment"># 待重构完成并验证后删除</span><br></code></pre></td></tr></table></figure><h3 id="Next-Week">Next Week</h3><ol><li>完善eval.py脚本，对所有任务进行全面的成功率评估；</li><li>调研并尝试新的模型结构，如smol-VLA中采用的Diffusion模型；</li><li>在更多样的数据集上测试当前模型的泛化能力。</li></ol><p><br><br></p><h2 id="本周工作报告（2025年8月28日-2025年9月4日）">本周工作报告（2025年8月28日 - 2025年9月4日）</h2><ol><li>完善eval.py脚本，对所有任务进行全面的成功率评估</li><li>为模型的图片输入增加数据增强模块，以抑制过拟合现象</li><li>为模型添加state信息输入功能</li></ol><h3 id="Data-Augumentation">Data Augumentation</h3><p>对输入的主相机和手腕相机图像进行随机裁剪、亮度变化，并最终完成归一化处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">LiberoDataset</span>(<span class="hljs-title class_ inherited__">Dataset</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, ds, task_file_path=<span class="hljs-string">&#x27;dataset/meta/tasks.jsonl&#x27;</span>, stats_path=<span class="hljs-string">&#x27;dataset/meta/stats.json&#x27;</span></span>):<br>        <span class="hljs-variable language_">self</span>.dataset = ds<br>        <span class="hljs-variable language_">self</span>.stats_path = stats_path<br>        <span class="hljs-variable language_">self</span>.task_info = load_task_info(task_file_path)<br>        <span class="hljs-variable language_">self</span>.stats = load_stats(<span class="hljs-variable language_">self</span>.stats_path)<br>        <span class="hljs-comment"># 图像增强以及归一化</span><br>        <span class="hljs-variable language_">self</span>.same_tfs = T.Compose([T.RandomResizedCrop((<span class="hljs-number">224</span>, <span class="hljs-number">224</span>), scale=(<span class="hljs-number">0.8</span>, <span class="hljs-number">1.0</span>), ratio=(<span class="hljs-number">0.9</span>, <span class="hljs-number">1.1</span>))])<br>        <span class="hljs-variable language_">self</span>.main_tfs = T.Compose([<br>            T.ColorJitter(brightness=<span class="hljs-number">0.2</span>, contrast=<span class="hljs-number">0.2</span>, saturation=<span class="hljs-number">0.2</span>, hue=<span class="hljs-number">0.1</span>),<br>            T.ToImage(),<br>            T.ToDtype(torch.float32, scale=<span class="hljs-literal">True</span>),<br>            T.Normalize(<br>                mean=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;image&#x27;</span>][<span class="hljs-string">&#x27;mean&#x27;</span>],<br>                std=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;image&#x27;</span>][<span class="hljs-string">&#x27;std&#x27;</span>]<br>            )<br>        ])<br>        <span class="hljs-variable language_">self</span>.wrist_tfs = T.Compose([<br>            T.ColorJitter(brightness=<span class="hljs-number">0.2</span>, contrast=<span class="hljs-number">0.2</span>, saturation=<span class="hljs-number">0.2</span>, hue=<span class="hljs-number">0.1</span>),<br>            T.ToImage(),<br>            T.ToDtype(torch.float32, scale=<span class="hljs-literal">True</span>),<br>            T.Normalize(<br>                mean=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;wrist_image&#x27;</span>][<span class="hljs-string">&#x27;mean&#x27;</span>],<br>                std=<span class="hljs-variable language_">self</span>.stats[<span class="hljs-string">&#x27;wrist_image&#x27;</span>][<span class="hljs-string">&#x27;std&#x27;</span>]<br>            )<br>        ])<br></code></pre></td></tr></table></figure><p>训练完成后，从损失函数对比图可以看出，过拟合现象得到了明显缓解</p><img src="/img/Lab/6/loss.png" alt="数据增强后的loss曲线" width="100%"><h3 id="State-Input">State Input</h3><p>为了提升模型性能，将机械臂的关节角度以及夹爪信息同样输入到模型中。 将这8维状态信息进行归一化处理后，通过MLP投影到与token相同的隐藏层维度，作为1个token进行输入。</p><h3 id="Problem">Problem</h3><ol><li>怀疑数据集的state数据存在问题：观察发现大部分数据的最后两维数值相反，推测应该是夹爪的开合信息；但franka机械臂除夹爪外应有7个自由度，而最终state仅有8维，似乎franka的最后一个自由度被忽略了</li><li>在引入数据增强后，虽然模型的损失曲线表现正常，但模型却只学会了输出一种动作——保持静止不动！<br><img src="a.png" alt="alt text"> <img src="b.png" alt="alt text"><br>第一张图片显示，所有输出的token id都是各自维度中最接近0值的那个</li></ol><p>可能原因：数据增强参数设置过于激进</p><p><strong>看pi0源码</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法总结</title>
    <link href="/2025/05/12/%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <url>/2025/05/12/%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1>二分法</h1><p>下面是二分法的经典题目和代码：</p><h2 id="题目描述">题目描述</h2><blockquote><p>Problem: <a href="https://leetcode.cn/problems/search-insert-position/description/">T35：搜索插入位置</a><br>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p></blockquote><h2 id="Solve">Solve</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">searchInsert</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = nums.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(left &lt;= right)<br>        &#123;<br>            <span class="hljs-type">int</span> mid = (right - left) / <span class="hljs-number">2</span> + left;<br>            <span class="hljs-keyword">if</span>(nums[mid] == target) <span class="hljs-keyword">return</span> mid;<br>            <span class="hljs-keyword">if</span>(nums[mid] &gt; target) right = mid - <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">else</span> left = mid + <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> left;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h1>回溯法</h1><h2 id="模板">模板</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C++"><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">backtracking</span><span class="hljs-params">(参数)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (终止条件) &#123;<br>        存放结果;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br> <br>    <span class="hljs-keyword">for</span> (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) &#123;<span class="hljs-comment">//注意i=0,i=start的区别</span><br>        处理节点;<br>        <span class="hljs-built_in">backtracking</span>(路径，选择列表); <span class="hljs-comment">// 递归  注意(i)和(i++)的区别  后面会懂</span><br>        回溯，撤销处理结果<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>下面是回溯法的经典题目和代码：</p><h2 id="题目描述-2">题目描述</h2><blockquote><p>Problem: <a href="https://leetcode.cn/problems/permutations/description/?envType=study-plan-v2&amp;envId=top-100-liked">T46：全排列</a><br>给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。</p></blockquote><h2 id="Solve-2">Solve</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; res;<br>    vector&lt;<span class="hljs-type">int</span>&gt; is_used;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">back</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt; tmp, vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, vector&lt;<span class="hljs-type">int</span>&gt; is_used)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(tmp.<span class="hljs-built_in">size</span>() == nums.<span class="hljs-built_in">size</span>()) <span class="hljs-comment">// 终止条件</span><br>        &#123;<br>            res.<span class="hljs-built_in">push_back</span>(tmp);<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!is_used[i])<br>            &#123;<br>                is_used[i] = <span class="hljs-number">1</span>; <span class="hljs-comment">// 已经使用过</span><br>                tmp.<span class="hljs-built_in">push_back</span>(nums[i]);<br><br>                <span class="hljs-built_in">back</span>(tmp, nums, is_used);<br>                tmp.<span class="hljs-built_in">pop_back</span>();<br>                is_used[i] = <span class="hljs-number">0</span>; <span class="hljs-comment">// 还原回去</span><br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">permute</span>(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums) &#123;<br>        is_used = <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(nums.<span class="hljs-built_in">size</span>(), <span class="hljs-number">0</span>);<br>        vector&lt;<span class="hljs-type">int</span>&gt; tmp;<br>        <span class="hljs-built_in">back</span>(tmp, nums, is_used);<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h1>输入输出</h1><h2 id="万能库">万能库</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br></code></pre></td></tr></table></figure><h2 id="字符串">字符串</h2><ul><li>无空格字符串输入, 翻转  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">string s; cin &gt;&gt; s; <br><span class="hljs-built_in">reverse</span>(s.<span class="hljs-built_in">begin</span>(), s.<span class="hljs-built_in">end</span>());<br></code></pre></td></tr></table></figure></li><li>单个字符输入字符串，可以更精细的调整  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">string s; <span class="hljs-type">char</span> ch;<br><span class="hljs-keyword">while</span>(cin.<span class="hljs-built_in">get</span>(ch) &amp;&amp; ch != <span class="hljs-string">&#x27;\n&#x27;</span>)<br>&#123;<br>    s.<span class="hljs-built_in">push_back</span>(ch) <span class="hljs-comment">// 或者 s += ch;</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li>丢弃缓存区的字符  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">cin &gt;&gt; n;<br>cin.<span class="hljs-built_in">ignore</span>(<span class="hljs-number">10</span>); <span class="hljs-comment">// 丢弃10个字符（比如说&#x27;\n&#x27;这样的）</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="保留n位小数输出">保留n位小数输出</h2><ul><li>保留 <code>n</code> 位小数  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; fixed &lt;&lt; <span class="hljs-built_in">setprecision</span>(n) &lt;&lt; c;<br></code></pre></td></tr></table></figure></li><li>保留 <code>n</code> 位有效数字  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; defaultfloat &lt;&lt; <span class="hljs-built_in">setprecision</span>(n) &lt;&lt; c;<br></code></pre></td></tr></table></figure></li><li>整数右对齐，填充 0  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; right &lt;&lt; <span class="hljs-built_in">setfill</span>(<span class="hljs-string">&#x27;0&#x27;</span>) &lt;&lt; <span class="hljs-built_in">setw</span>(<span class="hljs-number">9</span>) &lt;&lt; n;<br></code></pre></td></tr></table></figure></li></ul><h2 id="最大-int-使用">最大 int 使用</h2><p>一般在图中表示两个点之间没有边。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = INT_MAX;<br></code></pre></td></tr></table></figure><h2 id="定义-long-long-类型">定义 <code>long long</code> 类型</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">using</span> LL = <span class="hljs-type">long</span> <span class="hljs-type">long</span>; <span class="hljs-comment">// 新方法</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> LL; <span class="hljs-comment">// 兼容性更好</span><br></code></pre></td></tr></table></figure><h2 id="迅速找出最大最小元素">迅速找出最大最小元素</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">vector&lt;<span class="hljs-type">int</span>&gt; a = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>&#125;;<br><span class="hljs-type">int</span> maxi = *<span class="hljs-built_in">max_element</span>(a.<span class="hljs-built_in">begin</span>(), a.<span class="hljs-built_in">end</span>());<br><span class="hljs-type">int</span> mini = *<span class="hljs-built_in">min_element</span>(a.<span class="hljs-built_in">begin</span>(), a.<span class="hljs-built_in">end</span>());<br></code></pre></td></tr></table></figure><h2 id="Switch-写法">Switch 写法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">switch</span> (n) <span class="hljs-comment">// 注意这个n不能是string，只能是char这样</span><br>&#123;<br>    <span class="hljs-keyword">case</span> n1:<br>        pass;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> n2:<br>        pass;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        pass;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="String-类型">String 类型</h2><ul><li>转为 int，int 转为 string<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">int</span> num = <span class="hljs-built_in">stoi</span>(<span class="hljs-string">&quot;789&quot;</span>);<br>string s = <span class="hljs-built_in">to_string</span>(<span class="hljs-number">789</span>);<br></code></pre></td></tr></table></figure></li></ul><h1>栈</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">stack&lt;<span class="hljs-type">int</span>&gt; stk;<br><span class="hljs-type">int</span> a = <span class="hljs-number">5</span>;<br>stk.<span class="hljs-built_in">push</span>(a);<br><span class="hljs-type">int</span> b = stk.<span class="hljs-built_in">top</span>(); <span class="hljs-comment">// 返回a</span><br>stk.<span class="hljs-built_in">pop</span>(); <span class="hljs-comment">// 将 a 弹出</span><br></code></pre></td></tr></table></figure><h1>队列</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">queue&lt;<span class="hljs-type">int</span>&gt; que;<br><span class="hljs-type">int</span> a = <span class="hljs-number">5</span>;<br>que.<span class="hljs-built_in">push</span>(a);<br><span class="hljs-type">int</span> b = que.<span class="hljs-built_in">front</span>(); <span class="hljs-comment">// 返回a</span><br>que.<span class="hljs-built_in">pop</span>();<br></code></pre></td></tr></table></figure><h1>链表</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// 类定义</span><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">ListNode</span> &#123;<br>    <span class="hljs-type">int</span> val;<br>    ListNode* next;<br>    <span class="hljs-built_in">ListNode</span>(<span class="hljs-type">int</span> x) : <span class="hljs-built_in">val</span>(x), <span class="hljs-built_in">next</span>(<span class="hljs-literal">nullptr</span>) &#123;&#125;<br>&#125;;<br><br>ListNode* head = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ListNode</span>(<span class="hljs-number">-1</span>); <span class="hljs-comment">// 一般来说，链表操作需要一个头节点！</span><br>ListNode* p = head-&gt;next;<br><span class="hljs-comment">// 在p后插入一个节点，值为val1</span><br>ListNode *tmp = p-&gt;next; <span class="hljs-comment">// 保存一开始p后面的节点</span><br>ListNode *new_node = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ListNode</span>(val1);<br>p-&gt;next = new_node;<br>new_node-&gt;next = tmp;<br><br><span class="hljs-comment">// 删除p后面的这个节点</span><br>ListNode* node = p-&gt;next;<br>p-&gt;next = p-&gt;next-&gt;next;<br><span class="hljs-keyword">delete</span> node; <span class="hljs-comment">// 释放内存</span><br></code></pre></td></tr></table></figure><h1>哈希表</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++">unordered_map&lt;string, <span class="hljs-type">int</span>&gt; student_scores; <span class="hljs-comment">// 类定义</span><br>student_scores[<span class="hljs-string">&quot;Li Ming&quot;</span>] = <span class="hljs-number">95</span>; <span class="hljs-comment">// 插入新元素</span><br>student_scores[<span class="hljs-string">&quot;Li Ming&quot;</span>] = <span class="hljs-number">98</span>; <span class="hljs-comment">// 修改旧元素</span><br><br><span class="hljs-comment">// 查找元素</span><br><span class="hljs-type">const</span> string to_find = <span class="hljs-string">&quot;Li Ming&quot;</span>;<br><span class="hljs-keyword">auto</span> iter = student_scores.<span class="hljs-built_in">find</span>(to_find);<br><span class="hljs-keyword">if</span>(iter != student_scores.<span class="hljs-built_in">end</span>()) cout &lt;&lt; iter-&gt;first &lt;&lt; <span class="hljs-string">&#x27; &#x27;</span> &lt;&lt; iter-&gt;second;<br><br><span class="hljs-comment">//  遍历哈希表</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span>&amp; pair : student_scores) &#123;<br>    cout &lt;&lt; pair.first &lt;&lt; <span class="hljs-string">&#x27; &#x27;</span> &lt;&lt; pair.second; <span class="hljs-comment">// 注意pair不是指针！</span><br>&#125;<br><br><span class="hljs-comment">// 删除哈希表元素</span><br>student_scores.<span class="hljs-built_in">erase</span>(<span class="hljs-string">&quot;Li Ming&quot;</span>);<br><br><span class="hljs-comment">// 显式赋值</span><br>unordered_map&lt;<span class="hljs-type">char</span>, <span class="hljs-type">int</span>&gt; score = &#123;&#123;<span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-number">4</span>&#125;, &#123;<span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-number">3</span>&#125;&#125;;<br></code></pre></td></tr></table></figure><h1>图算法</h1><ol><li><p><code>Dijkstra</code> 和 最小生成树：都是贪心算法，每次寻找<code>dis[i]</code>最小的点，将它放到<code>visited</code>数组中，然后再根据这个变化去更新<code>dis</code>数组。下面是最小生成树示例：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">miniSpanningTree</span><span class="hljs-params">(<span class="hljs-type">int</span> n, <span class="hljs-type">int</span> m, vector&lt;vector&lt;<span class="hljs-type">int</span>&gt; &gt;&amp; cost)</span> </span>&#123;<br>    <span class="hljs-comment">// write code here</span><br>    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">tab</span>(n + <span class="hljs-number">1</span>, <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(n + <span class="hljs-number">1</span>, INT_MAX));<br>    <span class="hljs-keyword">for</span>(vector&lt;<span class="hljs-type">int</span>&gt; c : cost)<br>    &#123;<br>        tab[c[<span class="hljs-number">0</span>]][c[<span class="hljs-number">1</span>]] = <span class="hljs-built_in">min</span>(tab[c[<span class="hljs-number">0</span>]][c[<span class="hljs-number">1</span>]], c[<span class="hljs-number">2</span>]);<br>        tab[c[<span class="hljs-number">1</span>]][c[<span class="hljs-number">0</span>]] = tab[c[<span class="hljs-number">0</span>]][c[<span class="hljs-number">1</span>]];<br>    &#125;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">visited</span><span class="hljs-params">(n + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)</span></span>; <span class="hljs-comment">// 表示一个点有没有被选中</span><br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">dis</span><span class="hljs-params">(n + <span class="hljs-number">1</span>, INT_MAX)</span></span>; <span class="hljs-comment">// dis[i]表示没选到的点离选到的点的距离</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) dis[i] = tab[<span class="hljs-number">1</span>][i]; <span class="hljs-comment">// 假设第一个点是1，赋初值</span><br>    visited[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt; n; j++) <span class="hljs-comment">// 每次找出一个点来，</span><br>    &#123;<br>        <span class="hljs-type">int</span> mini = INT_MAX, idx = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <span class="hljs-comment">// 找到dis[i]最小的点</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(visited[i] == <span class="hljs-number">1</span>) <span class="hljs-keyword">continue</span>; <span class="hljs-comment">// 已经访问过</span><br>            <span class="hljs-keyword">if</span>(dis[i] &lt;= mini)<br>            &#123;<br>                mini = dis[i];<br>                idx = i;<br>            &#125;<br>        &#125;<br>        res += mini;<br>        visited[idx] = <span class="hljs-number">1</span>; <span class="hljs-comment">// 标记已经访问</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) <span class="hljs-comment">// 更新与i相连节点的dis值</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(tab[idx][i] == I N) <span class="hljs-keyword">continue</span>;<br>            dis[i] = <span class="hljs-built_in">min</span>(dis[i], tab[idx][i]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><code>floyd</code> 算法：<br>主要思想也是将点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 一个一个的加入考虑范围内，去松弛 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 两点之间的距离。</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-type">int</span> dist[MAXN][MAXN];<br><span class="hljs-type">int</span> n;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">floyd</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; n; k++) &#123; <span class="hljs-comment">// 加入第k个节点</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++) &#123;<br>                <span class="hljs-keyword">if</span> (dist[i][k] != INF &amp;&amp; dist[k][j] != INF &amp;&amp;<br>                        dist[i][j] &gt; dist[i][k] + dist[k][j]) &#123;<br>                    dist[i][j] = dist[i][k] + dist[k][j];<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h1>排序算法</h1><ol><li>用 <code>STL</code> 标准库带 <code>lambda</code> 函数的排序算法的写法： <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// lambda函数写法，降序排列</span><br><span class="hljs-built_in">sort</span>(a.<span class="hljs-built_in">begin</span>(), a.<span class="hljs-built_in">end</span>(), [](<span class="hljs-type">const</span> <span class="hljs-type">int</span>&amp; a, <span class="hljs-type">const</span> <span class="hljs-type">int</span>&amp; b)&#123;<br>    <span class="hljs-keyword">return</span> a &gt; b;<br>&#125;)<br><br><span class="hljs-comment">// cmp 独立函数的写法</span><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">int</span>&amp; a, <span class="hljs-type">const</span> <span class="hljs-type">int</span>&amp; b)</span> </span>&#123;<span class="hljs-keyword">return</span> a &gt; b;&#125;<br><span class="hljs-built_in">sort</span>(a.<span class="hljs-built_in">begin</span>(), a.<span class="hljs-built_in">end</span>(), cmp);<br></code></pre></td></tr></table></figure></li></ol><h1>背包算法</h1><ul><li>最简单 01 背包：<code>dp[i][v]</code>表示对于前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>个物品，在体积为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>的时候能装载的最大值。  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">solve1_1</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; goods, vector&lt;<span class="hljs-type">int</span>&gt;&amp; weights, <span class="hljs-type">int</span> volume)</span></span><br><span class="hljs-function"></span>&#123;<br>   vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">dp</span>(<span class="hljs-number">2</span>, <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(volume + <span class="hljs-number">1</span>));<br>   <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= volume; i++)<br>   &#123;<br>       <span class="hljs-keyword">if</span>(i &lt; goods[<span class="hljs-number">0</span>]) dp[<span class="hljs-number">0</span>][i] = <span class="hljs-number">0</span>;<br>       <span class="hljs-keyword">else</span> dp[<span class="hljs-number">0</span>][i] = weights[<span class="hljs-number">0</span>];<br>   &#125;<br>   <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; goods.<span class="hljs-built_in">size</span>(); i++)<br>   &#123;<br>       <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> v = <span class="hljs-number">0</span>; v &lt;= volume; v++)<br>       &#123;<br>           <span class="hljs-keyword">if</span>(v &lt; goods[i]) dp[<span class="hljs-number">1</span>][v] = dp[<span class="hljs-number">0</span>][v];<br>           <span class="hljs-keyword">else</span> dp[<span class="hljs-number">1</span>][v] = <span class="hljs-built_in">max</span>(dp[<span class="hljs-number">0</span>][v], dp[<span class="hljs-number">0</span>][v - goods[i]] + weights[i]);<br>       &#125;<br>       dp[<span class="hljs-number">0</span>] = dp[<span class="hljs-number">1</span>]; <span class="hljs-comment">// 给下一次循环使用</span><br>   &#125;<br>   <span class="hljs-keyword">return</span> dp[<span class="hljs-number">0</span>][volume];<br>&#125;<br></code></pre></td></tr></table></figure></li><li>变种1，背包必须装满：<strong>在初始化的时候作出改变</strong>，<code>dp[0][0]=0</code>，<code>dp[0][goods[0]]=weights[0]</code>，其他都初始化为<code>-inf</code>；</li><li>变种2，完全背包，即每个物品无限多个：</li></ul>]]></content>
    
    
    <categories>
      
      <category>algorithm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Minimind 模型训练</title>
    <link href="/2025/03/01/minimind-%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83/"/>
    <url>/2025/03/01/minimind-%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83/</url>
    
    <content type="html"><![CDATA[<h2 id="我的配置">我的配置</h2><p>四卡 4090 服务器，160G 内存，VPN</p><h2 id="Download-Datasets">Download Datasets</h2><p>我并没有找到在服务器环境下只下载单个数据集的方法，只能通过 huggingface（或modelscope） 全部下载下来，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> snapshot_download<br>repo_id = <span class="hljs-string">&quot;jingyaogong/minimind_dataset&quot;</span>  <span class="hljs-comment"># 数据集仓库 ID</span><br>local_dir = <span class="hljs-string">&quot;./dataset&quot;</span>  <span class="hljs-comment"># 本地下载目录</span><br>snapshot_download(repo_id=repo_id, repo_type=<span class="hljs-string">&quot;dataset&quot;</span>, local_dir=local_dir)<br></code></pre></td></tr></table></figure><p>由于我的资源是足够的，所以打算训练完整的 <code>MiniMind2</code> 模型，参数如下：</p><table><thead><tr><th>Model Name</th><th>params</th><th>len_vocab</th><th>rope_theta</th><th>n_layers</th><th>d_model</th><th>share</th><th>选择</th></tr></thead><tbody><tr><td><code>MiniMind2-Small</code></td><td>26M</td><td>6400</td><td>1e6</td><td>8</td><td>512</td><td>-</td><td></td></tr><tr><td><code>MiniMind2-MoE</code></td><td>145M</td><td>6400</td><td>1e6</td><td>8</td><td>640</td><td>1+4</td><td></td></tr><tr><td><code>MiniMind2</code></td><td>104M</td><td>6400</td><td>1e6</td><td>16</td><td>768</td><td>-</td><td>✓</td></tr></tbody></table><ul><li><code>rope_theta</code>:</li><li><code>share+route</code>:</li></ul><h2 id="Training-Processure">Training Processure</h2><p>两张 4090 可提供 48G 显存，所以我可以取比较大的 <code>batch_size</code>。以下是我的训练配置：</p><table><thead><tr><th>参数</th><th>epochs</th><th>batch_size</th><th>dim</th><th>n_layers</th><th>max_seq_len</th><th>len_vocab</th></tr></thead><tbody><tr><td>配置</td><td>6</td><td>48</td><td>768</td><td>16</td><td>512</td><td>6400</td></tr></tbody></table><p>参数总量计算：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>m</mi><mi>s</mi><mo>≈</mo><mn>12</mn><mi>L</mi><msup><mi>h</mi><mn>2</mn></msup><mo>=</mo><mn>16</mn><mo>×</mo><mn>12</mn><mo>×</mo><mn>76</mn><msup><mn>8</mn><mn>2</mn></msup><mo>=</mo><mn>113</mn><mi>M</mi></mrow><annotation encoding="application/x-tex">Params\approx 12Lh^2=16\times12\times 768^2=113M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">am</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">12</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">16</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">12</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">76</span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">113</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>，与实际的 104M 略有差异，之后会回来找原因。</p><h3 id="训练命令">训练命令</h3><ol><li>注意，由于我的计算节点上是没有网络的，所以需要设置 <code>wandb</code> 为离线模式；</li><li>SFT 用多卡服务器跑的时候需要大量的内存（&gt; 100G），不然会报错；</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.init(project=args.wandb_project, name=args.wandb_run_name, mode=<span class="hljs-string">&quot;offline&quot;</span>) <span class="hljs-comment"># 需要修改</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">torchrun --nproc_per_node 2 train_pretrain.py --use_wandb<br>torchrun --nproc_per_node 4 train_full_sft.py --epochs 4 --use_wandb<br>torchrun --nproc_per_node 4 train_full_sft.py --epochs 3 --use_wandb --max_seq_len 2048 --batch_size 8<br></code></pre></td></tr></table></figure><h3 id="测试-LLM-命令">测试 LLM 命令</h3><p>这里选择的测试框架是 lm-evaluation-harness，可以参考 <a href="https://github.com/EleutherAI/lm-evaluation-harness">lm-evaluation-harness</a> 的文档。<br>在开始测试之前，需要把我们训练好的 <code>pytorch</code> 模型转化为 <code>huggingface</code> 的模型。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python convert_model.py<br></code></pre></td></tr></table></figure><p>在按照文档配置好环境后，运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lm_eval --model hf --model_args pretrained=<span class="hljs-string">&quot;you/hf/model/path&quot;</span>,device=cuda,dtype=auto --task arc_challenge,arc_easy,boolq,ceval-valid,cmmlu,translation --batch_size 16 --trust_remote_code --output_path <span class="hljs-string">&quot;your/output/path&quot;</span><br></code></pre></td></tr></table></figure><p>即可获得模型的评估结果。我这里选择了以下几个评估任务：</p><table><thead><tr><th>任务名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>arc_challenge</code></td><td>科学推理</td><td>AI2 Reasoning Challenge 的挑战集，包含需要复杂推理的科学问题，主要是验证模型英文能力</td></tr><tr><td><code>arc_easy</code></td><td>科学推理</td><td>AI2 Reasoning Challenge 的简单集，包含基础科学知识问题，主要是验证模型英文能力</td></tr><tr><td><code>boolq</code></td><td>阅读理解</td><td>自然语言的是/否问题回答任务，主要是验证模型英文能力</td></tr><tr><td><code>ceval-valid</code></td><td>中文评估</td><td>中文基础模型评估基准，覆盖多个学科领域，主要是验证模型中文能力</td></tr><tr><td><code>cmmlu</code></td><td>中文评估</td><td>中文多任务语言理解基准，测试模型在专业领域的表现，主要是验证模型中文能力</td></tr><tr><td><code>translation</code></td><td>翻译</td><td>主要是测试模型的中英互译能力</td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数据库原理笔记</title>
    <link href="/2025/02/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/"/>
    <url>/2025/02/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1>Relational data model</h1><p>Edgar F. Codd proposed the relational data model in 1970.<br>Some features:</p><ol><li>Store database in simple data structures</li><li>Access data through high-level language</li><li>Physical storage left up to implementation</li></ol><h2 id="Physical-data-independence">Physical data independence</h2><p>Applications should NOT worry about how data is physically structured and stored, and they should work with a logical data model and declarative query language, leave the implementation details and optimization to DBMS.</p><h2 id="Data-model">Data model</h2><p>A data model is a collection of concepts/tools for describing the data in a database.<br><img src="/img/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/l1/data_model.png" alt="structure of data model"></p><h3 id="Defination-of-relational-data-model">Defination of relational data model</h3><ol><li>A database is a collection of relations and each<br>relation is an unordered set of tuples (or rows).</li><li>Each relation has a set of attributes (or columns).</li><li>Each attribute has a name and a domain and each<br>tuple has a value for each attribute of the relation.</li><li>Values are atomic/scalar.</li></ol><h3 id="Schema-and-instance">Schema and instance</h3><ul><li>Schema: specifies the logical structure of data.（数据库的组织方式，不包含实际数据）</li><li>Instance: concrete table content w.r.t. a given schema.（数据库在某一时刻的实际数据状态）<br><em>A schema rarely changes after being defined, while an instance often changes rapidly.</em><br><strong>An example</strong>:<ul><li><p>Database scheme</p><ol><li>Artists (ID, Artist, Year, City)</li><li>Albums (ID, Album, Artist_ID, Year)</li></ol></li><li><p>Database instance</p><table><thead><tr><th>ID</th><th>Album</th><th>Artist_ID</th><th>Year</th></tr></thead><tbody><tr><td>1</td><td>The Marriage of Figaro</td><td>1</td><td>1786</td></tr><tr><td>2</td><td>Requiem Mass In D minor</td><td>1</td><td>1791</td></tr><tr><td>3</td><td>Für Elise</td><td>2</td><td>1867</td></tr></tbody></table><p><em>Table: Albums(ID, Album, Artist_ID, Year)</em></p><hr><table><thead><tr><th>ID</th><th>Artist</th><th>Year</th><th>City</th></tr></thead><tbody><tr><td>1</td><td>Mozart</td><td>1756</td><td>Salzburg</td></tr><tr><td>2</td><td>Beethoven</td><td>1770</td><td>Bonn</td></tr><tr><td>3</td><td>Chopin</td><td>1810</td><td>Warsaw</td></tr></tbody></table><p><em>Table: Artists(ID, Artist, Year, City)</em></p></li></ul></li></ul><h2 id="Keys">Keys</h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊆</mo><mo stretchy="false">{</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\subseteq \{A_1, A_2, \ldots, A_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> is a superkey of schema <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(A_1, \ldots, A_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> if values for <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> are sufficient to identify a unique tuple for each possible relation instance of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(A_1, A_2, \ldots, A_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.<br>A superkey <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> is a <strong>candidate key</strong> if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> is minimal.</p><h3 id="Primary-keys">Primary keys</h3><p>A primary key is a designated candidate key of a relation. Some DBMSs automatically create an internal primary key if we don’t define one.</p><table style="width:100%">  <tr>    <td style="width:50%; vertical-align:top;"><table><thead><tr><th>ID</th><th>Artist</th><th>Year</th><th>City</th></tr></thead><tbody><tr><td>1</td><td>Mozart</td><td>1756</td><td>Salzburg</td></tr><tr><td>2</td><td>Beethoven</td><td>1770</td><td>Bonn</td></tr><tr><td>3</td><td>Chopin</td><td>1810</td><td>Warsaw</td></tr></tbody></table><p><em>Table: Artists(ID, Artist, Year, City)</em><br></td><br><td style="width:50%; vertical-align:top;"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> Artists(<br>    ID <span class="hljs-type">varchar</span>(<span class="hljs-number">8</span>),<br>    Artist <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    <span class="hljs-keyword">Year</span> <span class="hljs-type">numeric</span>(<span class="hljs-number">4</span>,<span class="hljs-number">0</span>),<br>    City <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>),<br>    <span class="hljs-keyword">primary</span> key (ID)<br>)<br></code></pre></td></tr></table></figure>  </tr></table><h3 id="Foreign-key">Foreign key</h3><p>A foreign key specifies that a tuple from one relation must map to a tuple in another relation.<br><strong>Constraints</strong>:</p><ul><li>Referenced attributes must be a <strong>PRIMARY KEY</strong>.（外部指针一定是另一个表格的 primary key）</li><li>No <strong>dangling pointers</strong> from the attributes of a foreign key.（没有空指针）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> Albums(<br>    ID, <span class="hljs-type">varchar</span>(<span class="hljs-number">8</span>),<br>    Album <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>    Artist_ID <span class="hljs-type">varchar</span> (<span class="hljs-number">8</span>),<br>    <span class="hljs-keyword">primary</span> key ID,<br>    <span class="hljs-keyword">foreign</span> key (Artist_ID) <span class="hljs-keyword">references</span> Artists(ID),<br>)<br></code></pre></td></tr></table></figure><div style="display: flex;">  <div style="flex: 1; margin-right: 20px;">    <table>      <thead>        <tr>          <th>ID</th>          <th>Album</th>          <th>Artist_ID</th>          <th>Year</th>        </tr>      </thead>      <tbody>        <tr>          <td>1</td>          <td>The Marriage of Figaro</td>          <td>1</td>          <td>1786</td>        </tr>        <tr>          <td>2</td>          <td>Requiem Mass In D minor</td>          <td>1</td>          <td>1791</td>        </tr>        <tr>          <td>3</td>          <td>Für Elise</td>          <td>2</td>          <td>1867</td>        </tr>      </tbody>    </table>    <p>Table: Albums(ID, Album, Artist ID, Year)</p>  </div>  <div style="flex: 1;">    <table>      <thead>        <tr>          <th>ID</th>          <th>Artist</th>          <th>Year</th>          <th>City</th>        </tr>      </thead>      <tbody>        <tr>          <td>1</td>          <td>Mozart</td>          <td>1756</td>          <td>Salzburg</td>        </tr>        <tr>          <td>2</td>          <td>Beethoven</td>          <td>1770</td>          <td>Bonn</td>        </tr>        <tr>          <td>3</td>          <td>Chopin</td>          <td>1810</td>          <td>Warsaw</td>        </tr>      </tbody>    </table>    <p>Table: Artists(ID, Artist, Year, City)</p>  </div></div><h1>Relational model and algebra</h1><ul><li>A language for querying relational data based on<br>fundamental relational operations.</li><li>Each operation takes one or more relations (i.e.,<br>tables) as its input and output a new relation, so can easily composed to make comples queries.</li></ul><h2 id="Selection">Selection</h2><ul><li>The <strong>selection</strong> operation selects tuples that satisfy a given predicate.</li><li>Notation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_p(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></li><li>Example: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mtext>dept_name</mtext><mo>=</mo><mtext>&quot;Physics&quot;</mtext></mrow></msub><mo stretchy="false">(</mo><mtext>instructor</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{\text{dept\_name}=\text{&quot;Physics&quot;}}(\text{instructor})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.117em;vertical-align:-0.367em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">dept_name</span></span><span class="mrel mtight">=</span><span class="mord text mtight"><span class="mord mtight">&quot;Physics&quot;</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">instructor</span></span><span class="mclose">)</span></span></span></span></li><li>Boolean connectives <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo></mrow><annotation encoding="application/x-tex">=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">≠</mo></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">&lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span> are allowed in predicates</li><li>Combine predicates with logical connectives <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∧</span></span></span></span> (and), <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\vee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∨</span></span></span></span> (or), <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">¬</span></span></span></span> (not).</li></ul><h2 id="Projection">Projection</h2><ul><li>The <strong>projection</strong> produces from an input relation <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> a new <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi mathvariant="normal">‘</mi></mrow><annotation encoding="application/x-tex">R`</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord">‘</span></span></span></span> that has only some of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi mathvariant="normal">‘</mi></mrow><annotation encoding="application/x-tex">R`</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord">‘</span></span></span></span>s attributes.</li><li>Notation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{A_1,...,A_n}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">...</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> is the input relation and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, …, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> are attributes of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>.</li><li>Example: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mtext>ID</mtext><mo separator="true">,</mo><mtext>Salary</mtext><mi mathvariant="normal">/</mi><mn>12</mn></mrow></msub><mo stretchy="false">(</mo><mtext>instructor</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{\text{ID}, \text{Salary}/12}(\text{instructor})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">ID</span></span><span class="mpunct mtight">,</span><span class="mord text mtight"><span class="mord mtight">Salary</span></span><span class="mord mtight">/12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">instructor</span></span><span class="mclose">)</span></span></span></span></li><li>Duplicated output tuples are <strong>removed</strong> (by definition).</li></ul><h2 id="Cartesian-product">Cartesian product</h2><ul><li>The <strong>Cartesian product</strong> (or just product) of two relations R and S, is the set of all possible combinations of tuples from R and S.</li><li>Notation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>×</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">R\times S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></li></ul><div style="display: flex; justify-content: space-around;">  <div style="text-align: center;">    <table>      <thead>        <tr>          <th>A</th>          <th>B</th>        </tr>      </thead>      <tbody>        <tr>          <td>1</td>          <td>2</td>        </tr>        <tr>          <td>3</td>          <td>4</td>        </tr>      </tbody>    </table>    <p>Table: R(A, B)</p>  </div>  <div style="text-align: center;">    <table>      <thead>        <tr>          <th>B</th>          <th>C</th>        </tr>      </thead>      <tbody>        <tr>          <td>2</td>          <td>6</td>        </tr>        <tr>          <td>3</td>          <td>8</td>        </tr>      </tbody>    </table>    <p>Table: S(B, C)</p>  </div>  <div style="text-align: center;">    <table>      <thead>        <tr>          <th>R.A</th>          <th>R.B</th>          <th>S.B</th>          <th>S.C</th>        </tr>      </thead>      <tbody>        <tr>          <td>1</td>          <td>2</td>          <td>2</td>          <td>6</td>        </tr>        <tr>          <td>1</td>          <td>2</td>          <td>3</td>          <td>8</td>        </tr>        <tr>          <td>3</td>          <td>4</td>          <td>2</td>          <td>6</td>        </tr>        <tr>          <td>3</td>          <td>4</td>          <td>3</td>          <td>8</td>        </tr>      </tbody>    </table>    <p>Table: R × S</p>  </div></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Robosuite 论文阅读</title>
    <link href="/2024/12/29/Robosuite%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    <url>/2024/12/29/Robosuite%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<h2 id="RoboSuite-论文-地址">RoboSuite 论文 <a href="https://arxiv.org/abs/2009.12293">地址</a></h2><h3 id="Introduction">Introduction</h3><p><code>robosuite</code> 由 MuJoCo 引擎驱动，主要作用是通过物理仿真模拟机械臂与环境交互，提供一系列的 API，可以从中获取数据进行数据驱动的强化学习和模拟学习。</p><p>最新版本：1.5，支持 7 种 机器人（robot），8 种抓取臂（gripper），6 种控制模式和 9 种标准任务。</p><h3 id="系统模块">系统模块</h3><ol><li><p>模型 API：用模块或程序去定义、描述仿真环境，可生成仿真模型（<strong>Simulation Model</strong>），也叫环境（environment）。环境通过传感器来生成监控结果（如相机生成画面），并从策略（policy）或 I/O 接收动作指令，这些指令由控制器（controller）将原始动作空间（如关节速度、三维位置等）转化为力矩（torque）而得到。</p></li><li><p>仿真 API：为策略（policy）的输入提供接口，并接收监控结果和奖励（reward）。</p></li><li><p>仿真模型（<strong>Simulation Model</strong>）:由 <strong>Task</strong> 对象定义，概括了仿真三个重要模块：</p><ul><li><strong>RobotModel</strong>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\ge 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)：从给定的 XML 文件中加载机器人的模型和对应的夹爪模型（<strong>GripperModel</strong>）；</li><li><strong>ObjectModel</strong>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\ge 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>)：由 <strong>MujocoObject</strong> 类定义，可从 3D 对象资产种加载，也可以用 API 程序化的生成；</li><li><strong>Arena</strong>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)：定义了机器人的工作空间，包括环境固定装置，如桌面，以及它们的放置位置。</li></ul><p><strong>Task</strong> 对象通过 MJCF 模型语言，将上面三个组成部分整合为一个 XML 对象，而这个生成的 XML 对象通过 <strong>mujoco-py</strong> 库传递给 MuJoCo 引擎，进而实例化和初始化仿真模型。实例化后的结果是 MjSim 对象，可通过 API 来访问。<br><img src="/img/robosuite/robosuite.png" alt="系统的各种关键模块及其相互合作"></p><p><strong>Environment</strong> 对象提供了外部输入的 API 接口，可以与仿真交互。外部输入与控制机器人和夹爪的动作命令相匹配，而动作空间与机器人的控制器（controller）相匹配。例如，对机械臂的关节位置控制器，动作空间对应于各关节的期望位置；对于操作空间控制器，动作空间对应于末端执行器期望的3D笛卡尔位置或期望的全6D笛卡尔位姿（X,Y,Z,Roll,Pitch,Yaw）。这些空间指令可以由算法自动生成，或者是通过 I/O 输入。</p><p><strong>Sensor</strong> 从 MjSim 对象中获取信息并生成监控结果。例如：RGB-D 相机，力-力矩测量计，本体感觉数据，任务进展，成功条件（reward等等）。</p></li></ol><h4 id="Environment">Environment</h4><p>创造环境的代码：<code>make</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> robosuite <span class="hljs-keyword">as</span> suite<br>env = suite.make(<br>    env_name=<span class="hljs-string">&quot;Lift&quot;</span>, <span class="hljs-comment"># try with other tasks like &quot;Stack&quot; and &quot;Door&quot;</span><br>    robots=<span class="hljs-string">&quot;Panda&quot;</span>,  <span class="hljs-comment"># try with other robots like &quot;Sawyer&quot; and &quot;Jaco&quot;</span><br>    has_renderer=<span class="hljs-literal">True</span>,<br>    has_offscreen_renderer=<span class="hljs-literal">False</span>,<br>    use_camera_obs=<span class="hljs-literal">False</span>,<br>)<br><span class="hljs-comment"># 其他参数例如 robots, controller_configs, env_name等等</span><br></code></pre></td></tr></table></figure><p><strong>Task</strong> 实例包含一个 Arena 模型（基于 XML，定义工作区和相机位置），Robot（arm 种类，如Sawyer, Panda） 和 Object 模型实例（对应物理模型，如立方体、带把手的罐子）列表，还有 <code>placement_initializer</code> 作为输入，决定仿真的开始状态分布。</p><h4 id="Robots">Robots</h4><p>Robot 类由 <strong>RobotModel</strong>, <strong>GripperModel(s)</strong> 和 <strong>Controller(s)</strong> 定义，具有以下特点：</p><ol><li>robot 模型多样化、真实化；</li><li>模块化保障，可以即插即用，可以使用任意机器人、夹爪、控制器组合；</li><li>自我封闭，任何信息都可在实例中找到。</li></ol><table><thead><tr><th>机器人名称</th><th>自由度</th><th>夹爪类型</th><th>描述</th></tr></thead><tbody><tr><td>Sawyer</td><td>7</td><td><strong>RethinkGripper</strong></td><td>Rethink Robotics 单臂机器人</td></tr><tr><td>Panda</td><td>7</td><td><strong>PandaGripper</strong></td><td>Franka Emika 协作机器人</td></tr><tr><td>IIWA</td><td>7</td><td><strong>Robotiq140Gripper</strong></td><td>KUKA 轻型机器人</td></tr><tr><td>Jaco</td><td>7</td><td><strong>JacoThreeFingerGripper</strong></td><td>Kinova 轻型机械臂</td></tr><tr><td>Kinova3</td><td>7</td><td><strong>Robotiq85Gripper</strong></td><td>Kinova 第三代机械臂</td></tr><tr><td>UR5e</td><td>6</td><td><strong>Robotiq85Gripper</strong></td><td>Universal Robots 协作机器人</td></tr><tr><td>Baxter</td><td>7</td><td><strong>RethinkGripper</strong></td><td>Rethink Robotics 双臂机器人</td></tr></tbody></table><h4 id="Controllers">Controllers</h4><p>Controllers 将高层的动作转化为底层的虚拟电机指令，驱动机器人运动。<br>可选项：<code>OSC POSE</code>, <code>OSC POSITION</code>, <code>JOINT POSITION</code>, <code>JOINT VELOCITY</code>, <code>JOINT TORQUE</code></p><table><thead><tr><th>Controller Name and Options</th><th>Controller Type</th><th>Action Dimensions (Gripper Not Included)</th><th>Action Format</th></tr></thead><tbody><tr><td>OSC POSE impedance_mode= fixed</td><td>Operational Space Control (Position &amp; Orientation)</td><td>6</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>z</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>z</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_x, p_y, p_z, r_x, r_y, r_z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>OSC POSE impedance_mode= variable_kp</td><td>Operational Space Control with variable stiffness (critically damped)</td><td>12</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>z</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>z</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>z</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_x, p_y, p_z, r_x, r_y, r_z) (k_{px}, k_{py}, k_{pz}, k_{rx}, k_{ry}, k_{rz})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">rz</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>OSC_POSE impedance_mode= variable</td><td>Operational Space Control with variable impedance</td><td>18</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>z</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>z</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>z</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>z</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>r</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>r</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>r</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_x, p_y, p_z, r_x, r_y, r_z) (k_{px}, k_{py}, k_{pz}, k_{rx}, k_{ry}, k_{rz}) (k_{dx}, k_{dy}, k_{dz}, k_{drx}, k_{dry}, k_{drz})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">rz</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">rz</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>OSC_POSITION impedance_mode= fixed</td><td>Operational Space Control (Position only)</td><td>3</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>z</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_x, p_y, p_z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>OSC_POSITION impedance_mode= variable_kp</td><td>Operational Space Control with variable stiffness (critically damped)</td><td>9</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>z</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>z</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>k</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>k</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_x, p_y, p_z) (k_{px}, k_{py}, k_{pz}, k_p, k_p, k_p, k_{rz})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">rz</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>OSC POSITION impedance_mode= variable</td><td>Operational Space Control with variable impedance</td><td>15</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>z</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>p</mi><mi>z</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>z</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>r</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>r</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>d</mi><mi>r</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_x, p_y, p_z) (k_{px}, k_{py}, k_{pz}, k_{rx}, k_{ry}, k_{rz}) (k_{dx}, k_{dy}, k_{dz}, k_{drx}, k_{dry}, k_{drz})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">rz</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">rz</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>IK POSE</td><td>Inverse Kinematics Control (Position &amp; Orientation)</td><td>7</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>z</mi></msub><mo separator="true">,</mo><msub><mi>q</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>q</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>q</mi><mi>z</mi></msub><mo separator="true">,</mo><msub><mi>q</mi><mi>w</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_x, p_y, p_z, q_x, q_y, q_z, q_w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>JOINT_POSITION impedance_mode= fixed</td><td>Joint Position Control</td><td>n</td><td>n joint positions</td></tr><tr><td>JOINT_POSITION impedance_mode= variable_kp</td><td>Joint Position Control with variable stiffness (critically damped)</td><td>2n</td><td>n joint positions and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">k_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> for each joint</td></tr><tr><td>JOINT_POSITION impedance_mode= variable</td><td>Joint Position Control with variable impedance</td><td>3n</td><td>n joint positions and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>k</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>k</mi><mi>d</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(k_p, k_d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> for each joint</td></tr><tr><td>JOINT_VELOCITY</td><td>Joint Velocity Control</td><td>n</td><td>n joint velocities</td></tr><tr><td>JOINT_TORQUE</td><td>Joint Torque Control</td><td>n</td><td>n joint torques</td></tr></tbody></table><p>git submodule update --init --recursive</p><h4 id="Objects">Objects</h4><p>由 <strong>MujocoObject</strong> 类定义，通过 <code>MJCF XML</code> 格式定义。这些 XML 文件可以保存在磁盘中并加载进仿真模型中，即 <strong>MujocoXMLObject</strong>；也可以通过代码创建，即 <strong>MujocoGeneratedObject</strong>。</p><p>例：<strong>HammerObject</strong>，代码见 <code>robosuite/robosuite/models/objects/composite/hammer.py</code></p><h3 id="Sensors">Sensors</h3><p>传感器可以测量：图像，力-力矩测量值，压力信号（机械手臂上）等等。除了相机和关节传感器之外，可通过  <code>get_sensor_measurement(sensor_name)</code> 来访问。</p><p>每个机器人的关节传感器提供了位置和速度信息，关节传感器可作为 <strong>Robot</strong> 的 API 的属性进行访问，如 <code>_joint_positions</code> 和 <code>_joint_velocities</code>。</p><p>相机并不能直接被查询，在创建环境时指定一个或多个要使用的相机，图像会自动生成并追加到字典中。</p><h2 id="Robomimic-论文-地址">Robomimic 论文 <a href="https://arxiv.org/pdf/2108.03298">地址</a></h2><h3 id="从人类数据集离线学习的挑战">从人类数据集离线学习的挑战</h3><ol><li>数据来源于非马尔克夫决策过程。人在操作过程中会有外部因素（以前的经验、操作的设备）等等，而且已经验证过带有时间维度的模型从人类数据集中学习效果很好。</li><li>不同人的演示存在质量差异（策略、熟练度）。</li><li>受数据集大小影响。</li><li>训练与验证目标不匹配。因为从模型中选出最好的模型是困难的。（？为什么）</li><li>对超参数选择极为敏感。</li></ol><h3 id="研究的设计">研究的设计</h3><h4 id="任务">任务</h4><p>Lift, Can, Square(Only sim), Transport(Only sim), Tool hang</p><h4 id="数据收集">数据收集</h4><ol><li><strong>Machine-generated(MG)</strong>：针对于 Lift 和 Can 任务，通过最先进的 RL 算法生成的数据（最优和次优），因为其他的任务无法被 RL 算法解决。</li><li><strong>Proficient-Human (PH) and Multi-Human (MH)</strong>：通过 RoboTurk 平台的人类操作收集，MH 表示为 6 个人的混合数据集（两个熟练的人，两个次熟练的人和两个不够熟练的人）。</li><li><strong>Observation Modalities</strong>：设置了不同种类的传感器，包括末端执行器、夹爪手指、关节、gt物体状态、每只机械臂从外部摄像头和腕带摄像头采集的图像。我们有两个观测空间&quot;低维&quot;和&quot;图像&quot;。两者都包括末端执行器位姿和夹持器手指位置，仅在是否使用地面真实物体信息(低维)或该信息是否被可用的相机观测值(图像)所替代方面存在差异。</li></ol><h4 id="训练和测试方案">训练和测试方案</h4><table><thead><tr><th>算法名称</th><th>类型</th><th>主要特点</th><th>适用场景</th></tr></thead><tbody><tr><td>Behavioral Cloning (BC)</td><td>监督学习</td><td>直接模仿专家演示数据，将状态映射到动作</td><td>简单任务，数据质量高</td></tr><tr><td>BC-RNN</td><td>监督学习 + RNN</td><td>考虑时序信息，能够处理非马尔可夫决策过程</td><td>需要历史信息的任务</td></tr><tr><td>Hierarchical BC (HBC)</td><td>分层监督学习</td><td>将任务分解为高层目标和低层动作</td><td>复杂的多阶段任务</td></tr><tr><td>Batch-Constrained Q-Learning (BCQ)</td><td>离线强化学习</td><td>通过限制动作选择来避免外推错误</td><td>有限的离线数据集</td></tr><tr><td>Conservative Q-Learning (CQL)</td><td>离线强化学习</td><td>保守估计Q值以避免过度估计</td><td>安全性要求高的场景</td></tr><tr><td>IRIS</td><td>模仿学习</td><td>结合了BC和强化学习的优点</td><td>需要在模仿和优化间平衡</td></tr></tbody></table><p>“low-dim”：训练 2000 轮，100 个梯度过程，50 轮验证一次；<br>“image”：训练 600 轮，500 个梯度过程，20 轮验证一次。</p><h3 id="实验">实验</h3><h4 id="PH-数据集和-MH-数据集">PH 数据集和 MH 数据集</h4><p><img src="/img/robosuite/low_dim.png" alt="不同模型在low_dim模式下的观测"><br>结论：</p><ul><li>有历史记录功能的模型（BC-RNN）比 BC 表现要好。模型在 PH 数据集上的表现好于 MH 数据集，可能是因为 MH 数据集中存在演示质量较差的数据。</li><li>Batch RL 算法（BCQ, CQL）无法从人类数据集中学到东西。</li></ul><h4 id="不同质量的数据">不同质量的数据</h4><p><img src="/img/robosuite/submodule.png" alt="不同质量数据集结果"><br>结论：</p><ul><li>BC-RNN 在不同质量的数据集中是一个强 baseline，但是它仍然有提升空间。</li><li>Batch RL 算法在更简单的数据集上也一筹莫展。</li></ul><h4 id="low-dim-变为-image-模式">low_dim 变为 image 模式</h4><p><img src="/img/robosuite/image_mode.png" alt="image模式的结果"><br><img src="/img/robosuite/change.png" alt="重要因素的影响"><br>结论：</p><ul><li>在 image 模式下的结论与 low_dim 模式下的结论一致。</li><li>用于机器人本体感知的特征是重要的。对 low_dim 模式，添加末端执行器的信息会严重伤害机器人（性能下降 49%～88%），但 image 模式就比较包容这个信息（性能下降 2%～29%），性能下降的可能原因是过拟合。</li><li>图像初始化和手腕的观察对操作任务是至关重要的。移除像素移动随机化和手腕相机会导致严重的性能下降。</li></ul><h4 id="超参数选择">超参数选择</h4><p>图见上面。</p><ol><li>lr 从 1e-4 到 1e-3 变化，image 模式受很大影响而 low_dim 模式受影响小。</li><li>大的 MLP 网络也会降低性能。</li><li>浅层卷积网络代替 resnet 会降低性能。</li><li>减少 RNN 隐藏层维度会降低性能。</li><li>使用 GMM 策略和 resnet 编码器效果好。</li></ol><h4 id="最佳模型选择">最佳模型选择</h4><img src=/img/robosuite/select_best.png width="50%" style="float:left; margin-right:20px;"><p>离线学习的最佳模型选择具有挑战性。左图是选择 val_loss 最小的模型或者最后一个 ckpt 与该策略的最佳模型的结果对比，可见选择最佳模型是 non-trivial 的。</p><div style="clear:both"></div><h4 id="数据集大小的影响">数据集大小的影响</h4><p><img src="/img/robosuite/datasize.png" alt="数据集大小的影响"><br>注意到，不太复杂的任务(Lift Can)可以使用一小部分数据产生熟练的策略(成功率75 % ~ 100 %)。其次，在更复杂的任务(Square Transport)上训练的政策在使用50 %或20 %的数据时受到了很大的影响。</p><h4 id="转移到真实世界">转移到真实世界</h4><p>训练的机器人可以熟练的掌握 Lift 和 Can 任务，非常难的 Tool Hang 任务也可以取得一定成功（3.3%）。这表明在模拟中训练出来的模型是有潜力转移到现实中的。</p><h3 id="结论与探讨">结论与探讨</h3><ol><li>具有时间抽象性的模型可以非常有效地从人类数据集中学习。</li><li>需要提高批量(离线) RL从次优人体数据集学习的能力。</li><li>改善离线的政策选择对于现实世界的设定很重要。</li><li>观测空间的作用很大，超参数也很重要。</li><li>利用大规模的人类数据集来解决更复杂的任务是很有希望的。</li><li>研究结果转移到真实世界环境中。</li></ol><h2 id="本周报告（2025-1-3-–-2025-1-10）">本周报告（2025.1.3 – 2025.1.10）</h2><h3 id="工作">工作</h3><ol><li>阅读完 Robomimic 论文，并写完论文阅读笔记；</li><li>配置 robomimic 环境（需要 robomimic 版本为 1.4.0），根据<a href="https://robomimic.github.io/docs/introduction/getting_started.html">教程</a>实现了一个简单的 low_dim 模式下的 BC 模型，在 Lift 任务上取得了 98% 的成功率，视频保存在 <code>/home/ljr/embodied/robomimic/bc_trained_models/test/20250104171913/videos</code>；<br><img src="/img/robosuite/Lift_epoch_500.gif" alt="Lift 任务成功率"></li></ol><h3 id="下周工作">下周工作</h3><ol><li>观察如何将 robomimic 训练出的模型接入 robosuite 中（如何直接加载训练模型？）并观察效果；</li><li>尝试抛开 robomimic 框架训练一个简单的 Lift 任务模型，以熟练掌握机器人使用的具体代码而不是调用 API。</li></ol><h3 id="问题">问题</h3><p>在训练时会报错，但不影响训练，可能是因为我的 linux 系统有桌面，导致 <code>OPENGL</code> 库报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">  File <span class="hljs-string">&quot;/home/ljr/.conda/envs/robosuite/lib/python3.10/site-packages/OpenGL/error.py&quot;</span>, line 230, <span class="hljs-keyword">in</span> glCheckError<br>    raise self._errorClass(<br>OpenGL.raw.EGL._errors.EGLError: EGLError(<br>err = EGL_NOT_INITIALIZED,<br>baseOperation = eglMakeCurrent,<br>cArguments = (<br>&lt;OpenGL._opaque.EGLDisplay_pointer object at 0x79fb83fa35c0&gt;,<br>&lt;OpenGL._opaque.EGLSurface_pointer object at 0x79fb900f8ec0&gt;,<br>&lt;OpenGL._opaque.EGLSurface_pointer object at 0x79fb900f8ec0&gt;,<br>&lt;OpenGL._opaque.EGLContext_pointer object at 0x79fb900f8e40&gt;,<br>),<br>result = 0<br>)<br>Exception ignored <span class="hljs-keyword">in</span>: &lt;<span class="hljs-keyword">function</span> EGLGLContext.__del__ at 0x79fb9018c790&gt;<br>Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;/home/ljr/.conda/envs/robosuite/lib/python3.10/site-packages/robosuite/renderers/context/egl_context.py&quot;</span>, line 155, <span class="hljs-keyword">in</span> __del__<br>    self.free()<br>  File <span class="hljs-string">&quot;/home/ljr/.conda/envs/robosuite/lib/python3.10/site-packages/robosuite/renderers/context/egl_context.py&quot;</span>, line 149, <span class="hljs-keyword">in</span> free<br>    EGL.eglMakeCurrent(EGL_DISPLAY, EGL.EGL_NO_SURFACE, EGL.EGL_NO_SURFACE, EGL.EGL_NO_CONTEXT)<br>  File <span class="hljs-string">&quot;/home/ljr/.conda/envs/robosuite/lib/python3.10/site-packages/OpenGL/error.py&quot;</span>, line 230, <span class="hljs-keyword">in</span> glCheckError<br>    raise self._errorClass(<br>OpenGL.raw.EGL._errors.EGLError: EGLError(<br>err = EGL_NOT_INITIALIZED,<br>baseOperation = eglMakeCurrent,<br>cArguments = (<br>&lt;OpenGL._opaque.EGLDisplay_pointer object at 0x79fb83fa35c0&gt;,<br>&lt;OpenGL._opaque.EGLSurface_pointer object at 0x79fb900f8ec0&gt;,<br>&lt;OpenGL._opaque.EGLSurface_pointer object at 0x79fb900f8ec0&gt;,<br>&lt;OpenGL._opaque.EGLContext_pointer object at 0x79fb900f8e40&gt;,<br>),<br>result = 0<br>)<br></code></pre></td></tr></table></figure><ol><li>减少现实和仿真的gap 论文(不局限具身智能，包括自动驾驶等);</li><li>Droid、simplerenv、libero、genesis 图像，输入VLM(qwen VL2)，在 last<br>hidden state 和 embedding的输出有没有明显区别(具体什么区别需要判定)，总结规律;</li><li>不同亮度的图像(Droid)在last hidden state 和 embedding 的输出是否<br>有区别，设置合理的prompt。</li></ol><h2 id="本周报告（2025-2-16-–-2025-2-20）">本周报告（2025.2.16 – 2025.2.20）</h2><h3 id="工作-2">工作</h3><ol><li>sim2real 方式的论文和方法：</li></ol><ul><li><p>域随机化：通过引入随机性扩展机器人在模拟器中的操作范围，使得模拟环境能够迁移这些能力到现实场景（<a href="https://arxiv.org/abs/2310.04517">https://arxiv.org/abs/2310.04517</a> 等）；</p></li><li><p>域适配：旨在统一模拟环境与真实环境的特征空间，从而在统一特征空间内完成训练和迁移（<a href="https://ieeexplore.ieee.org/document/10153686">https://ieeexplore.ieee.org/document/10153686</a> 等）；</p></li><li><p>干扰学习：在模拟环境中引入干扰，训练机器人策略，使其能够在充满噪声和不可预测性的现实环境中高效运行（<a href="https://arxiv.org/abs/2303.04137">https://arxiv.org/abs/2303.04137</a> 等）。</p></li><li><p><a href="https://arxiv.org/pdf/2411.01850">Manibox</a>，主要思想为利用规模化（scalable）、自动化的生成action数据，通过policy generalization方法来有效解决了空间泛化性问题，借助 <strong>YOLO-World</strong> 这样的开集检测模型，ManiBox 精准提取多视角的低维空间信息，将复杂的高维视觉问题转化为简化的状态建模问题，最后通过训练一个<strong>基于状态的策略（state-based policy）</strong>，实现了从仿真到真实世界的高效迁移。结合<strong>随机掩码（random mask）技术</strong>和历史轨迹信息，ManiBox显著提升了策略在应对视觉噪声和检测失败场景下的鲁棒性。</p></li><li><p><a href="https://arxiv.org/abs/2411.11839">RoboGSim</a>，主要思想为利用3D Gaussian Splatting（3DGS）来高保真的重建场景，并对机械臂关节的点云进行分割。随后，通过 MDH 动态模型控制与各关节对应的点云，从而实现机械臂的动态渲染。可用来合成数据和评估数据。</p></li></ul><ol start="2"><li>VLM 输入图像<br>已经实现将 Droid 三个相机拍出的视频输入 VL2 网络，但出现问题：text_prompt 输出为空，正在找原因。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">processor = AutoProcessor.from_pretrained(<span class="hljs-string">&quot;Qwen/Qwen2-VL-2B&quot;</span>)<br>conversation = [<br>    &#123;<br>        <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>,<br>        <span class="hljs-string">&quot;content&quot;</span>: [<br>            &#123;<span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;video&quot;</span>&#125;,<br>            &#123;<span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;What happened in the video?&quot;</span>&#125;,<br>        ],<br>    &#125;<br>]<br>text_prompt = processor.apply_chat_template(conversation, tokenize=<span class="hljs-literal">False</span>, add_generation_prompt=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;text_prompt&quot;</span>, text_prompt) <span class="hljs-comment"># output text_prompt</span><br></code></pre></td></tr></table></figure><ol start="3"><li>大模型的训练流程</li></ol><ul><li><p>预训练阶段（Pretraining）<br>目标：通过无监督学习的方式，让模型学习语言的通用规律和模式，形成基础的语言理解能力。<br>数据：使用海量的文本数据，如网络爬取的文本、书籍、论文等，数据量通常在2T~3T的token级别。<br>训练过程：模型通过自监督学习任务（如掩码语言模型MLM、下一句预测NSP等）进行训练，学习如何根据上下文预测缺失的单词或句子。</p></li><li><p>监督微调阶段（Supervised Fine-Tuning, SFT）<br>目标：在预训练模型的基础上，通过有监督学习的方式，使模型能够更好地完成特定任务，如对话、文本生成等。<br>数据：使用人工标注的指令数据或特定任务的数据，数据规模相对较小，但质量较高。<br>训练过程：对预训练模型进行微调，使其适应特定的任务需求。</p></li><li><p>奖励模型训练阶段（Reward Modeling）<br>目标：训练一个奖励模型，用于评估生成文本的质量，并为强化学习阶段提供奖励信号。<br>数据：使用人工标注的偏好数据，即对生成文本的质量进行排序。<br>训练过程：通过比较不同生成文本的质量，训练奖励模型。</p></li><li><p>强化学习阶段（Reinforcement Learning, RL）<br>目标：利用奖励模型的反馈，进一步优化模型的生成能力，使其生成的文本更符合人类偏好。<br>训练过程：使用强化学习算法（如PPO、DPO等），根据奖励模型的评分对模型进行优化。</p></li><li><p>参数计算<br>主要参数为 transformer 层的参数，L 层transformer，隐藏维度为 h，词表嵌入大小为 V，那么具体参数量为</p></li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mn>12</mn><msup><mi>h</mi><mn>2</mn></msup><mo>+</mo><mn>13</mn><mi>h</mi><mo stretchy="false">)</mo><mo>+</mo><mi>V</mi><mi>h</mi><mo>≈</mo><mn>12</mn><mi>L</mi><msup><mi>h</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(12h^2+13h)+Vh\approx 12Lh^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord">12</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">13</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">Vh</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord">12</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>一个 7B 模型，有 70 亿参数，储存时每个参数以 fp16（2个字节） 格式存储，那么大小为</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>7</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>10</mn></msup><mo>×</mo><mn>2</mn><mi mathvariant="normal">/</mi><mn>1024</mn><mi mathvariant="normal">/</mi><mn>1024</mn><mo>≈</mo><mn>14</mn><mi>G</mi></mrow><annotation encoding="application/x-tex">7\times 10^{10}\times 2 / 1024 / 1024\approx 14G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2/1024/1024</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">14</span><span class="mord mathnormal">G</span></span></span></span></span></p><ul><li>推理、训练显存<br>推理时看量化，在32fp下 1B 参数对应 3.75G 显存，int8 下对应 0.9G 显存；<br>训练时需要的显存是至少推理的9-10倍。</li></ul><p><br><br></p><h2 id="本周报告（2025-2-21-–-2025-2-27）">本周报告（2025.2.21 – 2025.2.27）</h2><h3 id="工作-3">工作</h3><ol><li>调整不同数据集的亮度，判断其 embed 和 last hidden state 输出有什么区别；</li></ol><ul><li>获取数据集：一共使用了四个数据集，其情况如下表所示：</li></ul><table><thead><tr><th>数据集名称</th><th>获取方式</th><th>相机视角</th><th>机械臂种类</th><th>样例图片</th></tr></thead><tbody><tr><td><code>Droid</code></td><td>真实</td><td>三个相机视角，<code>exterior_1_left</code>, <code>wrist</code>,<code>exterior_2_left</code></td><td>Franka</td><td><img src="/img/robosuite/droid_ex.png" alt="Droid样例"></td></tr><tr><td><code>Simpler_env</code></td><td>仿真</td><td>单一固定视角，从样例视频生成</td><td>Google robot</td><td><img src="/img/robosuite/simpler_ex.png" alt="Simpler样例"></td></tr><tr><td><code>Genesis</code></td><td>仿真</td><td>多视角，可配置相机位置，主要配置了左中右三种相机位置，从样例视频生成</td><td>Franka</td><td><img src="/img/robosuite/genesis_ex.png" alt="Genesis样例"></td></tr><tr><td><code>Libero</code></td><td>仿真</td><td>两个相机视角，<code>agentview</code>, <code>wrist</code>，是给好的数据集</td><td>Franka</td><td><img src="/img/robosuite/libero_ex.png" alt="Libero样例"></td></tr></tbody></table><ul><li><p>更改亮度的代码：在照片左上角增加一个点光源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_point_light</span>(<span class="hljs-params"></span><br><span class="hljs-params">    image_path, </span><br><span class="hljs-params">    center_position,  <span class="hljs-comment"># 光源中心坐标 (x, y)</span></span><br><span class="hljs-params">    radius=<span class="hljs-number">100</span>,        <span class="hljs-comment"># 光源半径</span></span><br><span class="hljs-params">    brightness=<span class="hljs-number">1.5</span>,    <span class="hljs-comment"># 亮度增强因子（1.0为原图）</span></span><br><span class="hljs-params">    light_color=(<span class="hljs-params"><span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span></span>)  <span class="hljs-comment"># 光源颜色（默认为白色）</span></span><br><span class="hljs-params"></span>):<br></code></pre></td></tr></table></figure><div style="display: flex; gap: 20px;">  <div>      <p>Droid 原始图片：</p>      <img src="/img/robosuite/droid.png" alt="原始图片" width="400"/>  </div>  <div>      <p>Droid 添加点光源后：</p>      <img src="/img/robosuite/droid_light.png" alt="添加光源后的图片" width="400"/>  </div></div></li><li><p>判断向量之间的差异：主要是使用了余弦相似度和 MSE ，后面列出的数据皆为余弦相似度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">compare_vectors</span>(<span class="hljs-params">vec1, vec2, method=<span class="hljs-string">&quot;cosine&quot;</span></span>):<br>  <span class="hljs-string">&quot;&quot;&quot;比较两个向量的差异，支持余弦相似度或MSE&quot;&quot;&quot;</span><br>  <span class="hljs-keyword">if</span> method == <span class="hljs-string">&quot;cosine&quot;</span>:<br>      cos = torch.nn.CosineSimilarity(dim=<span class="hljs-number">0</span>)<br>      <span class="hljs-keyword">return</span> cos(vec1.flatten(), vec2.flatten()).item()<br>  <span class="hljs-keyword">elif</span> method == <span class="hljs-string">&quot;mse&quot;</span>:<br>      mse = torch.nn.MSELoss()<br>      <span class="hljs-keyword">return</span> mse(vec1, vec2).item()<br></code></pre></td></tr></table></figure></li><li><p>最终结果<br>可以看出， gap 比较大的是 Libero 数据集，其它数据集的余弦相似度都在 0.8 以上。</p><table><thead><tr><th>模型</th><th>平均嵌入向量比较（平均值）</th><th>平均最后隐藏层比较（平均值）</th></tr></thead><tbody><tr><td><code>Droid</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.7992</mn></mrow><annotation encoding="application/x-tex">0.7992</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7992</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.8026</mn></mrow><annotation encoding="application/x-tex">0.8026</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.8026</span></span></span></span></td></tr><tr><td><code>Genesis</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.9608</mn></mrow><annotation encoding="application/x-tex">0.9608</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.9608</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.8570</mn></mrow><annotation encoding="application/x-tex">0.8570</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.8570</span></span></span></span></td></tr><tr><td><code>Libero</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.6564</mn></mrow><annotation encoding="application/x-tex">0.6564</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.6564</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.7427</mn></mrow><annotation encoding="application/x-tex">0.7427</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.7427</span></span></span></span></td></tr><tr><td><code>Simpler</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.9278</mn></mrow><annotation encoding="application/x-tex">0.9278</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.9278</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.8330</mn></mrow><annotation encoding="application/x-tex">0.8330</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.8330</span></span></span></span></td></tr></tbody></table></li></ul><br><ol start="2"><li>不同数据集的图片输入 <code>qwen2-VL</code> ，其 <code>embed</code> 和 <code>last hidden state</code> 输出有什么区别</li></ol><ul><li><p>仍然是对四张数据集的图片，进行统一化处理（即都 <code>resize</code> 为 224*224），并输入 <code>qwen2-vl</code> 模型中，这样可以保证输出的向量维度一样；</p></li><li><p>对不同数据集的各种向量计算余弦相似度，得到的结果如下：</p></li></ul><table><thead><tr><th>数据集对比</th><th>嵌入向量相似度（平均值）</th><th>最后隐藏层相似度（平均值）</th></tr></thead><tbody><tr><td><code>DROID</code> vs <code>Genesis</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4665</mn></mrow><annotation encoding="application/x-tex">0.4665</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4665</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4954</mn></mrow><annotation encoding="application/x-tex">0.4954</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4954</span></span></span></span></td></tr><tr><td><code>DROID</code> vs <code>Libero</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5317</mn></mrow><annotation encoding="application/x-tex">0.5317</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5317</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5814</mn></mrow><annotation encoding="application/x-tex">0.5814</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5814</span></span></span></span></td></tr><tr><td><code>DROID</code> vs <code>Simpler</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4757</mn></mrow><annotation encoding="application/x-tex">0.4757</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4757</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5661</mn></mrow><annotation encoding="application/x-tex">0.5661</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5661</span></span></span></span></td></tr><tr><td><code>Libero</code> vs <code>Genesis</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.6601</mn></mrow><annotation encoding="application/x-tex">0.6601</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.6601</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.6343</mn></mrow><annotation encoding="application/x-tex">0.6343</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.6343</span></span></span></span></td></tr><tr><td><code>Libero</code> vs <code>Simpler</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4494</mn></mrow><annotation encoding="application/x-tex">0.4494</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4494</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5803</mn></mrow><annotation encoding="application/x-tex">0.5803</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5803</span></span></span></span></td></tr></tbody></table><p>从结果可以观察到：</p><ol><li>大多数情况下，最后隐藏层的相似度比嵌入向量的相似度更高，这可能表明最后隐藏层包含了更丰富的特征信息</li><li>Libero 和 Genesis 数据集之间的相似度最高，说明这两个数据集的图像特征可能更接近</li><li>整体相似度都在 0.45-0.66 之间，表明不同数据集之间存在一定的差异性</li></ol><h3 id="下周任务">下周任务</h3><ol><li>尽量调好适配 Droid 数据集的相机，让不同数据集拍出来的图片是同一个角度的（<code>exterior_1_left</code>, <code>wrist</code>,<code>exterior_2_left</code>）；genesis可以手动调节相机，但是 libero 是给定的数据，不能直接在数据集上进行修改。<strong>所以如何修改呢？</strong></li><li>在收集好数据后再进行向量的对比。</li><li>待续</li></ol><p><br><br></p><h2 id="本周报告（2025-2-28-–-2025-3-6）">本周报告（2025.2.28 – 2025.3.6）</h2><h3 id="工作-4">工作</h3><ol><li>为输出的向量增加了方差的对比；</li><li>为给图片增加亮度提供了新方法：给图片像素值整体扩大或缩小倍数，分别取了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0.8</mn><mo separator="true">,</mo><mn>0.9</mn><mo separator="true">,</mo><mn>1.1</mn><mo separator="true">,</mo><mn>1.2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0.8, 0.9, 1.1, 1.2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0.8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1.1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1.2</span><span class="mclose">]</span></span></span></span> 四个数值进行对比；</li><li>修改 prompt，如果数据集给出了 prompt 的话就把这个 prompt 输入到 qwen2-VL 中，否则使用默认的 prompt。</li><li>基本对齐了 genesis 和 droid 的左右视角，并进行了这两个数据集输出的对比。</li></ol><h4 id="Droid-余弦相似度和方差比较">Droid 余弦相似度和方差比较</h4><table><thead><tr><th>指标类型</th><th>点光源图片</th><th>亮度因子 0.8</th><th>亮度因子 0.9</th><th>亮度因子 1.1</th><th>亮度因子 1.2</th><th>原始图片</th></tr></thead><tbody><tr><td>嵌入向量相似度(对应提示词)</td><td>0.8093</td><td>0.9265</td><td>0.9532</td><td><strong>0.9167</strong></td><td><strong>0.8650</strong></td><td>-</td></tr><tr><td>嵌入向量相似度(默认提示词)</td><td><strong>0.8102</strong></td><td><strong>0.9263</strong></td><td><strong>0.9548</strong></td><td>0.9129</td><td>0.8649</td><td>-</td></tr><tr><td>最后隐藏层相似度(对应提示词)</td><td><strong>0.8272</strong></td><td><strong>0.9173</strong></td><td><strong>0.9438</strong></td><td><strong>0.9170</strong></td><td><strong>0.8815</strong></td><td>-</td></tr><tr><td>最后隐藏层相似度(默认提示词)</td><td>0.8150</td><td>0.9102</td><td>0.9404</td><td>0.9073</td><td>0.8729</td><td>-</td></tr><tr><td>嵌入向量方差(对应提示词)</td><td>1.2931</td><td>1.5429</td><td>1.5708</td><td>1.5530</td><td>1.4533</td><td>1.5593</td></tr><tr><td>嵌入向量方差(默认提示词)</td><td>1.3888</td><td>1.6548</td><td>1.6804</td><td>1.6636</td><td>1.5563</td><td>1.6642</td></tr><tr><td>最后隐藏层方差(对应提示词)</td><td>23.5463</td><td>23.7557</td><td>23.8193</td><td>23.8476</td><td>23.7426</td><td>23.8269</td></tr><tr><td>最后隐藏层方差(默认提示词)</td><td>23.1822</td><td>23.3891</td><td>23.4461</td><td>23.4846</td><td>23.3775</td><td>23.4565</td></tr></tbody></table><h4 id="Genesis-余弦相似度和方差比较">Genesis 余弦相似度和方差比较</h4><table><thead><tr><th>指标类型</th><th>点光源图片</th><th>亮度因子 0.8</th><th>亮度因子 0.9</th><th>亮度因子 1.1</th><th>亮度因子 1.2</th><th>原始图片</th></tr></thead><tbody><tr><td>嵌入向量相似度(有提示词)</td><td><strong>0.9523</strong></td><td>0.9254</td><td><strong>0.9562</strong></td><td>0.9385</td><td>0.9067</td><td>-</td></tr><tr><td>嵌入向量相似度(默认提示词)</td><td>0.9518</td><td><strong>0.9256</strong></td><td><strong>0.9562</strong></td><td><strong>0.9393</strong></td><td><strong>0.9069</strong></td><td>-</td></tr><tr><td>最后隐藏层相似度(有提示词)</td><td><strong>0.8303</strong></td><td><strong>0.7665</strong></td><td><strong>0.8335</strong></td><td>0.7974</td><td><strong>0.7298</strong></td><td>-</td></tr><tr><td>最后隐藏层相似度(默认提示词)</td><td>0.8284</td><td>0.7660</td><td>0.8332</td><td><strong>0.7982</strong></td><td>0.7290</td><td>-</td></tr><tr><td>嵌入向量方差(有提示词)</td><td>1.5404</td><td>1.5219</td><td>1.5288</td><td>1.5300</td><td>1.5355</td><td>1.5288</td></tr><tr><td>嵌入向量方差(默认提示词)</td><td>1.5378</td><td>1.5214</td><td>1.5271</td><td>1.5276</td><td>1.5343</td><td>1.5263</td></tr><tr><td>最后隐藏层方差(有提示词)</td><td>21.2368</td><td>21.2191</td><td>21.2396</td><td>21.3057</td><td>21.2890</td><td>21.2734</td></tr><tr><td>最后隐藏层方差(默认提示词)</td><td>21.2306</td><td>21.2025</td><td>21.2302</td><td>21.2906</td><td>21.2698</td><td>21.2607</td></tr></tbody></table><h4 id="Libero-余弦相似度和方差比较">Libero 余弦相似度和方差比较</h4><table><thead><tr><th>指标类型</th><th>点光源图片</th><th>亮度因子 0.8</th><th>亮度因子 0.9</th><th>亮度因子 1.1</th><th>亮度因子 1.2</th><th>原始图片</th></tr></thead><tbody><tr><td>嵌入向量相似度(有提示词)</td><td><strong>0.7002</strong></td><td><strong>0.8791</strong></td><td>0.9356</td><td>0.9280</td><td>0.8722</td><td>-</td></tr><tr><td>嵌入向量相似度(默认提示词)</td><td>0.6972</td><td>0.8761</td><td><strong>0.9383</strong></td><td><strong>0.9298</strong></td><td><strong>0.8768</strong></td><td>-</td></tr><tr><td>最后隐藏层相似度(有提示词)</td><td><strong>0.7888</strong></td><td><strong>0.9113</strong></td><td><strong>0.9466</strong></td><td><strong>0.9335</strong></td><td><strong>0.9043</strong></td><td>-</td></tr><tr><td>最后隐藏层相似度(默认提示词)</td><td>0.7784</td><td>0.9018</td><td>0.9450</td><td>0.9289</td><td>0.8979</td><td>-</td></tr><tr><td>嵌入向量方差(有提示词)</td><td>1.5132</td><td>1.3966</td><td>1.4318</td><td>1.4685</td><td>1.4725</td><td>1.5980</td></tr><tr><td>嵌入向量方差(默认提示词)</td><td>1.6414</td><td>1.5044</td><td>1.5550</td><td>1.5926</td><td>1.5870</td><td>1.7395</td></tr><tr><td>最后隐藏层方差(有提示词)</td><td>25.0966</td><td>24.8687</td><td>25.3594</td><td>24.9500</td><td>24.6622</td><td>26.2332</td></tr><tr><td>最后隐藏层方差(默认提示词)</td><td>25.0144</td><td>24.4799</td><td>25.0843</td><td>24.6315</td><td>24.2859</td><td>26.0618</td></tr></tbody></table><h4 id="结论">结论</h4><ol><li>对于<strong>最后隐藏层相似度</strong>来说，有对应提示词的图片的余弦相似度更高，说明有提示词的图片的特征提取效果更好；</li><li>对于<strong>嵌入向量方差</strong>来说，有对应提示词的图片的方差更小；而对于<strong>最后隐藏层方差</strong>，有对应提示词的图片的方差更大。</li><li>显然，所有的输出都是最后隐藏层方差远大于嵌入向量方差，说明最后隐藏层包含的特征信息更多。</li></ol><h4 id="Genesis和DROID的对比">Genesis和DROID的对比</h4><p>下面是视角对齐后的 Genesis 和 DROID 的图片对比：</p><div style="display: flex; justify-content: center; align-items: center; gap: 40px;">    <div style="flex: 1; text-align: center;">        <img src="/img/robosuite/genesis.png" alt="Genesis数据集" style="width: 400px; height: 200px; object-fit: cover;">        <p>Genesis数据集</p>    </div>    <div style="flex: 1; text-align: center;">        <img src="/img/robosuite/droid.png" alt="DROID数据集" style="width: 400px; height: 200px; object-fit: cover;">        <p>DROID数据集</p>    </div></div><h5 id="回顾：未对齐时的数据">回顾：未对齐时的数据</h5><table><thead><tr><th>数据集对比</th><th>嵌入向量相似度（平均值）</th><th>最后隐藏层相似度（平均值）</th></tr></thead><tbody><tr><td><code>DROID</code> vs <code>Genesis</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4665</mn></mrow><annotation encoding="application/x-tex">0.4665</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4665</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4954</mn></mrow><annotation encoding="application/x-tex">0.4954</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4954</span></span></span></span></td></tr><tr><td><code>DROID</code> vs <code>Libero</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5317</mn></mrow><annotation encoding="application/x-tex">0.5317</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5317</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5814</mn></mrow><annotation encoding="application/x-tex">0.5814</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5814</span></span></span></span></td></tr><tr><td><code>DROID</code> vs <code>Simpler</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4757</mn></mrow><annotation encoding="application/x-tex">0.4757</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4757</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5661</mn></mrow><annotation encoding="application/x-tex">0.5661</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5661</span></span></span></span></td></tr><tr><td><code>Libero</code> vs <code>Genesis</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.6601</mn></mrow><annotation encoding="application/x-tex">0.6601</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.6601</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.6343</mn></mrow><annotation encoding="application/x-tex">0.6343</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.6343</span></span></span></span></td></tr><tr><td><code>Libero</code> vs <code>Simpler</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.4494</mn></mrow><annotation encoding="application/x-tex">0.4494</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.4494</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5803</mn></mrow><annotation encoding="application/x-tex">0.5803</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5803</span></span></span></span></td></tr></tbody></table><p>对齐后的更详细数据：</p><table><thead><tr><th>指标</th><th><code>DROID</code> vs <code>Genesis</code>（对齐后）</th></tr></thead><tbody><tr><td>嵌入向量相似度</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5239</mn></mrow><annotation encoding="application/x-tex">0.5239</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5239</span></span></span></span></td></tr><tr><td>最后隐藏层相似度</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5604</mn></mrow><annotation encoding="application/x-tex">0.5604</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5604</span></span></span></span></td></tr><tr><td>DROID嵌入向量方差</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1.4824</mn></mrow><annotation encoding="application/x-tex">1.4824</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.4824</span></span></span></span></td></tr><tr><td>Genesis嵌入向量方差</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1.6932</mn></mrow><annotation encoding="application/x-tex">1.6932</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.6932</span></span></span></span></td></tr><tr><td>DROID最后隐藏层方差</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>23.2480</mn></mrow><annotation encoding="application/x-tex">23.2480</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">23.2480</span></span></span></span></td></tr><tr><td>Genesis最后隐藏层方差</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>23.6162</mn></mrow><annotation encoding="application/x-tex">23.6162</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">23.6162</span></span></span></span></td></tr></tbody></table><p>通过对比可以看出，对齐后的相似度（无论是嵌入向量还是最后隐藏层）都有所提升，说明对齐操作确实提高了两个数据集之间的相似性。</p><h3 id="别的尝试">别的尝试</h3><p>仿照 simpler_env 对 genesis 加一个桌子，目前正在进行试验（未成功）。</p><p><br><br></p><h2 id="本周报告（2025-3-7-–-2025-3-13）">本周报告（2025.3.7 – 2025.3.13）</h2><h3 id="本周工作">本周工作</h3><ol><li>实现光照变化、背景纯色和杂乱、相机抖动在仿真环境的代码，还未在训练和验证中测试；</li><li>修改了数据采集的代码，使得它在我的电脑上可以运行，并成功采集了一条数据；</li><li>正在训练一个基础模型用于测试。</li></ol><h4 id="光照变化">光照变化</h4><p>实现函数 <code>add_lighting_effect</code>，用于实现图像的光照变化。具体思路是光源可选择在四个角落，然后根据光源位置和图片大小，计算出每个像素点距离光源的距离，然后根据距离计算出光照强度，最后将光照强度乘以图片的像素值，得到光照变化后的图片。也就是说离光源越远，图像亮度变化越小。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_lighting_effect</span>(<span class="hljs-params">image, light_position=<span class="hljs-string">&#x27;top_left&#x27;</span>, intensity=<span class="hljs-number">0.5</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    给图像添加光照效果</span><br><span class="hljs-string">    image: numpy数组，输入图像</span><br><span class="hljs-string">    light_position: 字符串，光源位置 (&#x27;top_left&#x27;, &#x27;top_right&#x27;, &#x27;bottom_left&#x27;, &#x27;bottom_right&#x27;)</span><br><span class="hljs-string">    intensity: float, 光照强度 (-1.0 到 1.0)</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h4 id="背景纯色和杂乱">背景纯色和杂乱</h4><p>使用传统计算机视觉的方法（像素颜色比较、膨胀和腐蚀）来找到属于背景的部分，对其加上mask。再选取任意杂乱图片作为背景，在mask=1的部分使用杂乱图片，mask=0的部分使用原图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract_wall_background</span>(<span class="hljs-params">image, target_color, threshold=<span class="hljs-number">3</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    提取特定颜色的墙壁背景</span><br><span class="hljs-string">    参数:</span><br><span class="hljs-string">        image: RGB格式图像</span><br><span class="hljs-string">        target_color: 目标RGB颜色值</span><br><span class="hljs-string">        threshold: 允许的颜色差异阈值</span><br><span class="hljs-string">        min_area: 最小连通区域面积，小于此面积的区域将被过滤掉</span><br><span class="hljs-string">    返回:</span><br><span class="hljs-string">        wall_mask: 二值mask</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h4 id="相机抖动">相机抖动</h4><p>利用传统计算机视觉的运动卷积来模拟模糊效果，用平移和旋转模拟相机抖动，注意平移的角度就是运动方向。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_camera_jitter_and_blur</span>(<span class="hljs-params">image, max_translation=<span class="hljs-number">5</span>, max_rotation=<span class="hljs-number">2</span>, blur_kernel_size=<span class="hljs-number">15</span>, blur_intensity=<span class="hljs-number">3</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    模拟相机抖动和运动模糊效果，避免产生黑边</span><br><span class="hljs-string">    image: 输入图像</span><br><span class="hljs-string">    max_translation: 最大平移像素数</span><br><span class="hljs-string">    max_rotation: 最大旋转角度(度)</span><br><span class="hljs-string">    blur_kernel_size: 模糊卷积核大小</span><br><span class="hljs-string">    blur_intensity: 模糊强度</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h4 id="最后处理图片的效果">最后处理图片的效果</h4><p><img src="/img/robosuite/3/visualization_results.png" alt="最后处理图片的效果"></p><h3 id="数据收集-2">数据收集</h3><p>Libero 数据收集分为两个部分，一是通过键盘操作人工完成任务，这个时间段收集的数据只包含 <code>action</code> 和 <code>state</code>，感觉是用于复现的；二是通过上面采集的数据进行任务复现，同时再记录别的数据（如相机图像等等）。命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python scripts/collect_demonstration.py --bddl-file /home/ljr/embodied/LIBERO/libero/libero/bddl_files/libero_object/pick_up_the_alphabet_soup_and_place_it_in_the_basket.bddl --device keyboard --robots Panda <span class="hljs-comment"># 键盘操作人工完成任务</span><br>python scripts/create_dataset.py --demo-file demonstration_data/robosuite_ln_libero_floor_manipulation_1741832510_5507832_pick_the_alphabet_soup_and_place_it_in_the_basket/demo.hdf5 --use-camera-obs <span class="hljs-comment"># 复现任务，并记录相机图像等</span><br></code></pre></td></tr></table></figure><h3 id="跑通训练模型的代码">跑通训练模型的代码</h3><p>编写一个 <code>run.sh</code> 文件用于训练 <code>libero object</code> 10个任务的模型，目前已经训练到第9个任务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> CUDA_VISIBLE_DEVICES=0<br><span class="hljs-built_in">export</span> MUJOCO_EGL_DEVICE_ID=0<br><br><span class="hljs-comment"># 运行程序</span><br>python lifelong/main.py \<br>    seed=1234 \<br>    benchmark_name=libero_object \<br>    policy=bc_transformer_policy \<br>    lifelong=single_task<br></code></pre></td></tr></table></figure><p><img src="/img/robosuite/3/train_log.png" alt="训练log记录"></p><h3 id="工作内容与问题记录">工作内容与问题记录</h3><h4 id="环境配置问题修复">环境配置问题修复</h4><ol><li><p><strong>MUJOCO_GL 环境变量设置</strong></p><ul><li>桌面环境：需要设置 <code>export MUJOCO_GL=glx</code></li><li>实验室环境：需要设置 <code>export MUJOCO_GL=osmesa</code></li></ul></li><li><p><strong>数据采集脚本修改1</strong><br>在 <code>scripts/collect_demonstration.py</code> 中需要修改回调函数设置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 原代码</span><br>env.viewer.add_keypress_callback(<span class="hljs-string">&quot;any&quot;</span>, device.on_press)<br>env.viewer.add_keyup_callback(<span class="hljs-string">&quot;any&quot;</span>, device.on_release)<br>env.viewer.add_keyrepeat_callback(<span class="hljs-string">&quot;any&quot;</span>, device.on_press)<br><br><span class="hljs-comment"># 修改后</span><br>env.viewer.add_keypress_callback(device.on_press)<br></code></pre></td></tr></table></figure><p>修改原因：</p><ul><li><code>add_keypress_callback</code> 只接受一个参数</li><li><code>env.viewer</code> 类没有 <code>add_keyup_callback</code> 和 <code>add_keyrepeat_callback</code> 方法</li></ul></li><li><p><strong>数据采集脚本修改2</strong><br>在 <code>scripts/create_dataset.py</code> 中需要修改路径设置：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">hdf5_path = os.path.join(get_libero_path(<span class="hljs-string">&quot;datasets&quot;</span>), bddl_file_dir.split(<span class="hljs-string">&quot;bddl_files/&quot;</span>)[-<span class="hljs-number">1</span>].replace(<span class="hljs-string">&quot;.bddl&quot;</span>, <span class="hljs-string">&quot;_demo.hdf5&quot;</span>))<br><span class="hljs-comment"># 修改为</span><br>hdf5_path = os.path.join(get_libero_path(<span class="hljs-string">&quot;datasets&quot;</span>), bddl_file_name.split(<span class="hljs-string">&quot;bddl_files/&quot;</span>)[-<span class="hljs-number">1</span>].replace(<span class="hljs-string">&quot;.bddl&quot;</span>, <span class="hljs-string">&quot;_demo.hdf5&quot;</span>))<br></code></pre></td></tr></table></figure></li></ol><p>修改原因：应该使用文件路径而不是文件夹路径，否则文件名中不会出现.bddl</p><ol start="3"><li><p><strong>pynput库bug修复</strong><br>在文件 <code>pynput/_util/xorg.py</code> 第472行需要修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 原代码</span><br><span class="hljs-variable language_">self</span>._handle(<span class="hljs-variable language_">self</span>._display_stop, event, injected)<br><span class="hljs-variable language_">self</span>._handle_message(<span class="hljs-variable language_">self</span>._display_stop, event, injected)<br><br><span class="hljs-comment"># 修改后</span><br><span class="hljs-variable language_">self</span>._handle_message(<span class="hljs-variable language_">self</span>._display_stop, event, injected)<br></code></pre></td></tr></table></figure><p>参考：<a href="https://github.com/moses-palmer/pynput/issues/633">GitHub Issue #633</a></p><p>推测原因：代码合并时未正确删除重复代码</p></li></ol><h3 id="下周工作-2">下周工作</h3><ol><li>弄清楚 libero 自定义仿真环境的流程，并尝试自定义仿真环境；</li><li>在训练好一个 libero_object 10 个任务的模型后，在evaluation时对动作加入高斯噪声；</li><li>尝试使用深度学习的方式让背景识别更加精准（SAM？）；</li><li>…</li></ol><h3 id="待解决问题">待解决问题</h3><p>数据采集环境选择：</p><ul><li>服务器是headless环境，需要使用如<code>Xvfb</code>等软件进行远程投屏（当前无权限安装）</li><li>是否应该改为在本地电脑进行数据采集？</li></ul><p>需要确定最佳的数据采集方案。</p><p><br><br></p><h2 id="本周报告（2025-3-14-–-2025-3-20）">本周报告（2025.3.14 – 2025.3.20）</h2><h3 id="主要工作">主要工作</h3><p>本周主要完成了以下几个方面的工作：</p><ol><li><strong>背景图片替换</strong>：成功实现了仿真环境背景图片的替换。</li><li><strong>模型训练与验证</strong>：完成了 <code>libero_object</code> 10 个任务模型的训练，并验证了其准确率。</li><li><strong>手柄控制适配</strong>：调整了学长的 <code>xbox.py</code> 代码，适配了自己的手柄，解决了按键漂移问题。</li><li><strong>数据采集与训练</strong>：使用手柄采集了新任务的数据，并进行了训练，获得了初步结果。</li></ol><hr><h3 id="1-背景图片替换">1. 背景图片替换</h3><p>与之前的任务类似，本次任务通过替换墙壁的 texture 图片来实现背景的更换。具体步骤如下：</p><ul><li><p><strong>添加图片</strong>：在 <code>/LIBERO/libero/libero/assets/textures</code> 文件夹下添加新的背景图片，例如 <code>flower.png</code>。</p></li><li><p><strong>修改样式文件</strong>：在 <code>/LIBERO/libero/libero/envs/arenas/style.py</code> 文件中找到 <code>WALL_STYLE</code> 字典，添加 <code>&quot;flower&quot;: &quot;flower.png&quot;</code>。</p></li><li><p><strong>应用纹理</strong>：在代码中指定使用该纹理图片：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">env_args = &#123;<br>    <span class="hljs-string">&quot;bddl_file_name&quot;</span>: task_bddl_file,<br>    <span class="hljs-string">&quot;camera_heights&quot;</span>: <span class="hljs-number">256</span>,<br>    <span class="hljs-string">&quot;camera_widths&quot;</span>: <span class="hljs-number">256</span>, <br>    <span class="hljs-string">&quot;scene_properties&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;floor_style&quot;</span>: <span class="hljs-string">&quot;light-gray&quot;</span>,<br>        <span class="hljs-string">&quot;wall_style&quot;</span>: <span class="hljs-string">&quot;flower&quot;</span>,  <span class="hljs-comment"># customize wall style</span><br>    &#125;<br>&#125;<br>env = OffScreenRenderEnv(**env_args)<br></code></pre></td></tr></table></figure></li><li><p><strong>效果展示</strong>：替换后的效果比上周的计算机视觉识别方法更加清晰自然。</p><div align="center">    <img src="/img/robosuite/4/visualization_results.png" width="500"/>    <p>背景图片替换效果</p></div></li></ul><hr><h3 id="2-手柄控制适配">2. 手柄控制适配</h3><p>针对我的手柄特点（无背键、存在摇杆漂移），我对 <code>xbox.py</code> 进行了如下修改：</p><ul><li><strong>移除背键暂停代码</strong>：由于我的手柄没有背键，因此移除了相关代码。</li><li><strong>调整灵敏度</strong>：根据手感调整了摇杆的灵敏度。</li><li><strong>增加死区</strong>：设置了死区，将摇杆在小范围内的值置零，以消除摇杆漂移的影响。</li></ul><p><strong>注意：</strong> <code>receive_controller</code> 函数中 <code>self.device = self.find_device('Xbox')</code> 的 <code>Xbox</code> 需要根据实际设备名称进行修改（例如，学长的电脑上为 <code>X-Box</code>）。</p><p>修改后，可以使用手柄进行数据采集。</p><hr><h3 id="3-数据采集与训练">3. 数据采集与训练</h3><p>我重复使用了 <code>libero_object</code> 的第一个任务，并在环境中增加了一瓶饮料。使用手柄采集了 50 条数据，并进行了训练。</p><ul><li><strong>环境修改</strong>：使用 <code>.bddl</code> 文件添加了一瓶饮料（可从下面的视频中看出）。</li><li><strong>任务注册</strong>：在多个文件中添加了新任务的信息，使其加入到 benchmark 中。</li></ul><p>初步训练结果（50 epoch）：AoC 值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.07</mn></mrow><annotation encoding="application/x-tex">0.07</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.07</span></span></span></span>，最高完成率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.1</mn></mrow><annotation encoding="application/x-tex">0.1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.1</span></span></span></span>，效果不理想。</p><div align="center">  <table>    <tr>      <th>原始数据</th>      <th>我的数据</th>    </tr>    <tr>      <td><img src="/img/robosuite/4/raw_data.gif" width="300"/></td>      <td><img src="/img/robosuite/4/my_data.gif" width="300"/></td>    </tr>  </table>  <p>数据对比</p></div><p><strong>分析：</strong></p><ul><li>原始数据采集流畅，可以同时移动多个视角，延迟较小。</li><li>手柄采集的数据较为僵硬，只能同时移动一个视角，控制不便。</li><li>更倾向于使用 spacemouse 进行数据采集。</li></ul><p><strong>后续：</strong></p><p>将训练 epoch 增加到 200 后，模型准确率显著提高，且仍有增长空间。可以考虑进一步增加训练轮次。训练 Log 如下：</p><div align="center">    <img src="/img/robosuite/4/log.png" width="600"/>    <p>训练 Log</p></div><p><br><br></p><h2 id="本周报告（2025-3-21-–-2025-3-27）">本周报告（2025.3.21 – 2025.3.27）</h2><h3 id="主要工作-2">主要工作</h3><ol><li>阅读 <code>Openvla</code>，<code>Octo</code> 论文，看看它们是怎么在虚拟环境下进行验证的，由此来创造并改进一些数据集；</li><li>实现了一个新任务的创建（<strong>upsidedown</strong>）；</li><li>思考了接下来的路线；</li><li>将代码上传到 <code>github</code> 上。</li></ol><h3 id="阅读论文">阅读论文</h3><p><code>Octo</code> 论文的方法与 <code>Libero</code> 类似，可以认为是一个小的 <code>VLA</code> 模型，而<code>Octo</code>主要优势在于使用了<strong>vit</strong>作为处理图像的模型，具有更强大的泛化性；<code>Openvla</code> 的方法就是非常纯正的 <code>VLA</code> 模型。<br><code>Octo</code> 和 <code>Openvla</code> 主要是在真实环境下进行训练和测试，但是可以给我创建数据集一些启发。</p><ul><li>没见过的动作任务：<strong>Flip</strong>，<strong>Move_away</strong>，…</li><li>物品初始位置的变化：可以在任务创建的时候，给物品的初始化位置增加<strong>随机性</strong>，而不是几乎一样的位置（实现可能是增加<strong>随机数</strong>和<strong>随机交换位置</strong>），<br>或者<strong>随机</strong>把目标物品放在某件东西的上面，来测试模型对高度的泛化性；</li><li>增加一个<strong>中途失败</strong>的判定：若碰倒了某样东西或者是把两样东西一起移到篮子里，则直接判定为失败；</li><li>模拟真实环境：<em>花纹的变化</em>，<em>场景的变化</em>（如厨房，卧室，客厅），<em>光照的变化</em>，<em>相机随机抖动</em>，<em>动作数据高斯随机噪声</em>；</li></ul><h3 id="实现新任务">实现新任务</h3><p>这个基于 <em>没见过的动作任务</em>，在 <code>Openvla</code> 中，有一个 <strong>Flip</strong> 的任务，于是我发现可以给 <code>libero</code> 也增添一个差不多的任务：</p><div align="center">    <img src="/img/robosuite/5/upside.gif" width="400"/></div>实现难点主要是需要增加一个函数来判断一个物品是否是倒置的，目前已经实现。<h3 id="思考路线">思考路线</h3><ol><li>这个<code>benchmark</code>是作为训练还是测试用的还是两者皆有？</li><li>是否需要增加一个 <strong>vla</strong> 的 <code>evaluate</code> 接口？</li><li>是不是可以实现一个<strong>多卡训练</strong>？</li><li>是否应该抛弃 <code>libero</code> 的非 <code>multitask</code> 的训练？这样的话我可以重新写一个 <code>evaluate.py</code>。</li></ol><p><br><br></p><h2 id="本周报告（2025-4-11-–-2025-4-17）">本周报告（2025.4.11 – 2025.4.17）</h2><h3 id="主要工作-3">主要工作</h3><ol><li>成功将 <code>openpi</code> 模型转化为 <code>pytorch</code> 版本，并验证在相同输入下的输出结果的余弦相似度大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.99999</mn></mrow><annotation encoding="application/x-tex">0.99999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.99999</span></span></span></span>；</li><li>成功把 <code>libero_object</code> 数据集转化为 <code>RLDS</code> 格式，并用于微调 <code>octo-small</code> 模型；</li><li>正在完成对 <code>libero</code> 微调后的 <code>octo</code> 模型进行验证。</li></ol><h3 id="openpi-转化"><code>openpi</code> 转化</h3><ol><li><p>思路：先把 <code>pytorch</code> 版本的模型网络架构搭建起来，再去一层一层的对齐参数；</p></li><li><p>难点：</p><ul><li><p><code>multiheadattention</code> 的实现在<code>q,k,v</code> 层的形状一样时，在 <code>pytorch</code> 中会把这三层合并起来，造成了对齐参数的困难；</p>  <details>  <summary>正确的转化代码</summary>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 提取并处理 q,k,v 参数</span><br>q_kernel = jax_encoderblock[<span class="hljs-string">&#x27;MultiHeadDotProductAttention_0&#x27;</span>][<span class="hljs-string">&#x27;query&#x27;</span>][<span class="hljs-string">&#x27;kernel&#x27;</span>][i]<br>k_kernel = jax_encoderblock[<span class="hljs-string">&#x27;MultiHeadDotProductAttention_0&#x27;</span>][<span class="hljs-string">&#x27;key&#x27;</span>][<span class="hljs-string">&#x27;kernel&#x27;</span>][i]<br>v_kernel = jax_encoderblock[<span class="hljs-string">&#x27;MultiHeadDotProductAttention_0&#x27;</span>][<span class="hljs-string">&#x27;value&#x27;</span>][<span class="hljs-string">&#x27;kernel&#x27;</span>][i]<br>q_bias = jax_encoderblock[<span class="hljs-string">&#x27;MultiHeadDotProductAttention_0&#x27;</span>][<span class="hljs-string">&#x27;query&#x27;</span>][<span class="hljs-string">&#x27;bias&#x27;</span>][i]<br>k_bias = jax_encoderblock[<span class="hljs-string">&#x27;MultiHeadDotProductAttention_0&#x27;</span>][<span class="hljs-string">&#x27;key&#x27;</span>][<span class="hljs-string">&#x27;bias&#x27;</span>][i]<br>v_bias = jax_encoderblock[<span class="hljs-string">&#x27;MultiHeadDotProductAttention_0&#x27;</span>][<span class="hljs-string">&#x27;value&#x27;</span>][<span class="hljs-string">&#x27;bias&#x27;</span>][i]<br><br><span class="hljs-comment"># 获取形状参数</span><br>hidden_dim = q_kernel.shape[<span class="hljs-number">0</span>]<br>num_heads = q_kernel.shape[<span class="hljs-number">1</span>]<br>head_dim = q_kernel.shape[<span class="hljs-number">2</span>]<br><br>q_kernel_reshaped = jnp.transpose(q_kernel, (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)).reshape(num_heads * head_dim, hidden_dim)<br>k_kernel_reshaped = jnp.transpose(k_kernel, (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)).reshape(num_heads * head_dim, hidden_dim)<br>v_kernel_reshaped = jnp.transpose(v_kernel, (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)).reshape(num_heads * head_dim, hidden_dim)<br><br><span class="hljs-comment"># 处理偏置</span><br>q_bias_reshaped = q_bias.reshape(num_heads * head_dim)<br>k_bias_reshaped = k_bias.reshape(num_heads * head_dim)<br>v_bias_reshaped = v_bias.reshape(num_heads * head_dim)<br>https://linux.do/<br><span class="hljs-comment"># 合并参数并释放临时变量</span><br>in_proj_weight = jnp.vstack([q_kernel_reshaped, k_kernel_reshaped, v_kernel_reshaped])<br>in_proj_bias = jnp.concatenate([q_bias_reshaped, k_bias_reshaped, v_bias_reshaped])<br><br><span class="hljs-comment"># 设置 PyTorch 注意力参数</span><br>img_torch.encoder.blocks[i].attn.in_proj_weight = torch.nn.Parameter(<br>    torch.from_dlpack(in_proj_weight).to(device)<br>)<br>img_torch.encoder.blocks[i].attn.in_proj_bias = torch.nn.Parameter(<br>    torch.from_dlpack(in_proj_bias).to(device)<br>)<br></code></pre></td></tr></table></figure>  </details></li><li><p><code>numpy</code> 不支持 <code>bfloat16</code> 运算，如何将 <code>jax</code> 权重转化为 <code>torch</code> 的权重；</p></li><li><p>代码方案如下：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 对float32及其它</span><br>torch_tensor = torch.from_numpy(np.array(jax_tensor))<br><span class="hljs-comment"># 对bfloat16</span><br>torch_tensor = torch.from_dlpack(jax_tensor)<br></code></pre></td></tr></table></figure></li><li><p>如何规定 jax 模型在某张卡上跑？</p></li></ul></li><li><p>最终经过 100 轮随机输入的对齐检测，结果如下表格：</p><table><thead><tr><th>模块</th><th>平均余弦相似度</th><th>平均绝对误差</th></tr></thead><tbody><tr><td><code>img</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.9999995225</mn></mrow><annotation encoding="application/x-tex">0.9999995225</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.9999995225</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.0021352491</mn></mrow><annotation encoding="application/x-tex">0.0021352491</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.0021352491</span></span></span></span></td></tr><tr><td><code>llm</code></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.9999908083</mn></mrow><annotation encoding="application/x-tex">0.9999908083</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.9999908083</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.0515331663</mn></mrow><annotation encoding="application/x-tex">0.0515331663</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.0515331663</span></span></span></span></td></tr></tbody></table></li></ol><bs><h3 id="将-libero-object-数据集转化为-RLDS-格式">将 <code>libero_object</code> 数据集转化为 <code>RLDS</code> 格式</h3><ul><li>依赖于 <code>openvla</code> 项目的转化方式，先对hdf5文件进行预处理（去除空步数等），再把预处理后的hdf5文件在<a href="https://github.com/moojink/rlds_dataset_builder/tree/main">链接</a>中实现转化。</li><li>使用方式：<ol><li>进入<code>libero/convert_raw_hdf5</code> 文件夹，在激活环境后运行以下预处理代码； <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">python convert_raw_hdf5/regenerate_libero_dataset.py \<br>--libero_task_suite libero_object \<br>--libero_raw_data_dir libero/datasets/libero_object \<br>--libero_target_dir libero/datasets/libero_object_no_noops<br></code></pre></td></tr></table></figure></li><li>进入对应的 libero_object 文件夹，在写好本地预处理数据集路径后，直接运行 <code>tfds build</code> 即可。</li></ol></li></ul><h3 id="用Libero-RLDS数据微调octo">用<code>Libero_RLDS</code>数据微调<code>octo</code></h3><ul><li>仿照 <code>02_finetune.py</code> 来写微调文件，</li><li>在 <code>octo/data/oxe/oxe_standardization_transforms.py</code> 文件中添加预处理函数（是否需要？）</li><li>自定义图像处理参数是否要加上？我觉得应该要加，但这里我没加。</li><li>训练曲线：<br><img src="/img/robosuite/7/ft_octo_libero.png" alt="微调的损失曲线"></li></ul><h3 id="对-libero-微调后的-octo-模型进行验证">对 <code>libero</code> 微调后的 <code>octo</code> 模型进行验证</h3><ol><li><p>使用 <code>libero</code> 的验证环境，<code>octo</code> 的微调后模型作为 <code>policy</code>；</p></li><li><p>目前结果不佳，怀疑是 <code>finetune</code> 时的参数有问题，或者是推理代码中libero环境和octo模型没有很好的结合；</p><ul><li>要不要对输入的<code>obs</code>也用<code>oxe_standardization_transforms</code>函数进行预处理？</li><li>原始数据要不要经过像转化为<code>rlds</code>时经过的处理？</li><li>是不是语言编解码器的问题？</li></ul></li><li><p>目前1次验证的视频，可以看到夹爪一路向右上角飘逸而去，这显然不是我想要的结果。</p> <video controls width="400"> <source src="/img/robosuite/7/eval.mp4" type="video/mp4"> 您的浏览器不支持视频标签。 </video></li></ol><h3 id="下周任务-2">下周任务</h3><ol><li>完成<code>libero</code>微调后模型的测试；</li><li>收集<code>flip</code>数据；</li><li>用收集的<code>flip</code>数据训练<code>libero</code>，<code>octo</code>？</li></ol><p><br><br></p><h2 id="Report-This-Week（2025-4-18-–-2025-4-14）">Report This Week（2025.4.18 – 2025.4.14）</h2><h3 id="Main-work">Main work</h3><ol><li>Successfully finetune <code>octo</code> with <code>libero_object</code> dataset, complete the evaluation code during and after training;</li><li>Collect <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>50</mn></mrow><annotation encoding="application/x-tex">50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50</span></span></span></span> trajectories the <code>flip</code> task in same initial states;</li><li>Backup core codes in server;</li><li>Evaluate the libero_finetuned octo model (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>50000</mn></mrow><annotation encoding="application/x-tex">50000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50000</span></span></span></span> epochs) in location OOD environment.</li></ol><h3 id="Finetune-octo-with-libero">Finetune <code>octo</code> with <code>libero</code></h3><p>The bug last week that the Franka usually moves to topright corner is caused by not changing angentview images rotation by 180 degrees. The right code is following:</p><details><summary>Right Preprocess Code</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">joint_states = obs[<span class="hljs-string">&#x27;robot0_joint_pos&#x27;</span>]<br><span class="hljs-comment"># Process state data to match the format used during training</span><br><span class="hljs-keyword">from</span> robosuite.utils.transform_utils <span class="hljs-keyword">import</span> quat2axisangle<br>states = np.hstack((obs[<span class="hljs-string">&#x27;robot0_eef_pos&#x27;</span>], quat2axisangle(obs[<span class="hljs-string">&#x27;robot0_eef_quat&#x27;</span>])))<br><span class="hljs-comment"># Get gripper position values and align with training, see oxe_standardization_transforms.py</span><br>gripper_states = (<span class="hljs-number">1.0</span> - obs[<span class="hljs-string">&#x27;robot0_gripper_qpos&#x27;</span>]) / <span class="hljs-number">2.0</span><br>states = np.concatenate((states, gripper_states), axis=-<span class="hljs-number">1</span>)<br><span class="hljs-comment"># Prepare observation data</span><br>octo_obs = &#123;<br>    <span class="hljs-comment"># [::-1,::-1] flips the image both vertically and horizontally by 180 degrees to match training data (in hdf5-&gt;rlds conversion)</span><br>    <span class="hljs-string">&quot;image_primary&quot;</span>: np.array([[obs[<span class="hljs-string">&#x27;agentview_image&#x27;</span>][::-<span class="hljs-number">1</span>, ::-<span class="hljs-number">1</span>]]]),      <span class="hljs-comment"># [1, 1, 256, 256, 3]</span><br>    <span class="hljs-string">&quot;image_wrist&quot;</span>: np.array([[obs[<span class="hljs-string">&#x27;robot0_eye_in_hand_image&#x27;</span>][::-<span class="hljs-number">1</span>, ::-<span class="hljs-number">1</span>]]]), <span class="hljs-comment"># [1, 1, 256, 256, 3]</span><br>    <span class="hljs-string">&quot;timestep_pad_mask&quot;</span>: np.ones((<span class="hljs-number">1</span>, <span class="hljs-number">1</span>), dtype=<span class="hljs-built_in">bool</span>),            <span class="hljs-comment"># [1, 1]</span><br>    <span class="hljs-string">&quot;proprio&quot;</span>: np.concatenate((states, joint_states), axis=-<span class="hljs-number">1</span>).reshape(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">1</span>)   <span class="hljs-comment"># [1, 1, 15]</span><br>&#125;<br></code></pre></td></tr></table></figure></details><p>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>50000</mn></mrow><annotation encoding="application/x-tex">50000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50000</span></span></span></span> epochs training, model gets <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>82</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">82\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">82%</span></span></span></span> success rate in IID environment.</p><h3 id="Collect-flip-trajectory">Collect <code>flip</code> trajectory</h3><p>I collect <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>50</mn></mrow><annotation encoding="application/x-tex">50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50</span></span></span></span> trajectories in the almost same initial states, one of which is following:<br><video controls width="400"></p><source src="/img/robosuite/8/flip.mp4" type="video/mp4">Your browser does not support video format!</video><p>I think I can up the sensitivity to make the actions more smooth.</p><h3 id="Evaluate">Evaluate</h3><p>Evaluation during training uses origin initial states, where the positions of objects barely change. So I evaluate the model in a location OOD, specifically each object’s position has a <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>σ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>σ</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\sigma_1, \sigma_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> offset, where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0.03</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_i \sim \mathcal{N}(0, 0.03)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.03</span><span class="mclose">)</span></span></span></span>, meaning every location of item changes from <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[x, y]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span></span></span></span> to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><mo>+</mo><msub><mi>σ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>y</mi><mo>+</mo><msub><mi>σ</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[x+\sigma_1, y+\sigma_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>.</p><div style="display: flex; justify-content: space-between; margin: 20px 0;">    <div style="text-align: center; margin: 0 20px;">        <img src="/img/robosuite/8/origin_init.png" alt="Origin Initial" width="380">        <p><strong>Origin Initial State</strong></p>    </div>    <div style="text-align: center; margin: 0 20px;">        <img src="/img/robosuite/8/test_init.png" alt="Test Initial" width="380">        <p><strong>Test Initial State (OOD)</strong></p>    </div></div>The following table shows the success rate of the model in both IID and location OOD scenarios:<table><thead><tr><th>Test Scenario</th><th>Success Rate</th><th>Number of Trials</th></tr></thead><tbody><tr><td>IID (Original)</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.82</mn></mrow><annotation encoding="application/x-tex">0.82</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.82</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>50</mn></mrow><annotation encoding="application/x-tex">50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50</span></span></span></span></td></tr><tr><td>Location OOD</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.75</mn></mrow><annotation encoding="application/x-tex">0.75</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.75</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>20</mn></mrow><annotation encoding="application/x-tex">20</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">20</span></span></span></span></td></tr></tbody></table><h3 id="Next-Week’s-Work">Next Week’s Work</h3><ol><li>Devise more dataset environments and collect corresponding data;</li><li>Re-collect the <code>flip</code> data and make it more smooth;</li><li>Evaluate other OOD configurations: different backgrounds, lighting, gaussian noise in actions;</li></ol><p><br><br></p><h2 id="Report-This-Week（2025-5-8-–-2025-5-15）">Report This Week（2025.5.8 – 2025.5.15）</h2><h3 id="Main-Work">Main Work</h3><ol><li>阅读了 <code>MiniMind-V</code> 的代码架构，对其进行了分析；</li><li>阅读了 <code>openvla</code> 是如何由 VLM 模型转化为 VLA 模型的；</li><li>初步安装好了 <code>Isaac Sim</code>，后续打算学习这个。</li></ol><h3 id="MiniMind-V">MiniMind-V</h3><h3 id="Openvla">Openvla</h3><p>VLM 模型转化为 VLA 模型主要依赖 <code>ActionTokenizer</code>。<code>Openvla</code> 中的<code>ActionTokenizer</code> 代码如下：</p><ul><li><p><code>class ActionTokenizer:</code>：定义了一个名为 <code>ActionTokenizer</code> 的类，用于将连续的机器人动作离散化为 token。</p></li><li><p><code>def __init__(...)</code>:</p><ul><li>这是类的构造函数，用于初始化 <code>ActionTokenizer</code> 的实例。</li><li><code>self.tokenizer, self.n_bins, self.min_action, self.max_action = tokenizer, bins, min_action, max_action</code>: 保存传入的分词器、分箱数量、动作的最小值和最大值。</li><li><code>self.bins = np.linspace(min_action, max_action, self.n_bins)</code>: 在动作的最小和最大值之间创建 <code>self.n_bins</code> 个均匀间隔的分箱边界。</li><li><code>self.bin_centers = (self.bins[:-1] + self.bins[1:]) / 2.0</code>: 计算每个分箱区间的中心点，用于后续将离散动作解码回连续值。</li><li><code>self.action_token_begin_idx: int = int(self.tokenizer.vocab_size - (self.n_bins + 1))</code>: 计算用于表示动作的 token 在词汇表中的起始索引。这里假设使用词汇表中最后 <code>n_bins + 1</code> 个 token 来表示动作。</li></ul></li><li><p><code>def __call__(self, action: np.ndarray) -&gt; Union[str, List[str]]:</code>:</p><ul><li>这个方法使得 <code>ActionTokenizer</code> 的实例可以像函数一样被调用，用于将连续动作编码为 token 字符串。</li><li><code>action = np.clip(action, a_min=float(self.min_action), a_max=float(self.max_action))</code>: 将输入的连续动作值裁剪到预设的最小和最大动作值范围内。</li><li><code>discretized_action = np.digitize(action, self.bins)</code>: 使用 <code>np.digitize</code> 将裁剪后的连续动作值离散化到对应的分箱索引。</li><li><code>if len(discretized_action.shape) == 1:</code>: 判断输入是单个动作还是批量动作。</li><li><code>return self.tokenizer.decode(list(self.tokenizer.vocab_size - discretized_action))</code>: 对于单个动作，将离散化的动作索引映射到词汇表中倒数的 token ID ，然后使用原始分词器解码为 token 字符串。</li></ul></li><li><p><code>def decode_token_ids_to_actions(self, action_token_ids: np.ndarray) -&gt; np.ndarray:</code>:</p><ul><li>这个方法用于将离散的动作 token ID 解码回连续的动作值。</li><li><code>discretized_actions = self.tokenizer.vocab_size - action_token_ids</code>: 将动作的 token ID 转换回离散化的动作索引（与编码过程相反）。</li><li><code>discretized_actions = np.clip(discretized_actions - 1, a_min=0, a_max=self.bin_centers.shape[0] - 1)</code>: 对离散动作索引进行调整和裁剪。减 1 是因为 <code>np.digitize</code> 返回的索引从 1 开始，而 <code>self.bin_centers</code> 的索引从 0 开始。裁剪是为了防止索引越界。</li><li><code>return self.bin_centers[discretized_actions]</code>: 使用调整后的离散动作索引从 <code>self.bin_centers</code> 中获取对应的连续动作值（即分箱中心值）。</li></ul><p>使用这个 <code>ActionTokenizer</code> 方式如下：</p><h4 id="使用解读">使用解读</h4></li></ul><p>这段代码展示了在模型训练或评估过程中，如何使用 <code>ActionTokenizer</code> 来处理和评估模型预测的机器人动作。</p><ol><li><p><strong>提取和过滤动作预测</strong>:</p><ul><li><code>mask = action_gt &gt; action_tokenizer.action_token_begin_idx</code>:<ul><li>这是关键的一步，利用了 <code>ActionTokenizer</code> 的 <code>action_token_begin_idx</code> 属性。这个属性定义了在分词器的词汇表中，专门用于表示离散化动作的 token ID 的起始位置。</li><li>通过比较真实的动作标签 <code>action_gt</code> 是否大于这个起始索引，可以创建一个布尔掩码 <code>mask</code>。这个掩码指明了哪些 token 实际上是有效的动作 token，而不是填充 token、文本 token 或其他特殊 token。后续的准确率和损失计算都将基于这个掩码，只考虑有效的动作部分。</li></ul></li></ul></li><li><p><strong>计算动作准确率</strong>:</p><ul><li><code>correct_preds = (action_preds == action_gt) &amp; mask</code>:<ul><li>首先比较预测的动作 token ID <code>action_preds</code> 和真实的动作 token ID <code>action_gt</code> 是否相等。</li><li>然后使用 <code>&amp; mask</code> 操作，确保只在有效的动作 token 位置（由 <code>mask</code> 指示）进行比较。</li></ul></li></ul></li><li><p><strong>计算连续动作的 L1 损失</strong>:</p><ul><li><code>continuous_actions_pred = torch.tensor(action_tokenizer.decode_token_ids_to_actions(action_preds[mask].cpu().numpy()))</code>:<ul><li>这里使用了 <code>ActionTokenizer</code> 的核心功能之一：<code>decode_token_ids_to_actions</code> 方法。</li><li>首先，<code>action_preds[mask]</code> 筛选出所有被模型预测为有效动作的 token ID。</li><li><code>action_tokenizer.decode_token_ids_to_actions(...)</code> 将这些离散的 token ID 解码回它们所代表的连续动作值（每个动作维度的分箱中心值）。</li><li>最后，<code>torch.tensor(...)</code> 将解码得到的 NumPy 数组转换回 PyTorch 张量。</li></ul></li><li><code>continuous_actions_gt = torch.tensor(action_tokenizer.decode_token_ids_to_actions(action_gt[mask].cpu().numpy()))</code>:<ul><li>对真实的动作标签执行相同的解码过程，得到真实的连续动作值。</li></ul></li><li><code>action_l1_loss = torch.nn.functional.l1_loss(continuous_actions_pred, continuous_actions_gt)</code>:<ul><li>计算预测的连续动作和真实的连续动作之间的 L1 损失（平均绝对误差）。这提供了一个衡量模型预测的连续动作与真实动作接近程度的指标。</li></ul></li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>docker学习笔记</title>
    <link href="/2024/09/29/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/09/29/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#----">学习要求</a></li><li><a href="#--ubuntu-----docker">在 ubuntu 上安装 docker</a></li><li><a href="#--docker-----">给 docker 配置代理</a></li><li><a href="#docker-----">docker 常用指令</a><ul><li><a href="#----">帮助启动</a></li><li><a href="#----">镜像命令</a></li><li><a href="#----">容器命令</a></li><li><a href="#docker------">docker 容器数据卷</a></li></ul></li><li><a href="#dockerfile">Dockerfile</a><ul><li><a href="#-----">关键字含义</a></li><li><a href="#-------">构建镜像的命令</a></li><li><a href="#--">例子</a></li></ul></li><li><a href="#docker---">Docker 网络</a><ul><li><a href="#----">常用命令</a></li><li><a href="#----">网络模式</a></li></ul></li></ul><!-- tocstop --><h2 id="学习要求">学习要求</h2><ol><li>有可以稳定访问 <code>github</code> 的代理；</li><li>最好是 <code>Linux</code> 系统，windows系统可以用wsl子系统。</li></ol><h2 id="在-ubuntu-上安装-docker">在 ubuntu 上安装 docker</h2><ol><li>卸载之前的 docker 并安装需要的包： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get remove docker docker-engine docker.io containerd runc<br><span class="hljs-built_in">sudo</span> apt install  curl software-properties-common gnupg lsb-release<br></code></pre></td></tr></table></figure></li><li>添加并更新 apt 源： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#添加 Docker 官方 GPG key</span><br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | <span class="hljs-built_in">sudo</span> gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg<br><br><span class="hljs-comment">#Docker官方源</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;deb [arch=<span class="hljs-subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span> | <span class="hljs-built_in">sudo</span> <span class="hljs-built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null<br><br><span class="hljs-built_in">sudo</span> apt update; <span class="hljs-built_in">sudo</span> apt-get update <span class="hljs-comment">#更新源</span><br></code></pre></td></tr></table></figure></li><li>安装 docker： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<br><span class="hljs-built_in">sudo</span> docker version <span class="hljs-comment">#查看Docker版本</span><br><span class="hljs-built_in">sudo</span> systemctl status docker <span class="hljs-comment">#查看Docker运行状态</span><br></code></pre></td></tr></table></figure></li><li>让用户能以 root 权限来运行 docker 指令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> groupadd docker <span class="hljs-comment"># 添加docker用户组，一般已存在，不需要执行</span><br><span class="hljs-built_in">sudo</span> gpasswd -a <span class="hljs-variable">$USER</span> docker <span class="hljs-comment"># 将登陆用户加入到docker用户组中</span><br>newgrp docker <span class="hljs-comment"># 更新用户组</span><br>docker version <span class="hljs-comment"># 测试docker命令是否可以使用sudo正常使用</span><br></code></pre></td></tr></table></figure></li></ol><p>当然，由于安装过程可能会发生变化，这里更建议去官网查看安装教程，网址<a href="https://docs.docker.com/desktop/install/linux/ubuntu/">在这</a>。</p><h2 id="给-docker-配置代理">给 docker 配置代理</h2><p>参考自<a href="https://www.cnblogs.com/Chary/p/18096678">资料</a>。<br>我使用的是<code>clash for windows</code>代理，稳定的免密代理为<code>http://127.0.0.1:7890</code>，端口号在cfw的配置页有。<img src="/img/docker/port.png" alt=""></p><ul><li>Dockerd 代理<br>在执行 docker pull 时，是由守护进程 dockerd 来执行。因此，代理需要配在 dockerd 的环境中。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p /etc/systemd/system/docker.service.d<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">touch</span> /etc/systemd/system/docker.service.d/proxy.conf<br></code></pre></td></tr></table></figure>然后在文件中添加 Service：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/systemd/system/docker.service.d/proxy.conf<br><span class="hljs-comment"># 添加以下内容</span><br>Environment=<span class="hljs-string">&quot;HTTP_PROXY=http://127.0.0.1:7890/&quot;</span><br>Environment=<span class="hljs-string">&quot;HTTPS_PROXY=http://127.0.0.1:7890/&quot;</span><br>Environment=<span class="hljs-string">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span><br></code></pre></td></tr></table></figure>最后重启 docker 服务即可快速拉取镜像。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br><span class="hljs-built_in">sudo</span> systemctl restart docker<br><span class="hljs-comment"># 尝试拉取一个6G的镜像，看看速度怎么样</span><br>docker pull pytorch/pytorch:2.4.0-cuda12.1-cudnn9-devel<br></code></pre></td></tr></table></figure></li></ul><h2 id="docker-常用指令">docker 常用指令</h2><h3 id="帮助启动">帮助启动</h3><table><thead><tr><th>作用</th><th>命令</th></tr></thead><tbody><tr><td>启动docker</td><td><code>systemctl start docker</code></td></tr><tr><td>停止docker</td><td><code>systemctl stop docker</code></td></tr><tr><td>重启docker</td><td><code>systemctl restart docker</code></td></tr><tr><td>查看docker状态</td><td><code>systemctl status docker</code></td></tr><tr><td>查看docker概要信息</td><td><code>docker info</code></td></tr><tr><td>查看帮助文档</td><td><code>docker --help</code></td></tr><tr><td>查看具体命令帮助文档</td><td><code>docker 具体命令 --help</code></td></tr></tbody></table><h3 id="镜像命令">镜像命令</h3><ul><li><p><code>docker images</code><br>列举出下载镜像的相关信息。<br>REPOS：镜像仓库源<br>TAG：镜像的标签<br>IMAGE ID：镜像ID<br>CREATED：镜像创建时间<br>SIZE：镜像大小<br><img src=/img/docker/images.png></p></li><li><p><code>docker search / pull 项目名称</code><br>在远程库中搜索某个项目的信息 &amp; 从远程库中拉取某个项目。</p></li><li><p><code>docker system df</code><br>查看镜像、容器和本地卷的数量、活动的数量、大小等等。<br><img src=/img/docker/df.png style="width: 80%; height: auto;"></p></li><li><p><code>docker rmi ImageID</code><br>删除特定的镜像。<br>-f：强制删除</p></li></ul><h3 id="容器命令">容器命令</h3><ul><li><p><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</code></p><ul><li><code>--name=&quot;容器名字&quot;</code>：给容器指定一个名字</li><li><code>-d</code>：后台运行容器并返回容器ID</li><li><code>-i</code>：以交互模式运行容器，通常与<code>-t</code>一起使用</li><li><code>-t</code>：给容器分配一个伪输入终端</li><li><code>-P</code>：随机端口映射</li><li><code>-p</code>：指定端口映射</li><li><code>例</code>：<code>docker run -it --name test ubuntu:20.04</code> 启动ubuntu的docker</li></ul></li><li><p><code>docker ps [OPTIONS]</code><br>查看正在运行的容器信息。<br><img src="/img/docker/dockerps.png" alt=""></p><ul><li><code>-a</code>：列出所有正在运行和操作过的容器</li><li><code>-l</code>：显示最近创建的容器</li><li><code>-n</code>：显示最近创建的n个容器</li><li><code>-q</code>：静默模式，只显示容器编号</li></ul></li><li><p><code>exit &amp; ctrl+p+q</code><br><code>exit</code>会使容器退出并停止，而<code>ctrl+p+q</code>只会退出容器。</p></li><li><p><code>docker start/restart/stop/kill 容器ID或容器名</code><br>启动/重启/停止/强行停止 容器。</p></li><li><p><code>docker rm 容器ID或容器名</code><br>删除已停止的容器。</p></li><li><p><code>docker logs 容器ID</code><br>查看容器的日志。</p></li><li><p><code>docker top 容器ID</code><br>查看容器中运行的进程。</p></li><li><p><code>docker inspect 容器ID</code><br>查看容器内部运行细节，输出一个json格式的文字。</p></li><li><p><code>docker exec -it 容器ID /bin/bash</code><br>重新进入容器，并以命令行交互。</p></li><li><p><code>docker cp 容器ID:容器内文件路径 主机路径</code><br>将容器内文件拷贝到主机的指定路径上。</p></li><li><p><code>docker export 容器ID &gt; name.tar</code><br>把容器全部导出为name.tar文件（镜像）。</p></li><li><p><code>cat name.tar | docker import - 镜像用户/镜像名称：版本号</code><br>00:02 / 06:15<br>1080P 高清<br>倍速<br>1人正在看<br>，<br>已装填 219 条弹幕<br>￼</p></li></ul><h3 id="docker-容器数据卷">docker 容器数据卷</h3><p>备份docker容器内的重要数据（数据卷）到本机目录。<br>在运行容器时加上 <code>--privileged=true</code>。</p><p>命令：<code>docker run --privileged=true -v /宿主机绝对路径目录:容器内目录 镜像名</code><br>可以简单理解为两个目录下的文件是同步的。可以通过<code>docker inspect</code>来查看。<br>在运行了<code>docker run -it --privileged=true --net=host -v /tmp/host_data:/tmp/docker_data ubuntu</code>后，<code>inspect</code>会显示以下信息：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;Mounts&quot;</span><span class="hljs-punctuation">:</span> <br><span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;Type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bind&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Source&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/tmp/host_data&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Destination&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/tmp/docker_data&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Mode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;RW&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Propagation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;rprivate&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h2 id="Dockerfile">Dockerfile</h2><p>Dockerfile 是一个文本文件，包含了构建 Docker 镜像的所有指令。<br>Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。<br>通过定义一系列命令和参数，Dockerfile 指导 Docker 构建一个自定义的镜像。</p><h3 id="关键字含义">关键字含义</h3><ul><li><code>FROM</code>：基础镜像，当前镜像是基于哪个镜像的；</li><li><code>RUN</code>：容器构建时运行的命令，有shell和exec两种格式；</li><li><code>WORKDIR</code>：容器创建后默认的工作目录；</li><li><code>ENV</code>：在构建镜像过程中设置环境变量；（例：ENV DEBIAN_FRONTEND=noninteractive）</li><li><code>COPY</code>：将宿主机文件复制到镜像内；</li><li><code>ADD</code>：将宿主机路径下的文件拷贝进镜像，并能自动处理URL和解压tar安装包，约等于<code>COPY</code>+解压；</li></ul><h3 id="构建镜像的命令">构建镜像的命令</h3><p><code>docker build [OPTIONS] PATH | URL | -</code></p><ul><li><code>PATH</code>: 包含 Dockerfile 的目录路径或 .（当前目录）。</li><li><code>URL</code>: 指向包含 Dockerfile 的远程存储库地址（如 Git 仓库）。</li><li><code>-</code>: 从标准输入读取 Dockerfile。<br>常见参数：</li></ul><ol><li><code>-t</code>：后面接为构建的镜像指定名称和标签；</li><li></li></ol><h3 id="例子">例子</h3><p>以操作系统的Lab1为例。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> ubuntu:<span class="hljs-number">20.04</span><br><span class="hljs-keyword">ENV</span> DEBIAN_FRONTEND=noninteractive<br><span class="hljs-keyword">ENV</span> TZ=Asia/Shanghai<br><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span><br><span class="language-bash">    apt-get install -y \</span><br><span class="language-bash">    cmake=3.16.* \</span><br><span class="language-bash">    cmake-curses-gui=3.16.* \</span><br><span class="language-bash">    make \</span><br><span class="language-bash">    ninja-build \</span><br><span class="language-bash">    cpio \</span><br><span class="language-bash">    binutils \</span><br><span class="language-bash">    binutils-aarch64-linux-gnu \</span><br><span class="language-bash">    binutils-riscv64-linux-gnu \</span><br><span class="language-bash">    gcc=4:9.3.* \</span><br><span class="language-bash">    gcc-aarch64-linux-gnu=4:9.3.* \</span><br><span class="language-bash">    gcc-riscv64-linux-gnu=4:9.3.* \</span><br><span class="language-bash">    g++=4:9.3.* \</span><br><span class="language-bash">    g++-aarch64-linux-gnu=4:9.3.* \</span><br><span class="language-bash">    g++-riscv64-linux-gnu=4:9.3.* \</span><br><span class="language-bash">    grub-common \</span><br><span class="language-bash">    grub-pc-bin \</span><br><span class="language-bash">    xorriso &amp;&amp; \</span><br><span class="language-bash">    apt-get clean &amp;&amp; \</span><br><span class="language-bash">    <span class="hljs-built_in">rm</span> -rf /var/lib/apt/lists/*</span><br></code></pre></td></tr></table></figure><p>新建文件Dockerfile，写入以上内容，然后运行 <code>docker build -t lab1:1.0 .</code> 即可，表示在当前目录下根据<code>Dockerfile</code>文件创建一个<code>lab1:1.0</code>的镜像。</p><h2 id="Docker-网络">Docker 网络</h2><p>运行 docker 服务后，会产生一个 <code>docker0</code> 的虚拟网桥。管理容器间的互联及网络映射，容器IP变动时可通过服务名直接网络通信而不受影响。</p><h3 id="常用命令">常用命令</h3><ul><li><p><code>docker network ls</code><br>查看当前网络状态。</p></li><li><p><code>docker network inspect XXX</code><br>查看网络原数据。</p></li></ul><h3 id="网络模式">网络模式</h3><ul><li><p><code>bridge</code><br>为每一个容器分配、设置IP，并将容器连接到 <code>docker0</code>虚拟网桥，默认为该模式；用 <code>--network bridge</code> 指定。<br>docker 容器内部的IP是可能改变的！</p></li><li><p><code>host</code><br>容器使用宿主机的IP和端口，并不虚拟出自己的网卡。用 <code>--network host</code> 指定。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>操作系统笔记</title>
    <link href="/2024/09/28/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/09/28/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#arm--------">ARM操作系统汇编语言</a><ul><li><a href="#aarch64----">aarch64常见指令</a><ul><li><a href="#-----------">寄存器间的数据搬移指令</a></li><li><a href="#----">寻址模式</a></li><li><a href="#----">扩展指令</a></li><li><a href="#----">跳转指令</a></li></ul></li><li><a href="#----">函数调用</a><ul><li><a href="#------">函数调用指令</a></li><li><a href="#-----stack-frame-">函数栈帧（Stack Frame）</a></li><li><a href="#------">多级函数调用</a></li><li><a href="#--------">函数参数与返回值</a></li></ul></li><li><a href="#-----">寄存器保存</a><ul><li><a href="#-------">通用寄存器保存</a></li><li><a href="#---cube--">例子：cube函数</a></li></ul></li><li><a href="#----">局部变量</a><ul><li><a href="#----">一个例子</a></li></ul></li><li><a href="#--">总结</a></li></ul></li><li><a href="#--isa">系统ISA</a><ul><li><a href="#----">特权级别</a><ul><li><a href="#armv84---">ARMv8.4特权级</a></li><li><a href="#----el0------el1-">用户态（EL0）和内核态（EL1）</a></li><li><a href="#aarch64------------------">AArch64 中常见寄存器在不同特权级的可见情况</a></li></ul></li><li><a href="#-----">特权级切换</a><ul><li><a href="#---------">特权级切换的必要性</a></li><li><a href="#----------------">何时发生特权级切换：在发生异常时</a></li><li><a href="#------">异常处理函数</a></li></ul></li><li><a href="#----">系统调用</a><ul><li><a href="#aarch64---linux-----">AArch64常见的Linux的系统调用</a></li><li><a href="#------">系统调用例子</a></li></ul></li><li><a href="#------">系统调用优化</a><ul><li><a href="#vdso">VDSO</a></li><li><a href="#flex-sc">Flex-SC</a></li></ul></li></ul></li><li><a href="#------------">从应用视角看操作系统抽象</a><ul><li><a href="#--">进程</a></li><li><a href="#----">进程切换</a><ul><li><a href="#-------cpu-context-">处理器上下文(CPU Context)</a></li><li><a href="#------">进程切换时机</a></li></ul></li><li><a href="#----------">常见的进程相关的接口</a><ul><li><a href="#----id">获取进程ID</a></li><li><a href="#exit---fork--">Exit &amp; Fork函数</a></li><li><a href="#execve--">Execve函数</a></li><li><a href="#linux------">Linux下的僵尸进程</a></li></ul></li><li><a href="#--">内存</a><ul><li><a href="#----">虚拟内存</a></li></ul></li><li><a href="#--">文件</a><ul><li><a href="#unix---">Unix 文件</a></li><li><a href="#----">打开文件</a></li><li><a href="#----">关闭文件</a></li><li><a href="#----">读写文件</a></li></ul></li></ul></li><li><a href="#------">内存地址翻译</a><ul><li><a href="#----">分页机制</a></li><li><a href="#------">内存地址翻译</a><ul><li><a href="#--">例子</a></li><li><a href="#-------------">单级页表问题和多级页表优点</a></li><li><a href="#aarch64-----4---">AARCH64体系结构下4级页表</a></li></ul></li><li><a href="#---">页表项</a><ul><li><a href="#---">页表页</a></li><li><a href="#------">页表项与大页</a></li></ul></li><li><a href="#tlb---------------">TLB：缓存页表项、地址翻译的加速器</a><ul><li><a href="#tlb---">TLB 刷新</a></li></ul></li></ul></li><li><a href="#----------">操作系统管理页表映射</a><ul><li><a href="#--------">何时设置页表映射</a></li><li><a href="#----">立即映射</a></li><li><a href="#----">延迟映射</a><ul><li><a href="#------------">记录为进程分配的虚拟内存</a></li><li><a href="#-----vma">如何添加 VMA</a></li><li><a href="#-mmap-"><code>MMAP</code></a></li><li><a href="#----------">判断缺页异常的合法性</a></li><li><a href="#-----vs-----">立即映射 vs. 延迟映射</a></li><li><a href="#----------">分配物理页的简单实现</a></li></ul></li><li><a href="#---------">虚拟内存的扩展功能</a><ul><li><a href="#----------copy-on-write-">共享内存、写时拷贝（copy-on-write）</a></li><li><a href="#-----">大页的使用</a></li></ul></li></ul></li><li><a href="#------">物理内存管理</a><ul><li><a href="#os-----------">OS职责：分配物理内存资源</a><ul><li><a href="#--1-------on-demand-paging-">场景1：应用触发 <code>on-demand paging</code></a></li><li><a href="#----------">物理内存分配器的指标</a></li><li><a href="#----------buddy-system-">解决方式：伙伴系统（buddy system）</a></li><li><a href="#-----------">合并过程如何定位伙伴块</a></li><li><a href="#----------">资源利用率、分配性能</a></li></ul></li><li><a href="#slab-slub-slob--------">SLAB/SLUB/SLOB：细粒度内存管理</a><ul><li><a href="#---2----------------">场景-2：内核运行中需要进行动态内存分配</a></li><li><a href="#slab--------------">SLAB：建立在伙伴系统之上的分配器</a></li><li><a href="#slub---">SLUB 设计</a></li></ul></li><li><a href="#----------">突破物理内存容量限制</a><ul><li><a href="#-----swapping-">换页机制（Swapping）</a></li><li><a href="#-----------------">如何判断缺页异常是由于换页引起的？</a></li><li><a href="#--------">何时进行换出操作</a></li><li><a href="#-------">换页机制的代价</a></li><li><a href="#--------">如何选择换出的页</a></li></ul></li><li><a href="#---------">总结：物理内存管理</a></li></ul></li><li><a href="#--">进程</a><ul><li><a href="#------pcb">进程的表示：PCB</a></li><li><a href="#-------">内核栈和用户栈</a></li><li><a href="#-----">进程的创建</a><ul><li><a href="#------1--pcb---">进程的创建（1）：PCB初始化</a></li><li><a href="#------2---------">进程的创建（2）：可执行文件加载</a></li><li><a href="#------3--------">进程的创建（3）：准备运行环境</a></li><li><a href="#------4-----------">进程的创建（4）：处理器上下文初始化</a></li></ul></li><li><a href="#--------">进程的退出与等待</a><ul><li><a href="#-------">改进代码实现：</a></li></ul></li><li><a href="#-----">进程的状态</a><ul><li><a href="#--">调度</a></li></ul></li><li><a href="#-----linux----">案例分析：LINUX进程创建</a><ul><li><a href="#fork------">fork 优缺点分析</a></li></ul></li><li><a href="#----">进程切换</a><ul><li><a href="#--------">进程切换基本步骤</a></li><li><a href="#-------vs------">处理器上下文 vs. 进程上下文</a></li><li><a href="#-------">进程切换全过程</a></li></ul></li></ul></li><li><a href="#--">线程</a><ul><li><a href="#----">线程介绍</a></li><li><a href="#------">如何使用线程</a></li><li><a href="#--">线程</a><ul><li><a href="#------">多线程的进程</a></li><li><a href="#-----------">用户态线程与内核态线程</a></li></ul></li></ul></li></ul><!-- tocstop --><h1>ARM操作系统汇编语言</h1><h2 id="aarch64常见指令">aarch64常见指令</h2><h3 id="寄存器间的数据搬移指令">寄存器间的数据搬移指令</h3><table><thead><tr><th>指令</th><th>含义</th></tr></thead><tbody><tr><td><code>mov dst, src</code></td><td>将<code>src</code>存储到<code>dst</code>寄存器中</td></tr><tr><td><code>add\sub\mul\div\neg Rd,Rn,Op2</code></td><td>将<code>Rn</code> <code>Op2</code>的计算结果储存到<code>Rd</code>中</td></tr><tr><td><code>lsl\lsr Rd,Rn,Op2</code></td><td>算数左\右移 <code>Op2</code>位</td></tr><tr><td><code>ror Rd,Rn,Op2</code></td><td>循环右移 <code>Op2</code>位</td></tr><tr><td><code>eor\orr\and Rd,Rn,Op2</code></td><td>按位异或\或\与</td></tr><tr><td><code>mvn Rd,Rn</code></td><td>按位取反</td></tr><tr><td><code>ldr R,addr</code></td><td>从内存<code>mem[addr:addr+Rs]</code>加载数据到寄存器<code>R</code></td></tr><tr><td><code>str R,addr</code></td><td>从寄存器<code>R</code>将数据写入内存<code>mem[addr:addr+Rs]</code></td></tr></tbody></table><h3 id="寻址模式">寻址模式</h3><ul><li>基地址模式（索引寻址）：<code>[rb]</code></li><li>基地址加偏移量模式（偏移量寻址）：<code>[rb, offset]</code></li><li>前索引寻址（寻址操作前更新基地址）: <code>[rb, offset]!</code><br><code>rb += Offset</code>; 寻址<code>M[rb]</code></li><li>后索引寻址（寻址操作后更新基地址）:<code>[rb], offset</code><br>寻址<code>M[rb]</code>; <code>rb += Offset</code></li></ul><h3 id="扩展指令">扩展指令</h3><ol><li>无符号扩展: uxtb, uxth, uxtw<br>把 8、16、32 字节的无符号数扩展到 32、32、64 位。由于无符号，所以扩展方式是加0；</li><li>符号扩展: sxtb, sxth, sxtw<br>把 8、16、32 字节的有符号数扩展到 32、32、64 位。观察原来数的二进制最高位，如果是 1 则在前面加 1；否则加 0 。<br>例：sxtb x1, #0x80，这样x1中的32位数为#0xFFFFFF80，由于#0x80的二进制为1000 0000，所以给它的扩展前面应该加 1 ；<br>sxtb x2, #0x70，这样x2中的32位数为#0x00000070，由于#0x80的二进制为0111 0000，所以给它的扩展前面应该加 0 。</li></ol><h3 id="跳转指令">跳转指令</h3><ol><li>设置条件码：</li></ol><ul><li>通过s后缀数据处理指令隐式设置：<code>adds Rd, Rn, Op2</code><br>C：当运算产生进位时被设置<br>Z：当t为0时被设置<br>N：当t小于0时被设置<br>V：当运算产生有符号溢出时被设置</li><li>通过比较指令 <code>cmp</code> 显式设置：<code>cmp src1, src2</code><br>C：当减法不产生借位时被设置<br>Z：当两个操作数相等时被设置<br>N：当Src1小于Src2时被设置<br>V：当运算产生有符号溢出时被设置</li></ul><ol start="2"><li>跳转条件</li></ol><table><thead><tr><th>条件</th><th>条件码组合</th><th>条件含义</th></tr></thead><tbody><tr><td>EQ</td><td>Z</td><td>相等或为0</td></tr><tr><td>NE</td><td>~Z</td><td>不等或非0</td></tr><tr><td>MI</td><td>N</td><td>负数</td></tr><tr><td>PL</td><td>~N</td><td>非负数</td></tr><tr><td>LT</td><td>N^V</td><td>有符号小于</td></tr><tr><td>LE</td><td>(N^V) | Z</td><td>有符号小于或等于</td></tr><tr><td>GT</td><td>~(N^V) &amp; ~Z</td><td>有符号大于</td></tr><tr><td>GE</td><td>~(N^V)</td><td>有符号大于或等于</td></tr><tr><td>HI</td><td>C &amp; ~Z</td><td>无符号大于</td></tr><tr><td>HS</td><td>C</td><td>无符号大于或等于</td></tr><tr><td>LS</td><td>~C | Z</td><td>无符号小于或等于</td></tr><tr><td>LO</td><td>~C</td><td>无符号小于</td></tr></tbody></table><ol start="3"><li>跳转方式</li></ol><ul><li>以标签对应的地址作为跳转目标<br>无条件分支指令： <code>b &lt;label&gt;</code><br>有条件分支指令：<code>bcond &lt;label&gt;</code>，例如<code>beq</code>，<code>bne</code>，<code>ble</code></li><li>以寄存器中的地址作为跳转目标，例如 <code>br x0</code></li></ul><h2 id="函数调用">函数调用</h2><h3 id="函数调用指令">函数调用指令</h3><ul><li><code>bl   label</code> (直接调用，调用函数)</li><li><code>blr  Rn</code>    (间接调用，调用函数指针)</li><li>功能：将返回地址存储在链接寄存器LR (x30寄存器的别名)，<strong>跳转到被调用者的入口地址</strong>。</li></ul><h3 id="函数栈帧（Stack-Frame）">函数栈帧（Stack Frame）</h3><ul><li>是函数在运行期间使用的一段内存。</li><li>作用：存放其局部状态，包括存放返回地址、存放上一个栈桢的位置和存放局部变量等等。</li><li><strong>特殊寄存器<code>SP</code>指向栈顶（低地址），一般保存在 <code>x29</code> 寄存器中</strong>。</li></ul><h3 id="多级函数调用">多级函数调用</h3><p>需要先保存<code>x29</code>和<code>x30</code>寄存器的值，再把更新后的<code>SP</code>寄存器的值存到<code>x29</code>中，最后还原。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">stp x29, x30, [sp, #<span class="hljs-number">-32</span>] <span class="hljs-comment">//保存`x29`和`x30`寄存器的值</span><br>mov x29, sp <span class="hljs-comment">//更新后的`SP`寄存器的值存到`x29`中</span><br>...<br>ldp x29, x30, [sp], #<span class="hljs-number">32</span> <span class="hljs-comment">//还原`x29`, `x30`</span><br>ret<br></code></pre></td></tr></table></figure><h3 id="函数参数与返回值">函数参数与返回值</h3><ol><li><p>调用者使用x0 ~ x7寄存器传递前8个参数，被调用者使用x0寄存器传递返回值；<br><img src="/img/Arm/func.png" alt="这是一个例子"></p></li><li><p>第8个之后的参数，按声明顺序从右到左，所有数据对齐到8字节，由调用者压到栈上。被调用者通过<code>SP+offset</code>访问。<br><img src=/img/Arm/stack.png width="30%" height="30%"></p></li><li><p>一个例子：</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">proc</span><span class="hljs-params">(<span class="hljs-type">long</span>  a1, <span class="hljs-type">long</span> *a1p,<span class="hljs-type">int</span> a2, <span class="hljs-type">int</span> *a2p, <span class="hljs-type">short</span> a3, <span class="hljs-type">short</span> *a3p, <span class="hljs-type">char</span> a4, <span class="hljs-type">char</span> *a4p, <span class="hljs-type">char</span> a5, <span class="hljs-type">char</span> *a5p)</span> &#123;<br>    *a1p += a1 ;<br>    *a2p += a2 ;<br>    *a3p += a3 ;<br>    *a4p += a4 ;<br>    *a5p += a5 ;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">caller</span><span class="hljs-params">(<span class="hljs-type">long</span> *n)</span> &#123;<br>     proc(<span class="hljs-number">1</span>, <span class="hljs-number">0x2000</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0x4000</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0x6000</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0x8000</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0xA000</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>汇编代码如下：</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c">mov     x0, #<span class="hljs-number">0xa000</span><br>str     x0, [sp, #<span class="hljs-number">8</span>] <span class="hljs-comment">// [sp + 8, sp + 16]保存#0xa000</span><br>mov     w0, #<span class="hljs-number">0x9</span> <br>strb    w0, [sp] <span class="hljs-comment">// [sp, sp + 8]保存#0x9，这两个参数保存在栈帧中</span><br><br>mov     x7, #<span class="hljs-number">0x8000</span><br>mov     w6, #<span class="hljs-number">0x7</span><br>mov     x5, #<span class="hljs-number">0x6000</span><br>mov     w4, #<span class="hljs-number">0x5</span><br>mov     x3, #<span class="hljs-number">0x4000</span><br>mov     w2, #<span class="hljs-number">0x3</span><br>mov     x1, #<span class="hljs-number">0x2000</span><br>mov     x0, #<span class="hljs-number">0x1</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="寄存器保存">寄存器保存</h2><h3 id="通用寄存器保存">通用寄存器保存</h3><p>不同函数共享同一批通用寄存器，因此能够通过寄存器传递参数和返回值。然而，不同的函数对通用寄存器的使用会存在冲突 —— 覆盖。</p><p>函数在使用某个寄存器之前保存该寄存器的值，返回前恢复，保存在函数栈桢中。<br><img src=/img/Arm/reg.png width="90%" height="90%"></p><ul><li><p>调用者保存的寄存器包括 X9~X15，<br>调用者在调用前按需（仅考虑自己是否需要）进行保存，调用者在被调用者返回后恢复这些寄存器的值；<br>被调用者可以随意使用，这些寄存器调用后的值可能发生改变。</p></li><li><p>被调用者保存的寄存器包括 X19~X28，<br>被调用者在使用前进行保存，被调用者在返回前进行恢复。在调用者视角中，这些寄存器的值在函数调用前后不会改变。</p></li></ul><h3 id="例子：cube函数">例子：cube函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">square</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> &#123;<span class="hljs-keyword">return</span> n * n;&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">cube</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span> &#123;<span class="hljs-keyword">return</span> n * square(n);&#125;<br></code></pre></td></tr></table></figure><p>以下是它的汇编及解释：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c">square:<br>    mul w0, w0, w0<br>    ret<br>cube:<br>    stp x29, x30, [sp, #<span class="hljs-number">-32</span>]! <span class="hljs-comment">// 开辟栈帧，并保存原来的x29（FP）、x30（LR）寄存器</span><br>    mov x29, sp <span class="hljs-comment">//保存当前栈帧的SP</span><br>    str x19, [sp, <span class="hljs-number">16</span>] <span class="hljs-comment">//因为要用x19，且它是调被调用者保存的寄存器，所以需要把原来x19存在栈上</span><br>    mov x19, w0 <span class="hljs-comment">//把n写入x19</span><br>    bl square <span class="hljs-comment">//调用square</span><br>    mul w0, x19 <span class="hljs-comment">//n * square(n)</span><br>    ldr x19, [sp, #<span class="hljs-number">16</span>] <span class="hljs-comment">//恢复x19原来的值</span><br>    ldp x29, x30, [sp], #<span class="hljs-number">32</span> <span class="hljs-comment">//还原`x29`, `x30`，并释放栈帧</span><br>    ret<br></code></pre></td></tr></table></figure><h2 id="局部变量">局部变量</h2><p>函数局部变量存放在函数栈桢中。它们在分配栈帧时被一起分配，在返回前释放栈帧时释放，通过SP相对地址引用 (例如<code>ldr x1, [sp, #8]</code>)。</p><h3 id="一个例子">一个例子</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">long</span> <span class="hljs-title function_">caller</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">long</span> arg1 = <span class="hljs-number">534</span>;<br>    <span class="hljs-type">long</span> arg2 = <span class="hljs-number">1057</span>;<br>    <span class="hljs-type">long</span> sum = swap_add(&amp;arg1, &amp;arg2);<br>    <span class="hljs-type">long</span> diff = arg1 - arg2;<br><br>    <span class="hljs-keyword">return</span> sum * diff;<br>&#125;<br><br><span class="hljs-type">long</span> <span class="hljs-title function_">swap_add</span><span class="hljs-params">(<span class="hljs-type">long</span> *xp, <span class="hljs-type">long</span> *yp)</span><br>&#123;<br>    <span class="hljs-type">long</span> x = *xp;<br>    <span class="hljs-type">long</span> y = *yp;<br><br>    *xp = y;<br>    *yp = x;<br>    <span class="hljs-keyword">return</span> x + y;<br>&#125;<br></code></pre></td></tr></table></figure><div style="display: flex; align-items: flex-start;"><div style="flex: 3;">    <pre><code>caller:    stp   x29, x30, [sp, -32]!     <font color=blue># 开辟32个栈的位置，可以存四个八位数</font>    mov   x29, sp <font color=blue># 存下当前的SP寄存器</font>    mov   x0, #534    str   x0, [sp, 24]    <font color=blue># mem[24, 32]存下534</font>    mov   x0, #1057    str   x0, [sp, 16]    <font color=blue># mem[16, 24]存下1057</font>    add   x1, sp, #16    add   x0, sp, #24    <font color=blue># 把栈上的数取下来作为函数的两个参数</font>    bl    swap_add</code>    </pre>    </div>  <img src=/img/Arm/df.png width="60%" height="60%" alt="这是caller的汇编代码"></div><p><img src="/img/Arm/swap.png" alt="这是callee的汇编代码"></p><h2 id="总结">总结</h2><div style="display: flex;">  <img src="/img/Arm/总结1.png" alt="总结1" style="width: 85%; height: auto;"/>  <img src="/img/Arm/总结2.png" alt="总结2" style="width: 85%; height: auto;"/></div><h1>系统ISA</h1><p>如果所有的应用均能完全控制硬件计算资源，则会导致混乱。因此必须先让应用降权，不允许直接改变全局的系统状态。必须要有不同的权限级——至少两种权限：</p><ul><li>低权限：不允许改变全局系统状态，用来运行应用</li><li>高权限：集中运行能改变全局系统状态的操作，形成了操作系统</li></ul><p>特权操作：操作设备（读取文件、发送网络包…）、调整CPU频率、提供进程间通信…</p><h2 id="特权级别">特权级别</h2><h3 id="ARMv8-4特权级">ARMv8.4特权级</h3><img src=/img/Arm/EL.png style="width: 85%; height: auto;"><h3 id="用户态（EL0）和内核态（EL1）">用户态（EL0）和内核态（EL1）</h3><ul><li>用户态（User-mode）：只能使用用户 ISA</li><li>内核态（Kernel-mode）：可以同时使用系统 ISA 和用户ISA</li></ul><p>操作系统往往同时包含内核态与用户态的代码，如：Unix包含内核态的kernel 与用户态的 shell。</p><h3 id="AArch64-中常见寄存器在不同特权级的可见情况">AArch64 中常见寄存器在不同特权级的可见情况</h3><p><img src="/img/Arm/ISA.png" alt=""></p><h2 id="特权级切换">特权级切换</h2><h3 id="特权级切换的必要性">特权级切换的必要性</h3><p>将CPU控制权移交给内核，使应用程序可以向操作系统请求服务，使操作系统能够切换不同应用程序执行，否则无法处理错误/恶意程序死循环。</p><h3 id="何时发生特权级切换：在发生异常时">何时发生特权级切换：在发生异常时</h3><ul><li>同步异常<br>执行当前指令触发异常。<ol><li>用户程序主动发起：svc指令（OS利用eret指令返回）</li><li>非主动，例如用户程序意外访问空指针：普通ldr指令（OS“杀死”出错程序）</li></ol></li><li>异步异常<br>CPU收到中断信号。<ol><li>从外设发来的中断，例如屏幕点击、鼠标、收到网络包；</li><li>CPU时钟中断，例如定时器超时。</li></ol></li></ul><h3 id="异常处理函数">异常处理函数</h3><p>异常处理函数属于操作系统的一部分，是运行在内核态的代码。异常处理函数完成异常处理后，将通过下述操作之一转移控制权：</p><ol><li>回到发生异常时正在执行的指令；</li><li>回到发生异常时的下一条指令；</li><li>将发生异常事件的指令地址保存在ELR_EL1中；</li><li>将异常事件的原因保存在ESR_EL1。例如，是执行svc指令导致的，还是访存缺页导致的；</li><li>将处理器的当前状态（即PSTATE）保存在SPSR_EL1；</li><li>栈寄存器不再使用SP_EL0（用户态栈寄存器），开始使用SP_EL1（内核态栈寄存器，需要由操作系统提前设置）；</li><li>修改PSTATE寄存器中的特权级标志位，设置为内核态；</li><li>找到异常处理函数的入口地址，并将该地址写入PC，开始运行操作系统（根据VBAR_EL1寄存器保存的异常向量表基地址，以及发生异常事件的类型确定）。</li></ol><p><font color=blue>从用户态到内核态（eret）的任务：</font></p><ol><li>将SPSR_EL1中的处理器状态写入PSTATE中（处理器状态也从 EL1 切换到 EL0）；</li><li>栈寄存器不再使用SP_EL1，开始使用SP_EL0（注意：SP_EL1的值并没有改变；下一次下陷时，操作系统依然会使用这个内核栈）；</li><li>将ELR_EL1中的地址写入PC，并执行应用程序代码。</li></ol><p><font color=blue>操作系统在切换过程中的任务：</font></p><ol><li>主要任务：将属于应用程序的 CPU 状态保存到内存中，用于之后恢复应用程序继续运行；</li><li>应用程序需要保存的运行状态称为处理器上下文。处理器上下文（Processor Context），是应用程序在完成切换后恢复执行所需的最小处理器状态集合。处理器上下文中的寄存器具体包括：<ul><li>通用寄存器 X0-X30；</li><li>特殊寄存器，主要包括PC、SP和PSTATE；</li><li>系统寄存器，包括页表基地址寄存器等。</li></ul></li></ol><h2 id="系统调用">系统调用</h2><p>硬件提供了一对指令svc/eret指令在用户态/内核态间切换。系统调用是用户与操作系统之间，类似于过程调用的接口，它通过受限的方式访问内核提供的服务。<br><img src="/img/Arm/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8.png" alt=""></p><h3 id="AArch64常见的Linux的系统调用">AArch64常见的Linux的系统调用</h3><table><thead><tr><th>编号</th><th>名称</th><th>描述</th><th>编号</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>17</td><td>getcwd</td><td>Get current working directory</td><td>129</td><td>kill</td><td>Send signal to a process</td></tr><tr><td>23</td><td>dup</td><td>Duplicate a file descriptor</td><td>172</td><td>getpid</td><td>Get process ID</td></tr><tr><td>56</td><td>openat</td><td>Open a file</td><td>214</td><td>brk</td><td>Set the top of heap</td></tr><tr><td>57</td><td>close</td><td>Close a file</td><td>215</td><td>munmap</td><td>Unmap a file from memory</td></tr><tr><td>63</td><td>read</td><td>Read a file</td><td>220</td><td>clone</td><td>Create a process</td></tr><tr><td>64</td><td>write</td><td>Write a file</td><td>221</td><td>execve</td><td>Execute a program</td></tr><tr><td>80</td><td>fstat</td><td>Get file status</td><td>222</td><td>mmap</td><td>Map a file into memory</td></tr><tr><td>93</td><td>_exit</td><td>Terminate the process</td><td>260</td><td>wait4</td><td>Wait for process to stop</td></tr></tbody></table><h3 id="系统调用例子">系统调用例子</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    write(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;hello, world\n&quot;</span>, <span class="hljs-number">13</span>);<br>    _exit(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>系统调用编号放在x8中，传参还是x0-x7。汇编代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-comment">// First, call write(1, &quot;hello, world\n&quot;, 13)</span><br>movq x8, #<span class="hljs-number">0x40</span>  <span class="hljs-comment">//  write is system call 64</span><br>movq x0, #<span class="hljs-number">0x1</span>   <span class="hljs-comment">// Arg1:stdout has descriptor 1</span><br>adrp x3, .LC0  <br>add x1,x3,:lo12:.LC0 <span class="hljs-comment">// Arg2:Hello world string</span><br>movq x2, #<span class="hljs-number">0xd</span>       <span class="hljs-comment">// Arg3:string length</span><br>svc         <span class="hljs-comment">// Make the system call</span><br><span class="hljs-comment">// Next, call exit(0)</span><br>movq x8, #<span class="hljs-number">0x5d</span> <span class="hljs-comment">//  _exit is system call 93</span><br>movq x0, #<span class="hljs-number">0x0</span>    <span class="hljs-comment">//   Arg1:exit status is 0</span><br>svc    <span class="hljs-comment">//  Make the system call</span><br></code></pre></td></tr></table></figure><h2 id="系统调用优化">系统调用优化</h2><h3 id="VDSO">VDSO</h3><p>系统调用的时延不可忽略，其是调用非常频繁的情况。为了降低系统调用时延，如果没有特权级切换，那么就不需要保存恢复状态。</p><p>“gettimeofday” 在编译时作为内核的一部分。在用户态运行时，将&quot;gettimeofday&quot;的代码加载到一块与应用共享的内存页，这个页称为：VDSO。Time 的值同样映射到用户态空间（只读），只有在内核态才能更新这个值。</p><h3 id="Flex-SC">Flex-SC</h3><p>在不切换状态的情况下实现系统调用。引入 <code>system call page</code> ，由 <code>user &amp; kernel</code> 共享。用户进程可以将系统调用的请求 push 到 <code>system call page</code>，内核会从<code>system call page</code> poll <code>system call</code> 请求。将系统调用的调用和执行解耦，可分布到不同的CPU核。</p><p>单核也可以优化。</p><h1>从应用视角看操作系统抽象</h1><p><a id="分时复用cpu"></a></p><h2 id="进程">进程</h2><p>分时复用有限的CPU资源。让多个应用程序轮流使用处理器核心。</p><ul><li>何时切换：操作系统决定，运行时间片（例如100ms）</li><li>高频切换：看起来是多个应用“同时”执行</li></ul><p>进程在操作系统中的实现是状态数据。</p><ul><li>进程标识号（Process ID， PID）</li><li>运行状态：处理器上下文（CPU Context）</li><li>地址空间</li><li>打开的文件</li></ul><h2 id="进程切换">进程切换</h2><p><a id="处理器上下文"></a></p><h3 id="处理器上下文-CPU-Context">处理器上下文(CPU Context)</h3><p>操作系统为每个进程维护处理器上下文，其中包含恢复进程执行所需要的状态。进程A执行到main函数任意一条指令，切换到进程B执行，一段时间后，再切回到进程A执行，需要保存一些值来切换回来。<br>具体包括：PC寄存器值，栈寄存器值，通用寄存器值，状态寄存器值。</p><h3 id="进程切换时机">进程切换时机</h3><ol><li><p>异常导致的上下文切换，如Timer中断（如基于时间片的多任务调度）；</p></li><li><p>用户执行系统调用并进入内核，如read/sleep等会导致进程阻塞的系统调用。即使系统调用不阻塞执行，内核也可以决定执行上下文切换，而不是将控制权返回给调用进程。</p></li></ol><div style="display: flex; justify-content: space-around;">  <img src="/img/Arm/进程切换/AB1.png" alt="Image AB1" style="width: 100%;">  <img src="/img/Arm/进程切换/AB2.png" alt="Image AB2" style="width: 100%;"></div>A：<h2 id="常见的进程相关的接口">常见的进程相关的接口</h2><h3 id="获取进程ID">获取进程ID</h3><ul><li>进程 ID：每个进程都有唯一的正数PID</li><li>Getpid()：返回调用进程的PID</li><li>Getppid()：返回调用进程父进程的PID（父进程：创建该进程的进程）</li></ul><p>getpid和getppid函数返回pid_t类型的int值。pid_t在Linux系统中，types.h文件中定义为int。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-type">pid_t</span> <span class="hljs-title function_">getpid</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">pid_t</span> <span class="hljs-title function_">getppid</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><h3 id="Exit-Fork函数">Exit &amp; Fork函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-type">void</span> <span class="hljs-title function_">exit</span><span class="hljs-params">(<span class="hljs-type">int</span> status)</span>;<br></code></pre></td></tr></table></figure><p>exit函数没有返回值，终止进程并带上一个status状态。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-type">pid_t</span> <span class="hljs-title function_">fork</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br></code></pre></td></tr></table></figure><p>父进程调用fork函数创建新的子进程。返回值：子进程为 0，父进程为子进程 PID，出错为 -1 。<br>fork函数在父进程中调用一次，在父进程和子进程中返回两次，<mark style="background-color: yellow;">返回值提供了唯一明确地区分父进程和子进程执行的方法。</mark><br>使用事例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;csapp.h&quot;</span></span><br> <span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br> &#123;<br> <span class="hljs-type">pid_t</span> pid;<br> <span class="hljs-type">int</span> x = <span class="hljs-number">1</span>;<br> pid = Fork();<br> <span class="hljs-keyword">if</span> (pid == <span class="hljs-number">0</span>) &#123; <span class="hljs-comment">/* child */</span><br> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;child : x=%d\n&quot;</span>, ++x);<br> <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br> &#125;<br> <span class="hljs-comment">/* parent */</span><br> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;parent: x=%d\n&quot;</span>, --x);<br> <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br> &#125;<br></code></pre></td></tr></table></figure><h3 id="Execve函数">Execve函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">execve</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *filename, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *argv[], <span class="hljs-type">const</span> <span class="hljs-type">char</span> *envp[])</span>;<br></code></pre></td></tr></table></figure><p>filename:可执行文件名;argv:参数列表，envp:环境变量列表<br>execve 只调用一次，且永远不会返回。仅仅在运行报错的时候（如找不到filename标识的文件），才返回调用程序。</p><h3 id="Linux下的僵尸进程">Linux下的僵尸进程</h3><p>进程终止后，内核不会立刻销毁该进程，该进程不再运行，但仍然占用内存资源。进程以终止态存在，等待父进程回收。当父进程回收终止的子进程时，内核把子进程的exit状态传递给父进程，内核移除子进程，此时子进程才被真正回收。<br>终止状态下还未被回收的进程就是僵尸进程。如果父进程在自己终止前没有回收僵尸子进程，内核会安排init进程回收这些子进程。init进程的PID为1，在系统初始化时由内核创建。<br>为了解决这个问题，引入了进程等待的方法，可以通过进程等待的方式获取子进程的状态改变的信息，进而回收子进程占用的资源。此外通过进程等待的方式父进程也能了解到子进程完成的工作结果及是否正常退出。<br><strong>进程等待实现方法：进程等待主要是通过使用系统调用接口waitpid函数来实现。通过给在父进程中使用waitpid函数来接收子进程状态改变的信息，进而实现对子进程的信息手机，资源回收等。</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/wait.h&gt;</span></span><br><span class="hljs-type">pid_t</span> <span class="hljs-title function_">waitpid</span><span class="hljs-params">(<span class="hljs-type">pid_t</span> pid, <span class="hljs-type">int</span> *status, <span class="hljs-type">int</span> options)</span>;<br></code></pre></td></tr></table></figure><ul><li>pid&gt;0：等待集合中只有pid子进程</li><li>pid=-1：等待集合包括所有子进程</li><li>如果没有子进程：返回-1，errno = ECHILD</li><li>如果等待被中断：返回-1，errno = EINTR</li><li>options=0<ul><li>挂起调用进程，等待集合中任意子进程终止</li><li>如果等待集合中有子进程在函数调用前已经终止，立刻返回</li><li>返回值是导致函数返回的终止子进程pid，该终止子进程被内核回收</li></ul></li><li>options=WNOHANG：如果等待集合中没有终止子进程，立刻返回0</li><li>options=WUNTRACED：除了返回终止子进程的信息外，还返回因信号而停止的子进程信息</li><li>options=WNOHANG｜WUNTRACED</li><li>status：带回被回收子线程的exit状态<ul><li>status指针不为NULL</li><li>status包含导致子进程进入终止状态的信息</li><li>wait.h文件包含了若干宏定义，用于解释status</li></ul></li></ul><h2 id="内存">内存</h2><h3 id="虚拟内存">虚拟内存</h3><p>应用进程使用虚拟地址访问内存，所有应用进程的虚拟地址空间都是统一的（方便开发）。<br>CPU按照OS配置的规则把虚拟地址翻译成物理地址，翻译对于应用进程是不可见的（无需关心）。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98.png" alt=""><br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2/example.png" alt=""><br>两个程序分配给 g_val 的地址相同，所以这个地址不可能是物理地址，而是相同的虚拟地址。<br>虚拟内存的优势：</p><ul><li>提高内存资源利用率，操作系统按需把进程虚拟地址映射到物理地址</li><li>突破物理内存的容量限制，操作系统可以将部分虚拟内存区域数据暂存到磁盘上</li></ul><h2 id="文件">文件</h2><h3 id="Unix-文件">Unix 文件</h3><p>Unix文件是一串字节序列：B0,B1,…, Bk,…,Bm 。所有IO设备都被抽象成文件，如网络设备、硬盘、终端等。Unix提供一个基于文件的底层应用接口，即 Unix IO。所有输入/输出都是通过读/写文件完成。</p><ul><li><p>普通文件(regular file)：包含任意数据<br>从应用程序的角度来看有两种，文本文件：仅包含ASCII或Unicode字符，二进制文件：除文本文件以外的所有<br>从内核的角度来看，它们没有区别。</p></li><li><p>目录(directory)<br>由一组链接(links)构成，每个链接将一个文件名映射到一个文件(或目录)。目录相关指令：mkdir、ls、rmdir等。<br>每个目录至少有两个链接：</p><ul><li><code>.</code> (dot)：到文件夹本身的链接</li><li><code>..</code> (dot-dot)：到上一层文件夹的链接</li></ul></li><li><p>套接字(Socket)：用于跨网络进程交互<br>其他文件类型包括:</p><ul><li>命名管道(named pipes)</li><li>符号连接(symbolic links)</li><li>字符/块设备(character/block devices)</li></ul></li></ul><h3 id="打开文件">打开文件</h3><p>内核打开相关文件，并返回一个非负整数，作为文件标识符(file descriptor, fd)。fd代表该文件，用于之后对文件进行操作，内核跟踪记录每个进程的所有打开文件的信息。<br>对于每个打开文件，维护一个文件内偏移k，应用可以通过seek函数，显式改变当前文件内偏移k，应用只需要记录内核返回的文件标识符。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">open</span><span class="hljs-params">(<span class="hljs-type">char</span> *filename, <span class="hljs-type">int</span> flags, <span class="hljs-type">mode_t</span> mode)</span>;<br><span class="hljs-comment">// 返回值：成功(新文件标识符)，出错(-1)</span><br><span class="hljs-comment">// flags</span><br><span class="hljs-comment">// O_RDONLY, O_WRONLY, O_RDWR (must have one)</span><br><span class="hljs-comment">// O_CREAT, O_TRUNC, O_APPEND (optional)</span><br><span class="hljs-comment">// mode </span><br><span class="hljs-comment">// S_IRUSR, S_IWUSR, S_IXUSR</span><br><span class="hljs-comment">// S_IRGRP, S_IWGRP, S_IXGRP</span><br><span class="hljs-comment">// S_IROTH, S_IWOTH, S_IXOTH</span><br></code></pre></td></tr></table></figure><h3 id="关闭文件">关闭文件</h3><p>内核操作：释放在文件打开时创建的数据结构，并把文件标识符返回到可用标识符池。<br>进程终止时的默认行为：内核关闭所有打开的文件，内核释放内存资源。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">close</span><span class="hljs-params">(<span class="hljs-type">int</span> fd)</span> ;<br><span class="hljs-comment">// 返回值：成功(0);失败(-1)</span><br></code></pre></td></tr></table></figure><h3 id="读写文件">读写文件</h3><ul><li>读操作：从文件中复制m&gt;0个字节到内存中。<br>从当前文件的位置k开始, 并更新k+=m，如果从k开始到文件末尾的长度小于m，触发一个条件 end-of-file(EOF)。EOF可以被应用检测，但文件末尾实际上不存在EOF字符。</li><li>写操作：从内存中复制m&gt;0个字节到文件中。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-type">ssize_t</span> <span class="hljs-title function_">read</span><span class="hljs-params">(<span class="hljs-type">int</span> fd, <span class="hljs-type">void</span> *buf, <span class="hljs-type">size_t</span> count)</span>;<br><span class="hljs-comment">// 返回值：成功(读到字节数)，遇到EOF(0)，失败(-1)</span><br><span class="hljs-type">ssize_t</span> <span class="hljs-title function_">write</span><span class="hljs-params">(<span class="hljs-type">int</span> fd, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *buf, <span class="hljs-type">size_t</span> count)</span>;<br><span class="hljs-comment">// 返回值：成功(写入字节数)，失败(-1)</span><br></code></pre></td></tr></table></figure><p>读写示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">// 打开文件 hello.txt。O_RDONLY 表示以只读方式打开</span><br>    <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;hello.txt&quot;</span>, O_RDONLY);<br>    <span class="hljs-type">char</span> result[<span class="hljs-number">14</span>];<br>    <span class="hljs-comment">// 从 fd 对应的文件中读取 13 个字节</span><br>    read(fd, result, <span class="hljs-number">13</span>);<br>    <span class="hljs-comment">// 向屏幕输出读取到的字符串</span><br>    write(<span class="hljs-number">1</span>, result, <span class="hljs-number">13</span>);<br>    close(fd);<br>&#125;<br></code></pre></td></tr></table></figure><h1>内存地址翻译</h1><p>编译器假设应用运行时，会独占所有内存，且内存足够大。由CPU将虚拟地址翻译到物理地址，由操作系统来配置如何翻译。</p><h2 id="分页机制">分页机制</h2><ul><li>物理内存可以看成由连续字节组成的数组，每个字节都有唯一的物理地址；</li><li>Memory Management Unit （MMU）按照规则将虚拟地址翻译成物理地址。<br><img src="/img/Arm/%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%BF%BB%E8%AF%91/MMU.png" alt=""></li></ul><p>虚拟地址空间和物理内存划分成连续的、等长的虚拟页，虚拟页和物理页的页长相等。<br>虚拟地址分为：虚拟页号 + 页内偏移<br>使用页表记录虚拟页号到物理页号的映射。</p><ul><li>特点：<ul><li>物理内存离散分配，任意虚拟页可以映射到任意物理页，大大降低对物理内存连续性的要求；</li><li>主存资源易于管理，利用率更高。按照固定页大小分配物理内存，大大降低外部碎片和内部碎片。</li></ul></li></ul><h2 id="内存地址翻译">内存地址翻译</h2><p><img src="/img/Arm/%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%BF%BB%E8%AF%91/%E5%9C%B0%E5%9D%80%E7%BF%BB%E8%AF%91%E8%A1%A8.png" alt=""><br>PPO与VPO相等，根据页表查看VPN对应的PPN，即可将虚拟地址翻译为物理地址。</p><h3 id="例子">例子</h3><p><img src="/img/Arm/%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%BF%BB%E8%AF%91/%E7%BF%BB%E8%AF%91%E4%BE%8B%E5%AD%90.png" alt=""><br>页大小为2^VPO位数，VPN为 0F，在页表中对应的PPN为0D。</p><h3 id="单级页表问题和多级页表优点">单级页表问题和多级页表优点</h3><p>假设64位的地址空间，页大小为4K，页表项为8字节，那么页表大小：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>4</mn><mi>K</mi><mo stretchy="false">)</mo><mo>∗</mo><mn>8</mn><mi>B</mi><mo>=</mo><mn>33</mn><mo separator="true">,</mo><mn>554</mn><mo separator="true">,</mo><mn>432</mn><mi>G</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">2^{64}/(4K) * 8B=33,554,432 GB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">64</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">8</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">33</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">554</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">432</span><span class="mord mathnormal" style="margin-right:0.05017em;">GB</span></span></span></span>（不现实！）</p><p>多级页表能有效压缩页表的大小，若某个页表页中的某个页表项为空，那么其对应的下一级页表页便无需存在，应用程序的虚拟地址空间大部分都未分配。</p><h3 id="AARCH64体系结构下4级页表">AARCH64体系结构下4级页表</h3><p>硬件规定：</p><ul><li>每个页表页占用一个 4K 的物理页，</li><li>每个页表项占用八个字节，所以每个页表页有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mi>K</mi><mi mathvariant="normal">/</mi><mn>8</mn><mo>=</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">4K/8=512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">/8</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">512</span></span></span></span> 个页表项。</li></ul><p>虚拟地址每一位的解析：</p><ul><li>「63：48」16-bit：必须全是0或者全是1（软件用法：一般应用程序地址是0，内核地址是1）也意味着虚拟地址空间大小最大是2^48 Byte，即256TB。</li><li>「47：39」9-bit：0级页表索引</li><li>「38：30」9-bit：1级页表索引</li><li>「29：21」9-bit：2级页表索引</li><li>「20：12」9-bit：3级页表索引</li><li>「11：0」12-bit：页内偏移</li></ul><img src=/img/Arm/多级1.png alt="AArch64的多级页表" style="width: 70%;"><p>问：若页表共占用16K，能够翻译的虚拟地址范围是？<br>答：16K,说明0-3级页表各一个，能翻译 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>512</mn><mo>∗</mo><mn>4</mn><mi>K</mi><mo>=</mo><mn>2</mn><mi>M</mi></mrow><annotation encoding="application/x-tex">512 * 4K=2M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">512</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 范围的地址范围。</p><p>问：在页表中填写虚拟地址 0-16M 的映射，则页表至少需要占用多少空间？<br>答：是上面问题的反过来，需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mi>M</mi><mi mathvariant="normal">/</mi><mn>4</mn><mi>K</mi><mo>=</mo><msup><mn>2</mn><mn>12</mn></msup></mrow><annotation encoding="application/x-tex">16M/4K=2^{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">16</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">/4</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span></span></span></span>个物理页，所以需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>12</mn></msup><mi mathvariant="normal">/</mi><mn>512</mn><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">2^{12}/512=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span><span class="mord">/512</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8</span></span></span></span>个L3页，L0、L1、L2页各一个，共<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>11</mn><mo>∗</mo><mn>4</mn><mi>K</mi><mi>B</mi><mo>=</mo><mn>44</mn><mi>K</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">11*4KB=44KB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">11</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">44</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>.</p><h2 id="页表项">页表项</h2><h3 id="页表页">页表页</h3><p>每级页表有若干离散的页表页，每个页表页占用一个物理页，第 0 级（顶层）页表有且仅有一个页表页。页表基地址寄存器存储的就是该页的物理地址，每个页表页中有 512 个页表项，每项为 8 个字节（64位），用于存储物理地址和权限。<br><img src="/img/Arm/%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80%E7%BF%BB%E8%AF%91/%E9%A1%B5%E8%A1%A8%E9%A1%B9.png" alt=""></p><ul><li>V（Valid）：当访问时V=0，则触发缺页异常</li><li>UXN（Unprivileged eXecute Never）：用户态不可执行（例如栈）</li><li>PXN（Privileged eXecute Never）：内核态不可执行（防止内核执行用户代码）</li><li>AF（Access Flag）：当访问时，MMU标记该位</li><li>AP（Access Permissions）:</li><li>DBM （Dirty Bit）： 51位，ARMv8.1-TTHM特性支持</li></ul><h3 id="页表项与大页">页表项与大页</h3><p>多级页表中并非只有最后一级的页表项能够指向物理页，中间级的页表项也能够直接指向物理页，而不是只能指向下一级页 表页。当中间级的页表项直接指向物理页时，其指向的会是大页，顾名思义， 会比下一级页表项指向的物理页大小更大。<br><img src=/img/Arm/内存地址翻译/大页.png width="80%" height="80%"></p><ul><li>优点：减少TLB缓存项的使用，提高 TLB 命中率；减少页表的级数，提升遍历页表的效率；</li><li>缺点：未使用整个大页而造成物理内存资源浪费，增加管理内存的复杂度。</li></ul><h2 id="TLB：缓存页表项、地址翻译的加速器">TLB：缓存页表项、地址翻译的加速器</h2><p>多级页表不是完美的，它压缩页表大小，但增加了访存次数（逐级查询）。1次内存访问，变成了5次内存访问。</p><p>TLB 位于CPU内部，是页表的缓存。在地址翻译过程中，MMU首先查询TLB，TLB命中，则不再查询页表 （fast path）；TLB未命中，再查询页表。<br><img src=/img/Arm/TLB1.png></p><h3 id="TLB-刷新">TLB 刷新</h3><p>TLB 使用虚拟地址索引，当OS切换进程页表时需要全部刷新。AARCH64上内核和应用程序使用不同的页表，分别存在TTBR0_EL1和TTBR1_EL1中。所以使用的虚拟地址范围不同，系统调用过程不用切换。</p><h1>操作系统管理页表映射</h1><p>设置页表映射是操作系统的职责。<code>TTBR0_EL1</code> 和 <code>TTBR1_EL1</code> 分别指向内核和应用页表。</p><h2 id="何时设置页表映射">何时设置页表映射</h2><ul><li>操作系统自己使用的页表<ul><li>在启动时填写</li><li>映射全部物理内存<ul><li>虚拟地址 = 物理地址 + 固定偏移（直接映射，Direct Mapping）</li><li>思考：为什么需要直接映射？答：因为简单好计算。</li></ul></li></ul></li><li>应用进程的页表设置时间？</li></ul><h2 id="立即映射">立即映射</h2><p>即创建进程时，OS按照虚拟内存区域填写进程页表。具体步骤：</p><ol><li>分配物理页（alloc_page），</li><li>把应用代码/数据从磁盘加载到物理页中，</li><li>添加虚拟页到物理页的映射（add_mapping），</li><li>未加载完毕，回到步骤-1。<br><img src=/img/Arm/页表映射/立即映射.png width="30%" height="30%" alt="立即映射示意图"></li></ol><p>弊端：只玩一关，加载100关。</p><ul><li>物理内存资源浪费</li><li>非必要时延</li></ul><p>对内核来说：已映射的地址不一定正在使用（需要通过kmalloc才能用），正在使用的地址通常已映射（例外：vmalloc）；<br>对应用来说：正在使用的地址不一定已映射（on-demand paging），已映射的地址一定正在使用（否则不会被映射）。<br>同一个物理地址可以有多个虚拟地址。如应用任一已映射的物理地址，在内核的直接映射下也有一个虚拟地址。</p><h2 id="延迟映射">延迟映射</h2><p>操作系统按进程实际需要分配物理页和填写页表，避免分配的物理页实际不被用到的情况。<br>主要思路：解耦虚拟内存分配与物理内存分配。</p><ol><li>先记录下为进程分配的虚拟内存区域；</li><li>当进程实际访问某个虚拟页时，CPU 会触发缺页异常；</li><li>操作系统在缺页异常处理函数中添加映射。</li></ol><p>复习：<br><img src="/img/Arm/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84/%E7%BC%BA%E9%A1%B5%E5%BC%82%E5%B8%B81.png" alt=""><br><img src="/img/Arm/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84/%E7%BC%BA%E9%A1%B5%E5%BC%82%E5%B8%B82.png" alt=""><br>V（Valid）：当MMU查询页表项时，若V=0，则触发缺页异常。</p><h3 id="记录为进程分配的虚拟内存">记录为进程分配的虚拟内存</h3><p>在Linux中对应 <code>vm_area_struct</code>（VMA）结构体，在ChCore-Lab中对应 <code>vmregion</code>（vmr）结构体。</p><div style="display: flex; justify-content: space-around;">  <img src="/img/Arm/页表映射/分配1.png" alt="分配的代码" style="width: 80%;">  <img src="/img/Arm/页表映射/分配2.png" alt="分配的图解" style="width: 80%;"></div><h3 id="如何添加-VMA">如何添加 VMA</h3><ol><li>OS在创建进程时分配。<br>数据、代码（对应ELF文件的数据、代码段）栈（初始无内容）</li><li>进程运行时添加。<br>堆、栈；<code>mmap/munmap</code>（分配内存buffer，加载新的代码库）</li></ol><h3 id="MMAP"><code>MMAP</code></h3><p>通常用于把一个文件（或一部分）映射到内存。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">void</span> *<span class="hljs-title function_">mmap</span><span class="hljs-params">(<span class="hljs-type">void</span> *addr,           <span class="hljs-comment">// 起始地址</span></span><br><span class="hljs-params">           <span class="hljs-type">size_t</span> length,        <span class="hljs-comment">// 长度</span></span><br><span class="hljs-params">           <span class="hljs-type">int</span> prot,             <span class="hljs-comment">// 权限，如 PROT_READ  </span></span><br><span class="hljs-params">           <span class="hljs-type">int</span> flags,            <span class="hljs-comment">// 映射的标志，如 MAP_PRIVATE</span></span><br><span class="hljs-params">           <span class="hljs-type">int</span> fd,               <span class="hljs-comment">// -1 或者是有效fd</span></span><br><span class="hljs-params">           <span class="hljs-type">off_t</span> offset)</span>         <span class="hljs-comment">// 偏移，例如从文件的哪里开始映射</span><br></code></pre></td></tr></table></figure><p>也可以不映射任何文件，仅仅新建虚拟内存区域（匿名映射）。<br>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/mman.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">char</span> *buf;<br><br>    buf = mmap((<span class="hljs-type">void</span> *)<span class="hljs-number">0x500000000</span>, <span class="hljs-number">0x2000</span>, PROT_READ | PROT_WRITE, MAP_ANONYMOUS | MAP_PRIVATE, <span class="hljs-number">-1</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;mmap returns %p\n&quot;</span>, buf);<br>    <span class="hljs-built_in">strcpy</span>(buf, <span class="hljs-string">&quot;Hello mmap&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, buf);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行 <code>mmap</code> 后，系统的变化如下图：<br><img src="/img/Arm/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84/%E5%8F%98%E5%8C%96.png" alt=""></p><h3 id="判断缺页异常的合法性">判断缺页异常的合法性</h3><p>缺页异常（page fault）</p><ul><li>AARCH64：触发（通用的）同步异常（8）；</li><li>根据ESR信息判断是否为缺页异常，访问的虚拟地址存放在FAR_EL1；</li><li>FAR_EL1中的值不落在VMA区域内，则为非法；反之，则分配物理页，并在页表中添加映射。</li></ul><h3 id="立即映射-vs-延迟映射">立即映射 vs. 延迟映射</h3><ul><li>优势：节约内存资源<br>劣势：缺页异常导致访问延迟增加</li><li>如何取得平衡？<br>应用程序访存具有时空局部性（Locality）。在缺页异常处理函数中采用预先映射的策略，既节约内存又能减少缺页异常次数。</li></ul><h3 id="分配物理页的简单实现">分配物理页的简单实现</h3><p>操作系统用位图记录物理页是否空闲，0：空闲；1：已分配。<br>操作系统在进程结构体中保存页表基地址。<br><img src="/img/Arm/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84/%E9%A1%B5%E8%A1%A8%E5%9F%BA%E5%9C%B0%E5%9D%80.png" alt=""><br><img src="/img/Arm/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84/main.png" alt=""><br><img src="/img/Arm/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84/main2.png" alt=""></p><ol><li><code>paddr_to_vaddr</code> 如何实现？<br>答：直接映射。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">int</span> <span class="hljs-title function_">paddr_to_vaddr</span><span class="hljs-params">(<span class="hljs-type">int</span> pddr)</span>&#123;<span class="hljs-keyword">return</span> pddr + offset;&#125;<br></code></pre></td></tr></table></figure></li><li>参数 <code>pgtbl</code> 是虚拟地址还是物理地址？</li></ol><h2 id="虚拟内存的扩展功能">虚拟内存的扩展功能</h2><h3 id="共享内存、写时拷贝（copy-on-write）">共享内存、写时拷贝（copy-on-write）</h3><h3 id="大页的使用">大页的使用</h3><ul><li>好处：减少TLB缓存项的使用，提高 TLB 命中率；减少页表的级数，提升遍历页表的效率；</li><li>弊端：未使用整个大页而造成物理内存资源浪费，增加管理内存的复杂度。</li><li><code>TCR_EL1</code> 可以选择不同的最小页面大小<ul><li>三种配置：4K、16K、64K</li><li>4K + 大页：2M/1G</li><li>16K + 大页：32M<span style="color: red;">（问：为什么是32M？）</span>（只有L2页表项支持大页）<br>答：一个页表项为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>8</mn></mrow><annotation encoding="application/x-tex">8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">8</span></span></span></span>bits，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mi>K</mi></mrow><annotation encoding="application/x-tex">16K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">16</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 大页可以放下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mi>K</mi><mi mathvariant="normal">/</mi><mn>8</mn><mo>=</mo><mn>2</mn><mi>K</mi></mrow><annotation encoding="application/x-tex">16K/8=2K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">16</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">/8</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个页表项，所以大页可以放下这么多小页，大页大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>K</mi><mo>×</mo><mn>16</mn><mi>K</mi><mo>=</mo><mn>32</mn><mi>M</mi></mrow><annotation encoding="application/x-tex">2K\times 16K=32M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">16</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">32</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>。</li><li>64K + 大页：512M</li></ul></li></ul><p><img src="/img/Arm/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84/%E5%A4%A7%E9%A1%B5.png" alt=""></p><h1>物理内存管理</h1><h2 id="OS职责：分配物理内存资源">OS职责：分配物理内存资源</h2><ul><li>用户态应用程序触发on-demand paging（延迟映射）时，此时内核需要分配物理内存页，映射到对应的虚拟页；</li><li>内核自己申请内存并使用时，如用于内核自身的数据结构，通常通过kmalloc()完成；</li><li>发生换页（swapping）时，通过磁盘来扩展物理内存的容量；</li><li>内核申请用于设备的DMA内存时，DMA内存通常需要连续的物理页。</li></ul><h3 id="场景1：应用触发-on-demand-paging">场景1：应用触发 <code>on-demand paging</code></h3><p>应用调用malloc后，返回的虚拟地址属于某个VMA，但虚拟地址对应的页表项的valid bit可能为0，当第一次访问新分配的虚拟地址时，CPU会触发 <code>page-fault</code>。</p><p>操作系统需要做：</p><ul><li>找到一块空闲的物理内存页； <span style="color: red;">← 物理内存管理（页粒度）</span></li><li>修改页表，将该物理页映射到触发<code>page-fault</code>的虚地址所在虚拟页；</li><li>恢复应用，重复执行触发<code>page-fault</code>的那行代码。</li></ul><h3 id="物理内存分配器的指标">物理内存分配器的指标</h3><p>资源利用率、分配性能。<br>资源利用率：外部碎片与内部碎片。<br><img src="/img/Arm/物理内存管理/内部外部碎片.png" alt="内部碎片与外部碎片" style="width: 80%;"></p><h3 id="解决方式：伙伴系统（buddy-system）">解决方式：伙伴系统（buddy system）</h3><p>分裂与合并（避免外部碎片）。<br><img src="/img/Arm/物理内存管理/伙伴系统.png" alt="伙伴系统图解" style="width: 80%;"><br>当一个请求需要分配 m 个物理页时，伙伴系统将寻找一个大小合适的块， 该块包含 2n个物理页，且满足 2n−1&lt; m ⩽ 2n。<br><img src="/img/Arm/物理内存管理/伙伴系统2.png" alt="分配15K内存例子" style="width: 80%;"></p><blockquote><p>看上图，用分配 15K 举个例子，合适的大小是 16K，因此首先查找第2条（2^2）空闲链表，如果链表不为空， 则可以直接从链表头取出空闲块进行分配。但是，在这个例子中，该链表为空，分配器就会依次向存储更大块的链表去查找。由于第 3 条链表不为空，分配器就从该链表头取出空闲块（32K）进行分裂操作，从而获得两个 16K 大小的 块，将其中一个用于服务请求（这里不再需要继续向下分裂），另一个依然作 为空闲块插入到第 2 条链表中。若再接收到一个大小为 8K 的分配请求，分配器则会直接从第 1 条链表中取出空闲块服务请求。之后，继续接收到一个大小为 4K 的分配请求，分配器则会取出第 2 条链表中大小为 16K 的空闲块进行连续分裂，从而服务请求。读者可以思考并画出此时空闲链表数组的内容。释 放块的过程与分配块的过程相反，分配器首先找到被释放的块的伙伴块，如果伙伴块处于非空闲状态，则将被释放的块直接插入对应大小的空闲链表中，即完成释放；如果伙伴块处于空闲状态，则将它们两个块进行合并，当成一个完整的块释放，并重复该过程。</p></blockquote><h3 id="合并过程如何定位伙伴块">合并过程如何定位伙伴块</h3><p>互为伙伴的两个块的物理地址仅有一位不同，通过块的大小决定是哪一位。<br>例如：块A（0-8K）和块B（8-16K）互为伙伴块，且块A和B的物理地址分别是 0x0 和 0x2000，它们仅有第13位不同，所以块大小是8K（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>13</mn></msup></mrow><annotation encoding="application/x-tex">2^{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">13</span></span></span></span></span></span></span></span></span></span></span></span>）。</p><h3 id="资源利用率、分配性能">资源利用率、分配性能</h3><ol><li>外部碎片程度降低<span style="color: red;">（思考：是否不再出现外部碎片？）</span>内部碎片依然存在：如请求9KB，分配16KB（4个页）。<br>答：不能避免不再出现外部碎片。</li><li>分配、合并的时间复杂度：最差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo>−</mo><mi>n</mi><mi>u</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(list-num)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，是常数时间。</li></ol><h2 id="SLAB-SLUB-SLOB：细粒度内存管理">SLAB/SLUB/SLOB：细粒度内存管理</h2><h3 id="场景-2：内核运行中需要进行动态内存分配">场景-2：内核运行中需要进行动态内存分配</h3><p>内核自身用到的数据结构，为每个进程创建的process，VMA等数据结构。用时分配，用完释放，类似用户态的 <code>malloc</code>，且数据结构大小往往小于页粒度。</p><h3 id="SLAB：建立在伙伴系统之上的分配器">SLAB：建立在伙伴系统之上的分配器</h3><p>可以快速分配小内存对象，内核中的数据结构大小远小于4K（例如VMA），后续以主流的SLUB为例讲解。<br>观察发现操作系统频繁分配的对象大小相对比较固定。因此从伙伴系统获得大块内存（名为slab），对每份大块内存进一步细分成固定大小的小块内存进行管理。块的大小通常是 2n 个字节（一般来说，3 ⩽ n &lt; 12），也可为特定数据结构增加特殊大小的块，从而减小内部碎片</p><h3 id="SLUB-设计">SLUB 设计</h3><p>只分配固定大小块。对于每个固定块大小，SLUB 分配器都会使用独立的内存资源池进行分配，采用 <code>best fit</code> 定位资源池。<br><img src="/img/Arm/物理内存管理/slub1.png" alt="不同资源池" style="width: 80%;"></p><ol><li><p>初始化资源池：把从伙伴系统得到的连续物理页划分成若干等份（slot）。</p></li><li><p>分配与释放：</p><ul><li>分配N字节：定位到大小最合适的资源池（假设只有一个slab），从slab中取走<code>Next_Free</code> 指向的第一个slot；</li><li>释放：将 <code>Next_Free</code> 指针指向待释放内存（slot）。<br><img src="/img/Arm/物理内存管理/slub2.png" alt="slub示意图" style="width: 80%;"></li></ul></li><li><p>释放具体流程：根据待释放内存地址计算slab起始地址<br>ADDR &amp; ~(SLAB_SIZE-1)<br><span style="color: red;">上述方法在kfree(addr)接口下可行吗？</span><br>答：没有size信息，无法判断addr是被slab分配的，还是伙伴系统分配的。<br>解决方式：在物理页结构体中记录所属slab信息。</p></li><li><p>新增slab：当某个资源池（例如64字节对应的资源池）中的slab已经分配完怎么办？再从伙伴系统分配一个slab。</p></li><li><p>资源池内组织多个slab：引入两个指针（current，partial）。</p></li></ol><ul><li>Current指向一个slab，并从其中分配；当Current slab全满，则从Partial链表中取出一个放入Current；</li><li>释放后，若某个slab不再全满，则加入partial；释放后，若某个slab全空则可还给伙伴系统。</li></ul><h2 id="突破物理内存容量限制">突破物理内存容量限制</h2><h3 id="换页机制（Swapping）">换页机制（Swapping）</h3><p>用磁盘作为物理内存的补充，且对上层应用透明，应用对虚拟内存的使用，不受物理内存大小限制。<br>磁盘上划分专门的Swap分区，或专门的Swap文件，在处理缺页异常时，触发物理内存页的换入换出。</p><h3 id="如何判断缺页异常是由于换页引起的？">如何判断缺页异常是由于换页引起的？</h3><p>导致缺页异常的三种可能：</p><ol><li>访问非法虚拟地址</li><li>按需分配（尚未分配真正的物理页）</li><li>内存页数据被换出到磁盘上</li></ol><p>利用VMA区分是否为合法虚拟地址（合法缺页异常）。利用页表项内容区分是按需分配还是需要换入。</p><h3 id="何时进行换出操作">何时进行换出操作</h3><ul><li>策略A：当用完所有物理页后，再按需换出。当内存资源紧张时，大部分物理页分配操作都需要触发换出，造成分配时延高。</li><li>策略B：设立阈值，在空闲的物理页数量低于阈值时，操作系统择机（如系统空闲时） 换出部分页，直到空闲页数量超过阈值。</li></ul><h3 id="换页机制的代价">换页机制的代价</h3><ul><li><p>优势：突破物理内存容量限制</p></li><li><p>劣势：缺页异常+磁盘操作导致访问延迟增加</p></li><li><p>策略：预取机制 （Prefetching）<br>预测接卸来进程要使用的页，提前换入；在缺页异常处理函数中，根据应用程序访存具有的空间本地性进行预取。</p></li></ul><h3 id="如何选择换出的页">如何选择换出的页</h3><ol><li>理想策略：优先换出未来最长时间内不会再访问的页面</li><li>FIFO策略：操作系统维护一个队列用于记录换入内存的物理页号，每换入一个物理页就把其页号加到队尾。<br><span style="color: red;">Belady异常</span>：使用FIFO策略，物理资源增加反而导致了性能下降。</li><li>Second Chance策略：FIFO 策略的一种改进版本：为每一个物理页号维护一个访问标志位。如果访问的页面号已经处在队列中，则置上其访问标志位。<br>换页时查看队头：1）无标志则换出；2）有标志则去除并放入队尾，继续寻找。</li><li>时钟算法：</li></ol><h2 id="总结：物理内存管理">总结：物理内存管理</h2><p><img src="/img/Arm/%E7%89%A9%E7%90%86%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E6%80%BB%E7%BB%93.png" alt="总结"></p><h1>进程</h1><p>回顾：<a href="#%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8A%E4%B8%8B%E6%96%87">处理器上下文</a>，<a href="#%E5%88%86%E6%97%B6%E5%A4%8D%E7%94%A8cpu">分时复用cpu</a><br>进程是计算机程序运行时的抽象。静态部分有程序运行需要的代码和数据，动态部分有程序运行期间的状态（程序计数器、堆、栈……）。<br><strong>进程具有独立的虚拟地址空间</strong>。每个进程都具有“独占全部内存”的假象，内核中同样包含内核栈和内核代码、数据。</p><h2 id="进程的表示：PCB">进程的表示：PCB</h2><p>每个进程都对应一个元数据，称为“进程控制块”PCB。进程控制块存储在内核态（为什么？）<br>答：进程控制块存储在内核态，因为它由内核管理，不应被用户态的程序访问。</p><p>进程控制块里至少应该保存哪些信息？</p><ul><li>独立的虚拟地址空间</li><li>独立的处理器上下文</li><li>内核栈</li></ul><h2 id="内核栈和用户栈">内核栈和用户栈</h2><p>应用为什么需要“又一个栈”（内核栈）？<br>答：进程在内核中依然需要执行代码，有读写临时数据的需求；进程在用户态和内核态的数据应该相互隔离，增强安全性。</p><p>AArch64实现：两个栈指针寄存器</p><ul><li><code>SP_EL1</code>，<code>SP_EL0</code></li><li>当进程进入内核后，自动完成栈寄存器切换</li><li>x86只有一个栈寄存器，需要保存恢复</li></ul><h2 id="进程的创建">进程的创建</h2><p>创建进程就是初始化进程的内容。<br>用户视角：代码、数据、堆栈<br>内核视角：PCB、虚拟地址空间、上下文、内核栈</p><h3 id="进程的创建（1）：PCB初始化">进程的创建（1）：PCB初始化</h3><ul><li>分配PCB本身的数据结构</li><li>初始化PCB：虚拟内存，创建及初始化vmspace数据结构；分配一个物理页，作为顶级页表。</li><li>内核栈：分配物理页，作为进程内核栈<br>思考：处理器上下文初始化？在之后（应用运行前）才会初始化。<br><img src=/img/Arm/进程/PCB初始化.png alt="PCB初始化代码"></li></ul><h3 id="进程的创建（2）：可执行文件加载">进程的创建（2）：可执行文件加载</h3><p>以 ELF 格式为例，从程序头部表可以获取需要的段所在位置。通常只有代码段和数据段需要被加载（loadable），加载即从ELF文件中映射到虚拟地址空间的过程。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%8A%A0%E8%BD%BD%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6.png" alt="加载可执行文件"></p><h3 id="进程的创建（3）：准备运行环境">进程的创建（3）：准备运行环境</h3><p>在返回用户态运行前，还需为进程准备运行所需的环境，分配用户栈（分配物理内存并映射到虚拟地址空间）。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%87%86%E5%A4%87%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83.png" alt="准备运行环境"></p><h3 id="进程的创建（4）：处理器上下文初始化">进程的创建（4）：处理器上下文初始化</h3><p>为什么直到最后才初始化处理器上下文？因为其包含的内容直到前序操作完成才确定。<br>SP：用户栈分配后才确定地址<br>PC（保存在<code>ELR_EL1</code>）：加载ELF后才知道入口所在地址<br>大部分寄存器初始值可直接赋为0。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%9D%E5%A7%8B%E5%8C%96.png" alt="处理器上下文初始化"><img src="image.png" alt="alt text"></p><h2 id="进程的退出与等待">进程的退出与等待</h2><p>需要一个系统调用使进程显式退出（exit）。但使用return更为常规，此时可由libc的代码调用<code>process_exit</code>，退出进程。</p><p>实现：销毁PCB及其中保存的所有内容，并告知内核选择其他进程执行（细节之后介绍）。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/PCB%E9%94%80%E6%AF%811.png" alt="销毁PCB1"></p><h3 id="改进代码实现：">改进代码实现：</h3><ol><li>为了使shell等待，直到命令退出，引入新系统调用：进程等待 <code>process_waitpid</code> 。</li><li>为了使shell知道应该等待哪个进程，为每个进程引入进程标识符（id）。</li><li>为进程加入 <code>退出</code> 状态支持，如果进程已设置为退出，则记录其退出状态并回收。这将进程资源的回收操作从exit移到了waitpid。</li><li>为了实现只有创建某进程的程序才能监控它，引入父（创建者）子（被创建者）进程概念。进程之间的创建关系构建了一棵进程树，第一个进程（树根）通常由内核主动创建。</li></ol><h2 id="进程的状态">进程的状态</h2><ul><li>新生（new）：刚调用process_create</li><li>就绪（ready）：随时准备执行（但暂时没有执行）</li><li>运行（running）：正在执行</li><li>僵尸（zombie）：退出但未回收</li><li>终止（terminated）：退出且被回收<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E8%BF%9B%E7%A8%8B%E7%9A%845%E7%A7%8D%E7%8A%B6%E6%80%81.png" alt="进程的5种状态"></li></ul><h3 id="调度">调度</h3><p>调度的目的：选出下一个可以执行的进程，可以执行 = 就绪（ready）。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%AE%9E%E7%8E%B01.png" alt="增加运行状态"></p><h2 id="案例分析：LINUX进程创建">案例分析：LINUX进程创建</h2><p>经典创建方法：fork()。语义：为调用进程创建一个一模一样的新进程，调用进程为父进程，新进程为子进程，接口简单，无需任何参数。</p><p>fork后的两个进程均为独立进程，拥有不同的进程id，可以并行执行，互不干扰（除非使用特定的接口）<br>。父进程和子进程会共享部分数据结构（内存、文件等）。</p><p>为了“一模一样”，将父进程的PCB拷贝一份，包括PCB、内核栈、处理器上下文（假设PCB结构为第一版），实现比较简单。</p><h3 id="fork-优缺点分析">fork 优缺点分析</h3><ul><li>fork的优点<br>接口非常简洁，（过去）实现简单；将进程“创建”和“执行”（exec）解耦，提高了灵活度。</li><li>fork的缺点<ul><li>创建拷贝的复杂度与PCB复杂度相关（如今越来越复杂）</li><li>完全拷贝过于粗暴（不如clone）</li><li>性能差、可扩展性差（不如vfork和spawn）</li><li>不可组合性 (例如：fork() + pthread())</li></ul></li></ul><h2 id="进程切换-2">进程切换</h2><h3 id="进程切换基本步骤">进程切换基本步骤</h3><p><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2%E6%AD%A5%E9%AA%A4.png" alt="进程切换基本步骤"></p><h3 id="处理器上下文-vs-进程上下文">处理器上下文 vs. 进程上下文</h3><ul><li><p>处理器上下文：用于保存切换时的寄存器状态（硬件），在每个PCB中均有保存；</p></li><li><p>进程上下文：表示目前操作系统正以哪个进程的身份运行（软件），通常使用一个指向PCB的全局指针表示（代码中的curr_proc）。</p></li><li><p>进程切换节点：<strong>所有调用schedule()的地方</strong><br>告知内核选择下一个执行的进程，也就涉及到了进程的切换。</p></li></ul><h3 id="进程切换全过程">进程切换全过程</h3><ol><li>p0进入内核态，由硬件完成部分寄存器保存：PC和PSTATE分别自动保存到ELR_EL1和SPSR_EL1。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%88%87%E6%8D%A21.png" alt="进程切换过程1"></li><li>p0处理器上下文保存：将处理器中的寄存器值保存到处理器上下文对应的位置。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%88%87%E6%8D%A22.png" alt="进程切换过程2"></li><li>虚拟地址空间切换：设置页表相关寄存器（TTBR0_EL1），使用PCB中保存的页表基地址赋值给TTBR0_EL1。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%88%87%E6%8D%A23.png" alt="进程切换过程3"></li><li>内核栈切换：设置内核中的栈寄存器SP_EL1，使用PCB中保存的内核栈顶地址赋值给SP_EL1。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%88%87%E6%8D%A24.png" alt="进程切换过程4"></li><li>进程上下文切换：设置cur_proc为之后要执行的进程（p1），表明之后操作系统将以p1的身份运行。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%88%87%E6%8D%A25.png" alt="进程切换过程5"></li><li>p1处理器上下文恢复：从处理器上下文中加载各寄存器的值，放入对应寄存器中。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%88%87%E6%8D%A26.png" alt="进程切换过程6"></li><li>p1处理器上下文恢复：由硬件自动恢复部分寄存器，将ELR_EL1和SPSR_EL1中的值自动保存到PC和PSTATE中。<br><img src="/img/Arm/%E8%BF%9B%E7%A8%8B/%E5%88%87%E6%8D%A27.png" alt="进程切换过程7"></li></ol><h1>线程</h1><p>多核调度简单方法：进程数量一般远超过CPU核数，通过简单分配，使每个核至少分得一个进程。<br>存在局限：单一进程无法利用多核资源，一个进程同一时刻只能被调度到其中一个核上运行。<br>如果一个程序想同时利用多核，该怎么办呢？<strong>使用 FORK ！</strong><br>FORK局限：进程间隔离过强，共享数据困难，各进程拥有独立的地址空间，共享需以页为粒度，协调困难，需要复杂的通信机制（如管道）。而且进程管理开销较大，创建是地址空间复制，切换是页表切换。</p><h2 id="线程介绍">线程介绍</h2><p>线程只包含运行时的状态，静态部分由进程提供，包括了执行所需的最小状态（主要是寄存器和栈）。<br>一个进程可以包含多个线程，每个线程共享同一地址空间（方便数据共享和交互），允许进程内并行。</p><h2 id="如何使用线程">如何使用线程</h2><ul><li>常用库：POSIX threads（pthreads），包含约60个函数的标准接口，实现的功能与进程相关系统调用相似。</li><li>创建：pthread_create</li><li>回收：pthread_join</li><li>退出：pthread_exit<br><strong>注意</strong>：一个线程执行系统调用，可能影响该进程的所有线程，如exit会使所有线程退出。</li></ul><p>一个示例代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-comment">/* pthreads &quot;hello, world&quot; program */</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;pthread.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-comment">/* thread routine */</span> <span class="hljs-comment">// 子线程</span><br><span class="hljs-type">void</span> *<span class="hljs-title function_">thread</span><span class="hljs-params">(<span class="hljs-type">void</span> *vargp)</span> &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello, world!\n&quot;</span>); <br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123; <span class="hljs-comment">// 主线程 </span><br>    <span class="hljs-type">pthread_t</span> tid;<br>    <span class="hljs-comment">// &amp;tid是子线程ID，thread是子线程执行起点</span><br>    pthread_create(&amp;tid, <span class="hljs-literal">NULL</span>, thread, <span class="hljs-literal">NULL</span>); <span class="hljs-comment">// 创建线程接口</span><br>    pthread_join(tid, <span class="hljs-literal">NULL</span>); <span class="hljs-comment">// NULL为线程返回值</span><br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>主线程创建子线程后，两线程独立执行。若子线程先执行，则exit被调用，子线程直接被终止，如何避免？加入join操作！<br><img src="/img/Arm/%E7%BA%BF%E7%A8%8B/join.png" alt="加入join后的程序控制流"><br>基于join的方法存在什么问题？需要主线程手动调用回收资源，若主线程未调用则可能出现资源溢出。<br>解决方案：加入detach操作。调用detach可使线程进入“分离”状态，分离线程不能被其他线程杀死或回收，退出时资源自动回收。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;pthread.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">void</span> *<span class="hljs-title function_">thread</span><span class="hljs-params">(<span class="hljs-type">void</span> *vargp)</span> &#123;<br>    pthread_detach(pthread_self()); <span class="hljs-comment">// 返回自身线程ID</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello, world!\n&quot;</span>); <br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">pthread_t</span> tid;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) pthread_create(&amp;tid, <span class="hljs-literal">NULL</span>, thread, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>如果detach和join一起使用会怎么样？会返回22，22代表illegal arguments，因为这个线程无法join。<br>detach代表线程完全独立了吗？没有。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;pthread.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">void</span> *<span class="hljs-title function_">thread</span><span class="hljs-params">(<span class="hljs-type">void</span> *vargp)</span> &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello, world!\n&quot;</span>); <br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">pthread_t</span> tid;<br>    pthread_create(&amp;tid, <span class="hljs-literal">NULL</span>, thread, <span class="hljs-literal">NULL</span>);<br>    pthread_detach(tid);<br>    pthread_exit(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样不会有任何输出，核心原因是主函数返回后隐式调用exit，强制终止所有线程。<br>解决方案：加入pthread_exit（见上面），只退出当前线程（参数为返回值）。</p><h2 id="线程">线程</h2><h3 id="多线程的进程">多线程的进程</h3><p>一个进程可以包含多个线程，一个进程的多线程可以在不同处理器上同时执行。调度的基本单元由进程变为了线程，每个线程都有自己的执行状态，切换的单位由进程变为了线程。<br>每个线程拥有自己的栈，内核中也有为线程准备的内核栈，其它区域共享（数据、代码、堆）。</p><h3 id="用户态线程与内核态线程">用户态线程与内核态线程</h3><p>根据线程是否受内核管理，可以将线程分为两类：</p><ol><li>内核态线程：内核可见，受内核管理，由内核创建，线程相关信息存放在内核中；</li><li>用户态线程：内核不可见，不受内核直接管理，在应用态创建，线程相关信息主要存放在应用数据中。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tmux常用命令</title>
    <link href="/2024/09/28/tmux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/09/28/tmux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="Tmux常见指令">Tmux常见指令</h2><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>%</td><td>分成左右两个窗格</td></tr><tr><td>&quot;</td><td>分成上下两个窗格</td></tr><tr><td>q</td><td>显示窗格编号</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大学生数学竞赛笔记</title>
    <link href="/2024/08/27/%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/08/27/%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#---------">微分中值定理的应用</a></li><li><a href="#--------">常见不定积分公式</a></li></ul><ul><li><a href="#-------">多元函数积分学</a><ul><li><a href="#---------">曲线积分与曲面积分</a><ul><li><a href="#-------">第一类曲线积分</a></li><li><a href="#-------">第一类曲面积分</a></li><li><a href="#-------">第二类曲线积分</a></li></ul></li></ul></li><li><a href="#----">无穷级数</a><ul><li><a href="#----">数项级数</a><ul><li><a href="#-------">判定收敛的法则</a></li></ul></li><li><a href="#-----">函数项级数</a><ul><li><a href="#-------">幂级数及收敛性</a></li></ul></li></ul></li><li><a href="#----">微分方程</a><ul><li><a href="#------">一阶微分方程</a><ul><li><a href="#------">一阶线性方程</a></li><li><a href="#-----">伯努利方程</a></li><li><a href="#-----">全微分方程</a></li><li><a href="#--------">可降阶的高阶方程</a></li><li><a href="#-----------">常系数齐次线性微分方程</a></li><li><a href="#---------------">常系数齐次线性微分方程算子解法</a></li></ul></li></ul></li></ul><!-- tocstop --><h3 id="微分中值定理的应用">微分中值定理的应用</h3><p>求解单中值等式问题一般分为三步：</p><ol><li>将等式中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> 替换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，并令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，可得到一个微分方程；</li><li>解这个方程，把结果表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">G(x,y)=C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，令辅助函数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>G</mi><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F(x)=G[x,f(x)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)]</span></span></span></span>；</li><li>确定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 满足罗尔中值定理的区间。</li></ol><p><font color=blue>中值定理例题</font>：已知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mfrac><mi>π</mi><mn>4</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f(\frac \pi 4)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，证明：存在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mfrac><mi>π</mi><mn>4</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon\in (0,\frac \pi 4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>f</mi><mo stretchy="false">(</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>ϵ</mi><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">2f(\epsilon)+\sin2\epsilon f&#x27;(\epsilon)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>.</p><p>解决的三步：</p><ol><li>微分方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>y</mi><mo>+</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>x</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">2y+y&#x27;\sin2x=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mfrac><mi>y</mi><mi>y</mi></mfrac><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>−</mo><mfrac><mn>2</mn><mrow><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac y y&#x27;=-\frac 2 {\sin2x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3704em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8893em;"><span style="top:-3.2004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">s</span><span class="mtight">i</span><span class="mtight">n</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight">2</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，解得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mi>tan</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">y\tan x=C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，辅助函数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>tan</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">F(x)=f(x)\tan x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span></span>；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mfrac><mi>π</mi><mn>4</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(\frac \pi 4)=0, F(0)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，存在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mfrac><mi>π</mi><mn>4</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon\in (0,\frac \pi 4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，使 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>f</mi><mo stretchy="false">(</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>ϵ</mi><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">2f(\epsilon)+\sin2\epsilon f&#x27;(\epsilon)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">ϵ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>.</li></ol><h3 id="常见不定积分公式">常见不定积分公式</h3><p>以下省略所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">+C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">+</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> !</p><ol><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>∫</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>±</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant="normal">d</mi><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>x</mi><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>±</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mo>±</mo><msup><mi>a</mi><mn>2</mn></msup><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>±</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mo fence="true">∣</mo></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\int\sqrt{x^2\pm a^2}\mathrm dx=\frac 1 2(x\sqrt{x^2\pm a^2}\pm a^2\ln\left|x+\sqrt{x^2\pm a^2}\right|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2222em;vertical-align:-0.8622em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0623em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0223em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1777em;"><span></span></span></span></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0623em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0223em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.333em;height:1.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.800em" viewBox="0 0 333 1800"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0623em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0223em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1777em;"><span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.333em;height:1.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.800em" viewBox="0 0 333 1800"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>∫</mo><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant="normal">d</mi><mi>x</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>x</mi><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup><mi>arcsin</mi><mo>⁡</mo><mfrac><mi>x</mi><mi>a</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\int\sqrt{a^2-x^2}\mathrm dx=\frac 1 2(x\sqrt{a^2-x^2}+a^2\arcsin \frac x a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2222em;vertical-align:-0.8622em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0623em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0223em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1777em;"><span></span></span></span></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0623em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0223em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">arcsin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>∫</mo><mfrac><mn>1</mn><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt></mfrac><mi mathvariant="normal">d</mi><mi>x</mi><mo>=</mo><mi>arcsin</mi><mo>⁡</mo><mfrac><mi>x</mi><mi>a</mi></mfrac></mrow><annotation encoding="application/x-tex">\int\frac 1 {\sqrt{a^2-x^2}}\mathrm{d}x=\arcsin \frac x a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.29em;vertical-align:-0.93em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.1966em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9134em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.8734em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1266em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mop">arcsin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>∫</mo><mfrac><mn>1</mn><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>±</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt></mfrac><mi mathvariant="normal">d</mi><mi>x</mi><mo>=</mo><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>±</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\int\frac 1 {\sqrt{x^2\pm a^2}}\mathrm{d}x=\ln\left|x+\sqrt{x^2\pm a^2}\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.29em;vertical-align:-0.93em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.1966em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9134em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.8734em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1266em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.333em;height:1.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.800em" viewBox="0 0 333 1800"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0623em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0223em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1777em;"><span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.8em;"></span><span style="width:0.333em;height:1.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.800em" viewBox="0 0 333 1800"><path d="M145 15 v585 v600 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-600 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v600 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>∫</mo><mi>sec</mi><mo>⁡</mo><mi>x</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>=</mo><mi>ln</mi><mo>⁡</mo><mi mathvariant="normal">∣</mi><mi>sec</mi><mo>⁡</mo><mi>x</mi><mo>+</mo><mi>tan</mi><mo>⁡</mo><mi>x</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\int\sec x\mathrm{d}x=\ln|\sec x+\tan x|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2222em;vertical-align:-0.8622em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sec</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sec</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord">∣</span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mfrac><mi>π</mi><mn>2</mn></mfrac></msubsup><msup><mrow><mi>sin</mi><mo>⁡</mo></mrow><mi>n</mi></msup><mi>x</mi><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mfrac><mi>π</mi><mn>2</mn></mfrac></msubsup><msup><mrow><mi>cos</mi><mo>⁡</mo></mrow><mi>n</mi></msup><mi>x</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo stretchy="false">!</mo></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo stretchy="false">!</mo></mrow></mfrac><mo>⋅</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo>=</mo><mn>2</mn><mi>m</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo stretchy="false">!</mo></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo stretchy="false">!</mo></mrow></mfrac><mo>⋅</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo>=</mo><mn>2</mn><mi>m</mi><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\int_0^{\frac \pi 2}\sin^n x=\int_0^{\frac \pi 2}\cos^n x=\begin{cases}\frac{(2m-1)!!}{(2m)!!}\cdot \frac \pi 2, &amp; n=2m \\\frac{(2m)!!}{(2m+1)!!}\cdot \frac \pi 2, &amp; n=2m+1\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5089em;vertical-align:-0.9119em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.597em;"><span style="top:-2.088em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-4.1129em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">sin</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7222em;"><span style="top:-3.1208em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5089em;vertical-align:-0.9119em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.597em;"><span style="top:-2.088em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-4.1129em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">cos</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.06em;vertical-align:-1.28em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.78em;"><span style="top:-3.78em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)!!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)!!</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)!!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)!!</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.28em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.78em;"><span style="top:-3.78em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mord mathnormal">m</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.28em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li></ol><h2 id="多元函数积分学">多元函数积分学</h2><h3 id="曲线积分与曲面积分">曲线积分与曲面积分</h3><h4 id="第一类曲线积分">第一类曲线积分</h4><ol><li><font color=blue>（定理）</font>对直角坐标系，若C的参数方程为</li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mi>y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow><mtext> </mtext><mi>α</mi><mo>≤</mo><mi>t</mi><mo>≤</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\begin{cases}x=x(t), \\y=y(t),\end{cases}\text{ }\alpha\leq t\leq\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord"> </span></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></span></p><p>则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∫</mo><mi>C</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>s</mi><mo>=</mo><msubsup><mo>∫</mo><mi>α</mi><mi>β</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msqrt><mrow><msup><mi>x</mi><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mn>2</mn></mrow></msup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>+</mo><msup><mi>y</mi><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mn>2</mn></mrow></msup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msqrt><mi mathvariant="normal">d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\int_Cf(x,y)\mathrm{d}s=\int_\alpha^\beta f(x(t),y(t))\sqrt{x^{&#x27;2}(t)+y^{&#x27;2}(t)}\mathrm{d}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1608em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1225em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3998em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.044em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9435em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-2.9035em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2965em;"><span></span></span></span></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span></span>；</p><p>对极坐标系，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 的参数方程为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mi>r</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r=r(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>，</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mi>r</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mi>r</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}x=r(\theta)\cos(\theta), \\y=r(\theta)\sin(\theta),\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>代入公式（1）得到。</p><h4 id="第一类曲面积分">第一类曲面积分</h4><ol><li><font color=blue>（定理）</font>设曲面 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>:</mo><mi>z</mi><mo>=</mo><mi>z</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">S: z=z(x,y),(x,y)\in D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> ，则</li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo>∬</mo><mi>S</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∬</mo><mi>D</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msqrt><mrow><mn>1</mn><mo>+</mo><msubsup><mi>z</mi><mi>x</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>z</mi><mi>y</mi><mn>2</mn></msubsup></mrow></msqrt><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\iint_Sf(x,y,z)=\iint_Df(x,y,z(x,y))\sqrt{1+z_x^2+z_y^2}\mathrm{d}x\mathrm{d}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2717em;vertical-align:-0.9117em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2717em;vertical-align:-0.9117em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">))</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2124em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.453em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1724em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.88em" viewBox="0 0 400000 1944" preserveAspectRatio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6276em;"><span></span></span></span></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span></p><p>若曲面为双参方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mi>y</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><mi>z</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>D</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\begin{cases}    x=x(u,v) \\    y=y(u,v) \\    z=z(u,v)  \end{cases}(u,v)\in D,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span></span></span></span>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>n</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>z</mi><mi>u</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>v</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>v</mi></msub><mo separator="true">,</mo><msub><mi>z</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo>≜</mo><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\vec n=(x_u,y_u,z_u)\times (x_v,y_v,z_v)\triangleq(A,B,C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">n</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1667em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">≜</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>，则有</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">d</mi><mi>S</mi><mo>=</mo><msqrt><mrow><msup><mi>A</mi><mn>2</mn></msup><mo>+</mo><msup><mi>B</mi><mn>2</mn></msup><mo>+</mo><msup><mi>C</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant="normal">d</mi><mi>u</mi><mi mathvariant="normal">d</mi><mi>v</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\mathrm{d} S=\sqrt{A^2+B^2+C^2}\mathrm{d} u\mathrm{d} v.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.1777em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0623em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0223em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1777em;"><span></span></span></span></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">u</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">.</span></span></span></span></span></p><h4 id="第二类曲线积分">第二类曲线积分</h4><ol><li><font color=blue>（定义）</font>当点沿区域D边界朝一个方向前进时，D总在其左手侧，规定此方向为区域D诱导的边界正向，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∂</mi><msup><mi>D</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">\partial D^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>。</li><li><font color=blue>（定理）</font>若定向曲线L的方程为<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mi>y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow><mi>t</mi><mo>:</mo><mi>α</mi><mo>→</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\begin{cases}x=x(t), \\y=y(t),\end{cases} t:\alpha\rightarrow\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>, <br>则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∫</mo><mi>L</mi></msub><mi>P</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>y</mi><mo>=</mo><msubsup><mo>∫</mo><mi>α</mi><mi>β</mi></msubsup><mo stretchy="false">[</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>+</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi mathvariant="normal">d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\int_LP\mathrm d x+Q\mathrm d y=\int_\alpha^\beta[P(x(t),y(t))x&#x27;(t)+Q(x(t),y(t))y&#x27;(t)]\mathrm d t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1608em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1225em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3998em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.044em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)]</span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span></span>.</li><li><font color=blue>（定理，Green公式）</font></li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo>∮</mo><mrow><mi mathvariant="normal">∂</mi><msup><mi>D</mi><mo>+</mo></msup></mrow></msub><mi>P</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>y</mi><mo>=</mo><msub><mo>∬</mo><mi>D</mi></msub><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Q</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>P</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\oint_{\partial D^+}P\mathrm d  x+Q\mathrm d y=\iint_D(\frac{\partial Q}{\partial x}-\frac{\partial P}{\partial y})\mathrm d x \mathrm d y.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2719em;vertical-align:-0.9119em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∮</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4201em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7027em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2831em;vertical-align:-0.9117em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">.</span></span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo>=</mo><mi>y</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mi>z</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">x=x(u,v),y=y(u,v),z=z(u,v), (u,z)\in D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></span></p><p>则</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo>∬</mo><mi>S</mi></msub><mi>P</mi><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>z</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>R</mi><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi><mo>=</mo><mo>±</mo><msub><mo>∬</mo><mi>D</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mi>A</mi><mo>+</mo><mi>Q</mi><mi>B</mi><mo>+</mo><mi>R</mi><mi>C</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>u</mi><mi mathvariant="normal">d</mi><mi>v</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\iint_SP\mathrm d y\mathrm d z+Q \mathrm d z\mathrm d x+R\mathrm d x\mathrm d y=\pm\iint_D(PA+QB+RC)\mathrm d u\mathrm d v.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2717em;vertical-align:-0.9117em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2717em;vertical-align:-0.9117em;"></span><span class="mord">±</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">QB</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">RC</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">u</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">.</span></span></span></span></span></p><p>若曲面<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>的方程为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi>z</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">z=z(x,y),(x,y)\in D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>，则</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo>∬</mo><mi>S</mi></msub><mi>P</mi><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>z</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>R</mi><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi><mo>=</mo><mo>±</mo><msub><mo>∬</mo><mi>D</mi></msub><mo stretchy="false">(</mo><mo>−</mo><mi>P</mi><msub><mi>z</mi><mi>x</mi></msub><mo>−</mo><mi>Q</mi><msub><mi>z</mi><mi>y</mi></msub><mo>+</mo><mi>R</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">  \iint_SP\mathrm d y\mathrm d z+Q \mathrm d z\mathrm d x+R\mathrm d x\mathrm d y=\pm\iint_D(-Pz_x-Qz_y+R)\mathrm d x\mathrm d y.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2717em;vertical-align:-0.9117em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2717em;vertical-align:-0.9117em;"></span><span class="mord">±</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">.</span></span></span></span></span></p><p>其中正负号由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>指定侧的法向量决定。</p><ol start="3"><li><font color=blue>（定理，Gauss公式）</font></li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo>∯</mo><mrow><mi mathvariant="normal">∂</mi><msup><mi mathvariant="normal">Ω</mi><mo>+</mo></msup></mrow></msub><mi>P</mi><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>z</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>R</mi><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi><mo>=</mo><msub><mo>∭</mo><mi mathvariant="normal">Ω</mi></msub><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>P</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Q</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>R</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">\oiint_{\partial \Omega^+}P\mathrm d y\mathrm d z+Q \mathrm d z\mathrm d x+R\mathrm d x\mathrm d y=\iiint_\Omega(\frac{\partial P}{\partial x}+\frac{\partial Q}{\partial y}+\frac{\partial R}{\partial z})\mathrm d V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2717em;vertical-align:-0.9117em;"></span><span class="mop"><span class="mop vlist-t vlist-t2" style="position:relative;top:-0.001em;"><span class="vlist-r"><span class="vlist" style="height:1.36em;"><span style="top:-3.36em;"><span class="pstrut" style="height:3.36em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;">∬</span></span><span style="top:-3.28em;"><span class="pstrut" style="height:3.36em;"></span><span class="overlay" style="height:0.659em;width:1.472em;"><svg xmlns="http://www.w3.org/2000/svg" width="1.472em" height="0.659em" style="width:1.472em" viewBox="0 0 1472 659" preserveAspectRatio="xMinYMin"><path d="M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230zm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2c0 110 84 276 504 276s502.4-166 502.4-276z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.862em;"><span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4198em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mtight">Ω</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7027em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2831em;vertical-align:-0.9117em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∭</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4334em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">Ω</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9117em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></span></p><ol start="4"><li><font color=blue>（定理，Stokes公式）</font></li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathsize="0.9em"><msub><mo>∮</mo><mrow><mi mathvariant="normal">∂</mi><mi>S</mi></mrow></msub><mi>p</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>y</mi><mo>+</mo><mi>R</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>=</mo><msub><mo>∬</mo><mi>S</mi></msub><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>R</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Q</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>P</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>R</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>s</mi></mrow></mfrac><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>z</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Q</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>P</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi></mstyle></mrow><annotation encoding="application/x-tex">  \small  \oint_{\partial S}p\mathrm d x+Q\mathrm d y+R\mathrm d z=\iint_S(\frac{\partial R}{\partial y}-\frac{\partial Q}{\partial z})\mathrm d y\mathrm d z+(\frac{\partial P}{\partial z}-\frac{\partial R}{\partial s})\mathrm d z\mathrm d x+(\frac{\partial Q}{\partial x}-\frac{\partial P}{\partial y})\mathrm d x\mathrm d y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.06em;vertical-align:-0.836em;"></span><span class="mop sizing reset-size6 size5"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∮</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.466em;"><span style="top:-1.6711em;margin-left:-0.4445em;margin-right:0.0556em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size5 size2 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9289em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal sizing reset-size6 size5">p</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size5">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8em;vertical-align:-0.175em;"></span><span class="mord mathnormal sizing reset-size6 size5">Q</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size5">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;"></span><span class="mord mathnormal sizing reset-size6 size5" style="margin-right:0.00773em;">R</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel sizing reset-size6 size5">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0701em;vertical-align:-0.8358em;"></span><span class="mop sizing reset-size6 size5"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.001em;">∬</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.4731em;"><span style="top:-1.6713em;margin-left:-0.4445em;margin-right:0.0556em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size5 size2 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9287em;"><span></span></span></span></span></span></span><span class="mopen sizing reset-size6 size5">(</span><span class="mord sizing reset-size6 size5"><span class="mopen nulldelimiter sizing reset-size5 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size5 size6"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size5">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8517em;vertical-align:-0.6174em;"></span><span class="mord sizing reset-size6 size5"><span class="mopen nulldelimiter sizing reset-size5 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size5 size6"></span></span><span class="mclose sizing reset-size6 size5">)</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5" style="margin-right:0.03588em;">y</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size5">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8517em;vertical-align:-0.6174em;"></span><span class="mopen sizing reset-size6 size5">(</span><span class="mord sizing reset-size6 size5"><span class="mopen nulldelimiter sizing reset-size5 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size5 size6"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size5">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8517em;vertical-align:-0.6174em;"></span><span class="mord sizing reset-size6 size5"><span class="mopen nulldelimiter sizing reset-size5 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size5 size6"></span></span><span class="mclose sizing reset-size6 size5">)</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5" style="margin-right:0.04398em;">z</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size5">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8517em;vertical-align:-0.6174em;"></span><span class="mopen sizing reset-size6 size5">(</span><span class="mord sizing reset-size6 size5"><span class="mopen nulldelimiter sizing reset-size5 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size5 size6"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin sizing reset-size6 size5">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0267em;vertical-align:-0.7924em;"></span><span class="mord sizing reset-size6 size5"><span class="mopen nulldelimiter sizing reset-size5 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size5 size6"></span></span><span class="mclose sizing reset-size6 size5">)</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5">x</span><span class="mord mathrm sizing reset-size6 size5">d</span><span class="mord mathnormal sizing reset-size6 size5" style="margin-right:0.03588em;">y</span></span></span></span></span></p><p>也可以写为行列式形式：</p><h2 id="无穷级数">无穷级数</h2><h3 id="数项级数">数项级数</h3><p>（定义）给定常数项级数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>u</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\sum_{n=1}^{\infty}u_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>u</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">S_n=\sum_{k=1}^n u_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为它的部分和。若存在极限 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">S=\lim\limits_{n\rightarrow\infty}S_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3944em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，则称之为该级数的和，此时该级数是收敛的。若极限不存在，则该级数为发散的。</p><h4 id="判定收敛的法则">判定收敛的法则</h4><ol><li><font color=blue>（交错级数、莱布尼兹判别法）</font>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>n</mi></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">u_n&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><msub><mi>u</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\sum\limits_{n=1}^\infty(-1)^{n-1}u_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3185em;vertical-align:-0.9671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1329em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9671em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为交错级数。<br>如果数列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">u_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>满足：单调减少、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><msub><mi>u</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\lim\limits_{n\rightarrow\infty}u_n=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3944em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，则交错级数收敛，且其和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>≤</mo><msub><mi>u</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S\leq u_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li></ol><p>以下为正向级数判断收敛的法则：</p><ol start="2"><li>正向级数收敛等价于他的部分和数列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">S_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 有界；</li><li><font color=blue>（不等式判别法）</font>设有两个正向级数，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><msub><mi>u</mi><mi>n</mi></msub><msub><mi>v</mi><mi>n</mi></msub></mfrac><mo>=</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">\lim\limits_{n\rightarrow\infty}\frac{u_n}{v_n}=l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4115em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7115em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 。于是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>l</mi><mo>&lt;</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">0&lt;l&lt;\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span>时，两个级数收敛性相同。</li><li><font color=blue>（比值判别法）</font>若正项级数满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><msub><mi>u</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>u</mi><mi>n</mi></msub></mfrac><mo>=</mo><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\lim\limits_{n\rightarrow\infty}\frac{u_{n+1}}{u_n}=\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4532em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7532em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4518em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span></span></span></span> ，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\rho&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>时，该级数收敛；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\rho&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>时该级数发散；</li><li><font color=blue>（根值判别法）</font>若正项级数满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mroot><msub><mi>u</mi><mi>n</mi></msub><mi>n</mi></mroot><mo>=</mo><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\lim\limits_{n\rightarrow\infty}\sqrt[n]{u_n}=\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4253em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.4616em;"><span style="top:-2.7463em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7253em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6853em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\rho&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，该级数收敛；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\rho&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时该级数发散。</li><li><font color=blue>（绝对收敛与条件收敛）</font>若级数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><mo stretchy="false">∣</mo><msub><mi>u</mi><mi>n</mi></msub><mo stretchy="false">∣</mo></mrow><annotation encoding="application/x-tex">\sum\limits_{n=1}^{\infty}\lvert u_n\rvert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3185em;vertical-align:-0.9671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1329em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9671em;"><span></span></span></span></span></span><span class="mopen">∣</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">∣</span></span></span></span>收敛，则其绝对收敛；若级数收敛但绝对值级数发散，称之为条件收敛。</li></ol><h3 id="函数项级数">函数项级数</h3><h4 id="幂级数及收敛性">幂级数及收敛性</h4><ol><li><font color=blue>（定理，阿贝尔定理）</font>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为幂级数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>a</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\sum\limits_{n=0}^\infty a_nx^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3185em;vertical-align:-0.9671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1329em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> 的收敛点，则对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|x|&lt;|x_0|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> 的一切 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> ，该幂级数都绝对收敛，反之亦然。</li><li><font color=blue>收敛半径的求法</font>：对幂级数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>a</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\sum\limits_{n=0}^\infty a_nx^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3185em;vertical-align:-0.9671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1329em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> ,</li></ol><ul><li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><mo>=</mo><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\lim\limits_{n\rightarrow\infty}\frac{|a_{n+1}|}{|a_n|}=\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.71em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mroot><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi></mrow><mi>n</mi></mroot><mo>=</mo><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\lim\limits_{n\rightarrow\infty}\sqrt[n]{|a_n|}=\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.635em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5933em;"><span style="top:-2.878em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewBox="0 0 400000 1296" preserveAspectRatio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span></span></span></span>，则收敛半径<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mn>1</mn><mi>ρ</mi></mfrac><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">R=\frac 1 \rho.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3262em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ρ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">.</span></span></span></span></li><li>收敛区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi>R</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-R,R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span> 加上两个端点的判断得到幂级数的收敛域。</li></ul><ol start="3"><li><font color=blue>幂级数的性质</font><br>设幂级数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>a</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\sum\limits_{n=0}^\infty a_nx^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3185em;vertical-align:-0.9671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1329em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>收敛半径为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>，和函数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ，则有：</li></ol><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 在收敛域上连续，</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 逐项可积、逐项可导，并且新幂级数与原幂级数有相同的收敛半径，</li><li>幂级数加减运算的结果仍是幂级数，它的收敛半径至少为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>R</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\min(R_a, R_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><mo stretchy="false">(</mo><msub><mi>a</mi><mi>n</mi></msub><msub><mi>b</mi><mn>0</mn></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mn>0</mn></msub><msub><mi>b</mi><mi>n</mi></msub><mo stretchy="false">)</mo><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\sum_{n=0}^\infty(a_nb_0+a_{n-1}b_1+...+a_0b_n)x^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>称为两个幂级数的乘积，他在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>R</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|x|&lt;\min(R_a, R_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>时收敛，且</li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mo stretchy="false">(</mo><msub><mi>a</mi><mi>n</mi></msub><msub><mi>b</mi><mn>0</mn></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mn>0</mn></msub><msub><mi>b</mi><mi>n</mi></msub><mo stretchy="false">)</mo><msup><mi>x</mi><mi>n</mi></msup><mo>=</mo><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>a</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>b</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{n=0}^\infty(a_nb_0+a_{n-1}b_1+...+a_0b_n)x^n=(\sum_{n=0}^\infty a_nx^n)(\sum_{n=0}^\infty b_nx^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9185em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9185em;vertical-align:-1.2671em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ol start="4"><li><font color=blue>常见麦克劳林级数</font></li></ol><ul><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><mi>n</mi></mfrac><msup><mi>x</mi><mi>n</mi></msup><mo separator="true">,</mo><mi>x</mi><mo>∈</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\ln(1+x)=\sum_{n=1}^\infty\frac{(-1)^{n-1}}n x^n,x\in(-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9185em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy="false">)</mo><mi>α</mi></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><mrow><mi>α</mi><mo stretchy="false">(</mo><mi>α</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">(</mo><mi>α</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><mi>n</mi><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>x</mi><mi>n</mi></msup><mo separator="true">,</mo><mi>x</mi><mo>∈</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1+x)^\alpha=\sum_{n=0}^\infty\frac{\alpha(\alpha-1)...(\alpha-n+1)}{n!}x^n,x\in(-1,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9185em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mclose">!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">...</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>n</mi></msup></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>x</mi><mrow><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><mi>x</mi><mo>∈</mo><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sin x=\sum_{n=0}^\infty\frac{(-1)^n}{(2n+1)!}x^{2n+1},x\in (-\infty,\infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9185em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∞</span><span class="mclose">)</span></span></span></span></span></p></li><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>cos</mi><mo>⁡</mo><mi>x</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>n</mi></msup></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>x</mi><mrow><mn>2</mn><mi>n</mi></mrow></msup><mo separator="true">,</mo><mi>x</mi><mo>∈</mo><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\cos x=\sum_{n=0}^\infty\frac{(-1)^n}{(2n)!}x^{2n},x\in (-\infty,\infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9185em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mclose">)!</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∞</span><span class="mclose">)</span></span></span></span></span></p></li></ul><h2 id="微分方程">微分方程</h2><h3 id="一阶微分方程">一阶微分方程</h3><h4 id="一阶线性方程">一阶线性方程</h4><ol><li>标准形式： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">d</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo>+</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>y</mi><mo>=</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\frac{\mathrm{d}y}{\mathrm{d}x}+P(x)y=Q(x).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2772em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></li><li>通解：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mo>∫</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi></mrow></msup><mo stretchy="false">(</mo><mo>∫</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>∫</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi></mrow></msup><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">y=e^{-\int P(x)\mathrm{d}x}(\int Q(x)e^{\int P(x)\mathrm{d}x}\mathrm{d}x+C).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2326em;vertical-align:-0.3061em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9265em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop op-symbol small-op mtight" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9265em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop op-symbol small-op mtight" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></li></ol><h4 id="伯努利方程">伯努利方程</h4><ol><li>标准形式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">d</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo>+</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>y</mi><mo>=</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mi>y</mi><mi>α</mi></msup></mrow><annotation encoding="application/x-tex">\frac{\mathrm{d}y}{\mathrm{d}x}+P(x)y=Q(x)y^\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2772em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span></span></span>.</li><li>解法：两端同除 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mi>α</mi></msup></mrow><annotation encoding="application/x-tex">y^\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8588em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span></span></span>，再另 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>y</mi><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow></msup></mrow><annotation encoding="application/x-tex">z=y^{1-\alpha}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span></span></span></span>可化为一阶线性方程</li></ol><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">d</mi><mi>z</mi></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>z</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\mathrm{d}z}{\mathrm{d}x}+(1-\alpha)P(x)z=(1-\alpha)Q(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm">d</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><h4 id="全微分方程">全微分方程</h4><ol><li>标准形式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>N</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">M(x,y)\mathrm{d}x+N(x,y)\mathrm{d}y=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 的左端为二元函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的全微分，则其通解为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">u(x,y)=C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>。</li><li>判断标准：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>M</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>N</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial M}{\partial y}=\frac{\partial N}{\partial x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>.</li><li>解法：</li></ol><ul><li>将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 视为常数，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∫</mo><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>ψ</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u(x,y)=\int M(x,y)\mathrm{d}x+\psi(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>u</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mo>∫</mo><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>x</mi><mo>+</mo><mi>ψ</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">N(x,y)=\frac{\partial u}{\partial y}=\frac{\partial \int M(x,y)\mathrm{d}x+\psi(y)}{\partial y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3612em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5689em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0878em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5243em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop op-symbol small-op mtight" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ψ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，由此解出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\psi(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>即可。</li></ul><h4 id="可降阶的高阶方程">可降阶的高阶方程</h4><ol><li>形如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(x,y&#x27;,y&#x27;&#x27;)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 的方程，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y&#x27;=p(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，则可化为一阶方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>p</mi><mo separator="true">,</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(x,p,p&#x27;)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>.</li><li>形如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(y,y&#x27;,y&#x27;&#x27;)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 的方程，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y&#x27;=p(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，则可化为一阶方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>p</mi><mo separator="true">,</mo><mi>p</mi><mfrac><mrow><mi mathvariant="normal">d</mi><mi>p</mi></mrow><mrow><mi mathvariant="normal">d</mi><mi>y</mi></mrow></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(y,p,p\frac{\mathrm{d}p}{\mathrm{d}y})=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4133em;vertical-align:-0.4811em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>.</li></ol><h4 id="常系数齐次线性微分方程">常系数齐次线性微分方程</h4><h4 id="常系数齐次线性微分方程算子解法">常系数齐次线性微分方程算子解法</h4>]]></content>
    
    
    
    <tags>
      
      <tag>数学竞赛</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux查看信息常用指令</title>
    <link href="/2024/08/19/Linux%E6%9F%A5%E7%9C%8B%E4%BF%A1%E6%81%AF%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/2024/08/19/Linux%E6%9F%A5%E7%9C%8B%E4%BF%A1%E6%81%AF%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<ol><li><p>查看挂载点空间大小：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure></li><li><p>查看文件夹/文件大小：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">du</span> -h <span class="hljs-comment"># 查看下面所有文件夹大小</span><br><span class="hljs-built_in">du</span> -h -s <span class="hljs-comment"># 只显示当前目录的总大小，或写作du -sh</span><br><span class="hljs-built_in">du</span> -h -d 1 <span class="hljs-comment"># 向下递归一层的每个文件总大小</span><br></code></pre></td></tr></table></figure></li><li><p>查看文件结构：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">tree <span class="hljs-comment"># 查看当前文件夹下文件结构</span><br>tree path/to/folder <span class="hljs-comment"># 查看特定文件夹结构</span><br>tree -L depth <span class="hljs-comment"># 控制打印的深度</span><br>tree &gt; output.md <span class="hljs-comment">#将结果输出为markdown文件</span><br></code></pre></td></tr></table></figure></li><li><p>各种快捷键</p><table><thead><tr><th>返回桌面</th><th>win+d</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table></li><li><p>获取<code>Wallpaper engine</code>的图片：<br>在<code>E:\Steam\steamapps\workshop\content</code>地址下找到<code>.pkg</code>文件，输入</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">repkg extract <span class="hljs-string">&quot;~.pkg&quot;</span><br></code></pre></td></tr></table></figure><p>即可得到输出的.jpg图片。</p></li><li><p>播放.mid文件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">timidy xxx.mid<br></code></pre></td></tr></table></figure></li><li><p>关闭独立显卡和打开独立显卡</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> prime-select intel <span class="hljs-comment"># 切换为核显，关闭独立显卡</span><br><span class="hljs-built_in">sudo</span> prime-select nvidia <span class="hljs-comment"># 开启独显</span><br></code></pre></td></tr></table></figure><p>运行完命令后，需要重启才能生效！</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用ipdb调试python项目</title>
    <link href="/2024/08/18/%E4%BD%BF%E7%94%A8ipdb%E8%B0%83%E8%AF%95python%E9%A1%B9%E7%9B%AE/"/>
    <url>/2024/08/18/%E4%BD%BF%E7%94%A8ipdb%E8%B0%83%E8%AF%95python%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h1>前提</h1><p>之前我调试python代码或者是项目的时候，用的都是<code>print</code>来进行各种调试，这样显然不太方便（尤其是在处理python项目的时候）。于是我找到了<code>ipdb</code>这个工具，它能帮助你更方便的、像C++一样逐行调试代码。</p><h1>使用</h1><ol><li><p>安装：相当简单，<code>pip install ipdb</code>即可。</p></li><li><p>进入调试模式：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -m ipdb project.py<br></code></pre></td></tr></table></figure></li><li><p>常用命令：</p><table><thead><tr><th>字母</th><th>意义</th></tr></thead><tbody><tr><td>b</td><td>breakpoint，给程序某一行打断点，例如<code>b breakpoint_num</code></td></tr><tr><td>c</td><td>让程序运行到第一个断点那里</td></tr><tr><td>n</td><td>next，单步运行下一行代码（不进入函数）</td></tr><tr><td>s</td><td>step，单步运行下一行代码（进入函数）</td></tr><tr><td>q</td><td>quit，退出调试器并终止程序</td></tr><tr><td>l</td><td>查看位置附近的代码</td></tr><tr><td>p</td><td>print，打印变量的值</td></tr><tr><td>h</td><td>help，查看帮助信息，例如<code>h command_name</code></td></tr><tr><td>u</td><td>向上移动一层调用栈</td></tr><tr><td>d</td><td>向下移动一层调用栈</td></tr></tbody></table></li><li><p>另一种打断点方式：在要打断点的地方的上一行写上</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ipdb<br>ipdb.set_trace()<br></code></pre></td></tr></table></figure><p>这样打断点的方式比较适合在有很多文件的python项目里面进行调试。</p></li></ol><p>接下来就让我们实战一下吧！</p><h1>例子</h1><p>下面是一道leetcode的算法题题解，我们来利用ipdb调试它。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maxArea</span>(<span class="hljs-params">self, height</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(height) - <span class="hljs-number">1</span><br>        ans = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> l &lt; r:<br>            area = <span class="hljs-built_in">min</span>(height[l], height[r]) * (r - l)<br>            ans = <span class="hljs-built_in">max</span>(ans, area)<br>            <span class="hljs-keyword">if</span> height[l] &lt;= height[r]: l += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>: r -= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> ans<br><br><span class="hljs-built_in">print</span>(<span class="hljs-number">123</span>)<br>solution = Solution()<br>height = [<span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>]<br>max_water_area = solution.maxArea(height)<br><span class="hljs-built_in">print</span>(max_water_area) <br></code></pre></td></tr></table></figure><p>输入<code>python -m ipdb project.py</code>开始调试。</p><ol><li>首先我们的断点要设在第15行，所以有两种办法：</li></ol><ul><li>在命令行输入<code>b 10</code></li><li>在源代码中第15行加上<code>ipdb.set_trace()</code>，如下：  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">height = [<span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>]<br><span class="hljs-keyword">import</span> ipdb<br>ipdb.set_trace()<br>max_water_area = solution.maxArea(height)<br></code></pre></td></tr></table></figure></li></ul><ol start="2"><li>让程序运行到断点所在位置，指令为<code>c</code>;</li><li>让调试进入类的内部，指令为<code>s</code>;</li><li>在类内部调试，指令为<code>n+ENTER</code>，查看变量<code>area</code>的值，指令为<code>p area</code>;</li><li><code>q</code>退出调试。</li></ol>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu美化教程2-美化并增强linux的终端功能</title>
    <link href="/2024/07/28/%E7%BE%8E%E5%8C%96%E5%B9%B6%E5%A2%9E%E5%BC%BAlinux%E7%9A%84%E7%BB%88%E7%AB%AF%E5%8A%9F%E8%83%BD/"/>
    <url>/2024/07/28/%E7%BE%8E%E5%8C%96%E5%B9%B6%E5%A2%9E%E5%BC%BAlinux%E7%9A%84%E7%BB%88%E7%AB%AF%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h2 id="效果图">效果图</h2><p><img src="/img/linux_shell/zsh.png" alt="这是配置好之后的效果图"><br>可以看出，它不仅有自动提示功能，还可以显示出时间、系统信息等，甚至还可以显示你的git文件的状态（有几个在暂存区、几个还没同步等等）。我的安装由<a href="https://xxyqwq.github.io/2023/07/31/build-linux-terminal/">元神</a>的博客和网上的<a href="https://blog.csdn.net/m0_72357534/article/details/135453423">资料</a>整合而成。</p><h2 id="安装要求">安装要求</h2><ol><li>linux操作系统，我用的是ubuntu22.04版本。</li><li>需要电脑上装有git、vim和curl，否则使用指令安装。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install git<br><span class="hljs-built_in">sudo</span> apt install vim<br><span class="hljs-built_in">sudo</span> apt install curl<br></code></pre></td></tr></table></figure></li><li>需要VPN或者使用镜像网站。</li></ol><h2 id="步骤">步骤</h2><h3 id="更换linux字体">更换linux字体</h3><p>首先我们需要安装<code>Hack Nerd Fonts</code>，这是适配powerlevel10k的字体，安装时间可能会在5分钟左右。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/ryanoasis/nerd-fonts.git<br><span class="hljs-built_in">cd</span> nerd-fonts<br><span class="hljs-built_in">chmod</span> +x install.sh <span class="hljs-comment"># 给执行权限</span><br>./install.sh <span class="hljs-comment"># 安装字体</span><br>reboot <span class="hljs-comment"># 重启系统</span><br></code></pre></td></tr></table></figure><p>接下来打开终端，找到右上角三个点，点开并选择配置文件首选项，再点击未命名，在自定义字体这一栏找到Hack Nerd Fonts字体并选择。</p><h3 id="安装zshell">安装zshell</h3><ol><li>用apt安装zsh，检查它的可用性。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install zsh<br><span class="hljs-built_in">cat</span> /etc/shells <span class="hljs-comment"># 输出里面有/usr/bin/zsh</span><br></code></pre></td></tr></table></figure></li><li>用curl安装oh-my-zsh，并修改默认shell为zsh。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span><br>chsh -s /bin/zsh <span class="hljs-comment"># 修改默认shell</span><br>reboot <span class="hljs-comment"># 重启系统以加载修改</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$SHELL</span> <span class="hljs-comment"># 输出为/bin/zsh则修改成功</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="安装并配置powerlevel10k">安装并配置<code>powerlevel10k</code></h3><ol><li>下载<code>powerlevel10k</code> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/romkatv/powerlevel10k.git <span class="hljs-variable">$ZSH_CUSTOM</span>/themes/powerlevel10k<br></code></pre></td></tr></table></figure></li><li>更改主题为<code>powerlevel10k</code> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.zshrc<br></code></pre></td></tr></table></figure>找到<code>ZSH_THEME=&quot;robbyrussell&quot;</code>这一行，将其注释掉并加上 <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;<br>POWERLEVEL9K_MODE=&quot;awesome-patched&quot;<br></code></pre></td></tr></table></figure>如果有修改点不动的情况，建议学习一下vim的基础操作。<br>退出修改，执行 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc <span class="hljs-comment"># 使配置生效</span><br></code></pre></td></tr></table></figure>接下来便会进入引导配置环节。如果没有进入引导配置或是配置好以后想重新配置的，输入下列命令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">p10k configure<br></code></pre></td></tr></table></figure>配置的具体选择见<a href="https://blog.csdn.net/m0_72357534/article/details/135453423">资料</a>，里面有每个问题详细的解释。</li></ol><h3 id="配置-AI-辅助的终端">配置 AI 辅助的终端</h3><p>现在 AI 风靡全球，我觉得应该有人开发了 AI 辅助的终端工具，这样一些复杂的命令就可以不用死记硬背了。</p><p><strong>Warp</strong> 是一个不错的选择，但是它集成了太多东西，不够轻量化，这里我更加推荐 <a href="https://github.com/BuilderIO/ai-shell">ai-shell</a>。具体配置教程如库中所示，只不过我链接的是 deepseek 的 API，这样价格会非常便宜，而且使用体验非常不错，下面是一个使用示例：<br><img src="/img/linux_shell/ai_shell.png" alt="ai-shell 使用示例"></p><h3 id="安装插件">安装插件</h3><p>从github上下载两个插件<code>zsh-autosuggestions</code>和<code>zsh-syntax-highlighting</code>，分别用于自动补全和自动高亮。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><p>接下来通过修改<code>.zshrc</code>来配置插件，和上面一样，输入<code>vim ~/.zshrc</code>，找到<code>plugins=(git)</code>这一行，将其修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugins=(git zsh-autosuggestions zsh-syntax-highlighting)<br></code></pre></td></tr></table></figure><p>再执行<code>source ~/.zshrc</code>来同步配置就可以了！</p><h2 id="插件使用以及小提示">插件使用以及小提示</h2><ul><li><p>当你输入执行过的命令时，<code>zsh</code>会以灰色提示你，按<code>→</code>或<code>ctrl+f</code>可自动补全。</p></li><li><p>如果在别的要使用命令行的应用（比如vscode）里，要把字体都改成<code>Hack Nerd Fonts</code>。</p></li><li><p>如果已经在<code>~/.bashrc</code>中配置了一些环境变量，记得把它们都复制到<code>~/.zshrc</code>中。否则某一天你会发现：conda不见了！cuda不见了！</p></li><li><p>由于<code>zsh</code>使用了<code>globbing character</code>，即特殊通配符的语法，因此在执行某些指令的时候会提示<code>command not found</code>。下面列出了一些基本语法和一个例子。</p><table><thead><tr><th>字符</th><th>解释</th></tr></thead><tbody><tr><td><code>*</code></td><td>匹配任意长度任意字符</td></tr><tr><td><code>?</code></td><td>匹配任意单个字符</td></tr><tr><td><code>[list]</code></td><td>匹配指定范围内（list）任意单个字符，也可以是单个字符组成的集合</td></tr><tr><td><code>[^list]</code>或<code>[!list]</code></td><td>匹配指定范围外的任意单个字符或字符集合</td></tr></tbody></table><p>我在复现<a href="https://github.com/opendatalab/MinerU">这个代码</a>的时候，装环境用的指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install magic-pdf[full-cpu]<br></code></pre></td></tr></table></figure><p>在<code>zsh</code>找不到，究其原因是<code>[]</code>匹配了<code>globbing</code>语法。<br>有好几种解决方式：</p><ul><li>把含有特殊的符号（<code>*</code>、<code>?</code>、<code>[]</code>）的语句用双引号或单引号括起来，比如这样:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install <span class="hljs-string">&quot;magic-pdf[full-cpu]&quot;</span><br></code></pre></td></tr></table></figure></li><li>在运行指令之前用<code>setopt no_nomatch</code>来关闭<code>globbing</code>语法。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">setopt</span> no_nomatch<br>pip install magic-pdf[full-cpu]<br></code></pre></td></tr></table></figure></li></ul><p>这里只是粗略的说一下，关于双引号和单引号的使用还有一些要求，详细的介绍请见<a href="https://www.cnblogs.com/divent/p/5762154.html">这里</a>。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>beautification</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu美化教程1</title>
    <link href="/2024/07/27/ubuntu-22-04%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/27/ubuntu-22-04%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="效果图">效果图</h2><p><img src="/img/ubuntu_beautification/desktop.png" alt="完成后的效果"><br>美化后的桌面与mac的桌面几乎一致，比ubuntu原生桌面好看了不少。我的操作过程大体上基于<a href="https://www.youtube.com/watch?v=2kPC9HSBrPQ">视频</a>，但改进并增加了dock和桌面的内容。</p><h2 id="环境要求">环境要求</h2><ul><li>linux操作系统，我用的是ubuntu22.04版本</li><li>需要VPN，因为要在github上下载插件</li></ul><h2 id="步骤">步骤</h2><p>我用的是edge浏览器，因此跳过了视频中的卸载重装firefox的过程，实测edge也可以完成以下操作（当然可以跟着它把firefox卸掉）。</p><h3 id="安装Gnome-Tweaks">安装Gnome Tweaks</h3><p>指令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install gnome-tweaks<br></code></pre></td></tr></table></figure><p>接着就可以在应用程序列表的工具那一栏找到它，他的中文名称叫“优化”。</p><h3 id="安装Chrome-gnome-shell">安装Chrome-gnome-shell</h3><p>指令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install chrome-gnome-shell<br></code></pre></td></tr></table></figure><p>接下来安装浏览器扩展功能。在浏览器中访问gnome官方<a href="https://extensions.gnome.org">网站</a>，点击紫色框中的click here，在弹出的提示中选择continue to install，接下来的选项选择允许在私人窗口运行即可。<br><img src="/img/ubuntu_beautification/gnome-shell.png" alt="安装步骤示意"></p><h3 id="安装苹果风格任务栏">安装苹果风格任务栏</h3><p>这里需要特别注意！！<strong>千万不要像视频里一样下载dash to dock!!</strong> 因为我自己使用的时候发现，它会导致挂起过久之后linux系统崩溃，具体表现为不能按windows键，否则就会整机卡死只能重启。我关闭dash to dock以后就没有这个问题了。</p><p>实际上不需要dash to dock也可以达到不错的效果。在设置–外观–Dock中调整，选择自动隐藏dock、关闭面板模式、将其调到底部，再点击“配置dock行为”，将显示卷和设备、显示回收站的按钮全部关闭，你就获得了一个不错的dock栏。<br><img src="/img/ubuntu_beautification/dock.png" alt="dock配置"></p><h3 id="安装苹果风格的应用主题">安装苹果风格的应用主题</h3><p>访问这个<a href="https://gnome-look.org">网站</a>，在左边框点击“GTK3/4 theme”，再下拉右边栏找到“popularity“，点进排名第一的“White Sur GTK theme”，点进去，并在右边download选择有箭头的那一项，点击就可以进入github找到release，下载最新版本并解压缩、运行即可。具体指令如下：<br><img src="/img/ubuntu_beautification/gtk_theme.jpg" alt="下载选择"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 解压缩指令</span><br><span class="hljs-built_in">sudo</span> tar zxvf 下载/WhiteSur-gtk-theme-2024-05-01.tar.gz<br><span class="hljs-built_in">cd</span> WhiteSur-gtk-theme-2024-05-01 <span class="hljs-comment"># 进入目录</span><br><span class="hljs-built_in">sudo</span> ./install.sh <span class="hljs-comment"># 下载指令</span><br></code></pre></td></tr></table></figure><p>完成上述步骤后，打开tweaks（即”优化“），在外观–应用程序即可找到刚刚下载的一系列WhiteSur主题，选择你喜欢的！</p><h3 id="安装苹果风格的图标主题">安装苹果风格的图标主题</h3><p>还是这个<a href="https://gnome-look.org">网站</a>，在左边框找到“Full icon themes”，点击并下拉找到“WhiteSur Icon Themes”，在右边download选择“01-WhiteSur.tar.xz&quot;下载。<br>这个需要自己创建icons文件夹，具体指令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> .icons; <span class="hljs-built_in">cd</span> .icons<br><span class="hljs-built_in">sudo</span> tar xvJf ~/下载/01-WhiteSur.tar.xz<br></code></pre></td></tr></table></figure><p>完成上述步骤后，打开tweaks，在外观–图标即可找到刚刚下载的一系列WhiteSur主题，选择你喜欢的！</p><h3 id="安装苹果风格的光标主题">安装苹果风格的光标主题</h3><p>还还是这个<a href="https://gnome-look.org">网站</a>，在左边框找到“Cursors”，点击并下拉找到”Popularity“，找到“WhiteSur cursors”并下载。<br>这个安装可以使用上一步创建的.icons文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> .icons<br><span class="hljs-built_in">sudo</span> tar xvJf ~/下载/WhiteSur-cursors.tar.xz<br></code></pre></td></tr></table></figure><p>完成上述步骤后，打开tweaks，在外观–光标即可找到刚刚下载的WhiteSur主题，选择它！</p><h3 id="安装苹果风格的shell主题">安装苹果风格的shell主题</h3><p>进入gnome官方<a href="https://extensions.gnome.org">网站</a>，选择第一个“Users Themes”，点进去将off改为on即可自动下载。<br>完成上述步骤后，打开tweaks，在外观–shell即可找到WhiteSur主题，选择你喜欢的！</p><h3 id="总结">总结</h3><p>这一篇主要讲解了如何将ubuntu美化为macOS的样子，下一篇来讲怎么进一步美化并增强shell的功能。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>beautification</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux上的vscode、git与github的互联工作流</title>
    <link href="/2024/07/26/git&amp;github/"/>
    <url>/2024/07/26/git&amp;github/</url>
    
    <content type="html"><![CDATA[<h1>一、介绍与要求</h1><ol><li>介绍：我刚刚改到linux系统（ubuntu22.04）上进行学习和工作，深感到linux的方便快捷，于是想在此记录以下git和github的学习过程，也权当备忘录。</li><li>要求：强烈建议使用梯子（VPN）进行操作，否则git指令很可能会卡顿，因为github的服务器在国外。本文默认电脑上已经装好git和vscode、已注册git的用户名和邮箱。</li></ol><h1>二、git和github联动</h1><h2 id="2-1-git与github的连接">2.1  git与github的连接</h2><p>首先输入指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;git注册的邮箱&quot;<br></code></pre></td></tr></table></figure><p>然后根据它的提示按三下回车，出现一个图案就表示密钥生成成功。在主文件夹（即/home/用户名称/）下找到id_rsa.pub文件，进入其中将它的内容<strong>全部</strong>复制下来。</p><p>切换到github界面中，点击你的头像–Settings–SSH and GPG keys（在左边框上），点击new ssh key，在这个界面中，title就是你给这个密钥的命名，比如说这个是我linux设备的密钥，我就给他命名为“linux”，并把刚刚复制的公钥粘贴到key那个框中，点击add ssh key即可连接git与你的github账号。<br><img src="/img/github&amp;vscode/ssh_key.png" alt="ssh key添加界面"></p><p>接下来在git中验证这件事。输入指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>第一次用这个命令需要输入一个&quot;yes&quot;，当出现你的github账号就代表连接成功！</p><p><img src="/img/github&amp;vscode/success_connect.png" alt="成功连接！"></p><h2 id="2-2-git的操作">2.2 git的操作</h2><p>这里以我在学习的Coursera的HTML课程为例，来实现git的基本操作。</p><ol><li><p>拉取远程库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone &quot;https或ssh&quot;<br></code></pre></td></tr></table></figure><p>https或ssh</p></li></ol><p><img src="/img/github&amp;vscode/ssh.png" alt="ssh网址">的具体位置在github库的这里，点进库中选择code键即可看见。</p><p>我想拉取这个库的指令为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone git@github.com:kingdom-of-warriors/Coursera-HTML.git<br></code></pre></td></tr></table></figure><ol start="2"><li>添加暂存区<br>在修改文件后，应将它添加到暂存区。执行git status查看，修改过的文件应该是红色的。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git add &quot;改动的文件&quot;<br>git add . # 表示提交所有更改<br></code></pre></td></tr></table></figure><p>再执行指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git add index.html<br></code></pre></td></tr></table></figure><p>后执行git status查看，这个文件将会变为绿色。</p><ol start="3"><li>提交本地库</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git commit -m &quot;日志信息&quot;<br></code></pre></td></tr></table></figure><p>这个日志信息一般来说是描述你这次更改改了哪些地方，写什么都行。在本例中，我想表示我增加了css渲染内容，那么应该写的指令是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git commit -m &quot;增加css渲染内容&quot;<br></code></pre></td></tr></table></figure><ol start="4"><li>创建别名<br>在github上创建一个新仓库，像2.2.1那样找到它的SSH或者HTTPS（我更推荐用SSH连接）。这个别名主要是为了<strong>方便推送代码</strong>，相当于给一大段复杂的网址取了一个别名，用这个别名就相当于在用这个网址，所以别名最好短小精悍一点。</li></ol><p>一般来说，github会给你的仓库去一个默认的别名叫origin，可以通过git remote -v 来查看。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote add 别名 &quot;SSH或HTTPS网址&quot;<br></code></pre></td></tr></table></figure><p>如果我想给这个github仓库取一个别名叫HTML，那么指令应该如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote add HTML git@github.com:kingdom-of-warriors/Coursera-HTML.git<br></code></pre></td></tr></table></figure><p>然后执行git remote -v就可以查看别名是否添加成功。<br><img src="/img/github&amp;vscode/other_name.png" alt="别名添加成功"></p><ol start="5"><li>推送代码<br>使用别名可以很快的推送代码，指令为</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push 别名 分支名<br></code></pre></td></tr></table></figure><p>在本例中指令为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push HTML main<br></code></pre></td></tr></table></figure><p>如果不用别名，指令将会是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push git@github.com:kingdom-of-warriors/Coursera-HTML.git main<br></code></pre></td></tr></table></figure><p>，从此处也可以看出别名的方便之处。</p><h1>三、vscode与git的方便操作（待更新）</h1><h1>总结</h1><p>这里的git操作介绍全部基于尚硅谷的<a href="https://www.bilibili.com/video/BV1vy4y1s7k6/?spm_id_from=333.999.0.0&amp;vd_source=217dcc16f6693d64dbc48b7cfad6b2fa">课程</a>，想详细学习git的同学们可以去看！</p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
      <category>github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在ubuntu上部署Sabaki以及围棋引擎katago</title>
    <link href="/2024/07/26/sabaki&amp;katago/"/>
    <url>/2024/07/26/sabaki&amp;katago/</url>
    
    <content type="html"><![CDATA[<h1>一、Sabaki的部署</h1><p>想要配置一个可以用于分析的图像界面katago，需要一个可视化的图形界面（Lizzieyzy、Sabaki等等）和katago引擎。在Ubuntu上，我推荐使用Sabaki，因为它下载即可打开使用，而Lizzieyzy虽然功能更齐全，但它需要java环境而且容易报错。</p><p><img src="/img/sabaki/sabaki.png" alt="Sabaki界面"></p><h2 id="1-1-下载Sabaki">1.1 下载Sabaki</h2><p>Sabaki可在github上下载，下载各个版本的链接为<a href="https://github.com/SabakiHQ/Sabaki/releases/tag/v0.52.2">Sabaki</a>，对于Ubuntu选择<strong>linux-x64.AppImage</strong>的版本。在下载到本地后，右键“属性-权限”赋予它执行权限，点击即可运行。</p><h2 id="1-2-创造快捷方式">1.2 创造快捷方式</h2><p>首先下载它的<a href="https://github.com/SabakiHQ/Sabaki/blob/master/logo.png">Logo</a>，然后创建.desktop文件，具体代码可参考如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs txt">[Desktop Entry]<br>Name=Sabaki<br>Exec=/path/to/Sabaki.AppImage<br>Icon=/path/to/logo.png<br>Terminal=false<br>Type=Application<br></code></pre></td></tr></table></figure><p>将其复制到桌面并赋予执行权限即可。</p><h1>二、下载katago</h1><p>接下来我们下载katago引擎，这里只考虑有独显的电脑的配置。我们有三种选择，从易到难分别为OpenCL、CUDA和Tensor RT版本，下面这三种都会介绍。<br><a href="https://github.com/lightvector/KataGo/releases/tag/v1.14.1">下载网址</a></p><h2 id="2-1-OpenCL版本">2.1 OpenCL版本</h2><h3 id="2-1-1-下载OpenCL版katago引擎">2.1.1 下载OpenCL版katago引擎</h3><p>如果你的电脑有一个不错的独显并且希望快速开始的话，OpenCL是最好的选择，它不需要配置CUDA或者cuDNN。<br>在<a href="https://github.com/lightvector/KataGo/releases/tag/v1.14.1">下载界面</a>选择katago-v1.14.1-opencl-linux-x64.zip这个安装包，其中后缀有bs29的是娱乐版本，它支持29 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 29的超大棋盘，不过对电脑性能的要求也更高，想玩的就可以下载带bs29的版本。<br>在合适的位置新建文件夹katago，在下面再新建一个文件夹katago_opencl，将这个安装包解压至katago_opencl下，结果如下所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">├── katago_opencl<br>    ├── analysis_example.cfg<br>    ├── cacert.pem<br>    ├── contribute_example.cfg<br>    ├── default_gtp.cfg<br>    ├── katago<br>    ├── katago-v1.14.1-opencl-linux-x64.zip<br>    ├── match_example.cfg<br>    └── README.txt<br></code></pre></td></tr></table></figure><h3 id="2-1-2-下载katago权重">2.1.2 下载katago权重</h3><p>有了引擎，还需要下载katago的权重<a href="https://katagotraining.org/networks/">下载地址</a>。其中标了绿色的那一行就是elo分最高（最厉害）的权重。在Network File下点击download，将下载下来的bin.gz文件剪切到katago/katago_opencl文件夹下。<br><img src="/img/sabaki/weight.png" alt="权重下载网页"></p><h3 id="2-1-3-配置OpenCL版katago">2.1.3 配置OpenCL版katago</h3><p>打开Sakabi，在左上角点开File-Preferences然后切换语言为中文并重启Sakabi。接着点开文件–首选项–引擎，新建文件夹sabari_log作为日志保存目录。<br>还是在引擎这里，点击“新增”，会出现四行需要我们填的东西，分别为：</p><ol><li>引擎的名字（任意取）</li><li>引擎路径：/katago/katago_opencl/katago（这个katago文件的路径）</li><li>运行参数：gtp -model &lt;权重文件名&gt;.bin.gz -config default_gtp.cfg</li><li>启动参数：time_settings 0 5 1</li></ol><p>示例如下：<br><img src="/img/sabaki/opencl_para.png" alt="启动参数（参考）"><br>然后点击”关闭“，点击左上角的小三角并选中配置的引擎，就开始初始化啦。第一次初始化的时间会在两三分钟左右，耐心等待～～<br>出现”GTP ready, beginning main protocol loop“则配置成功！</p><h3 id="2-1-4-遇到问题及解决">2.1.4 遇到问题及解决</h3><ol><li><p>问题：在初始化引擎的时候，我遇到了<strong>error while loading shared libraries: libzip.so.5: cannot open shared object file: No such file or directory</strong>的问题，这是因为linux系统缺少libzip5造成的。</p></li><li><p>解决：首先我们需要下载zlib库。zlib下载方式见这篇<a href="https://blog.csdn.net/lushixuan12345/article/details/122545491">blog</a>，不过注意把下载网址<a href="http://www.zlib.net/zlib-1.2.11.tar.gz%E6%94%B9%E4%B8%BAhttp://www.zlib.net/fossils/zlib-1.2.11.tar.gz%E3%80%82">http://www.zlib.net/zlib-1.2.11.tar.gz改为http://www.zlib.net/fossils/zlib-1.2.11.tar.gz。</a><br>有了zlib库后，这是libzip5的<a href="https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/libzip/1.5.1-0ubuntu1/libzip_1.5.1.orig.tar.xz">下载网址</a>，我们根据这篇<a href="https://blog.csdn.net/iamhuanyu/article/details/129603632">blog</a>的步骤来下载libzip5，再在其中找到libzip.so.5文件，并创建<strong>软链接到/usr/lib/上</strong>，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo ln -s &quot;libzip.so.5文件所在位置&quot; /usr/lib/libzip.so.5<br><span class="hljs-meta prompt_"># </span><span class="language-bash">比如我的电脑中，命令应该为：</span><br>sudo ln -s /usr/local/lib/libzip.so.5 /usr/lib/libzip.so.5<br></code></pre></td></tr></table></figure><p>其他同类型的报错解决方式也是如出一辙。先在电脑中找找有没有该文件，如果有就创建软链接，如果没有就下载所需要的库，再创建相应的软链接。</p></li></ol><h2 id="2-2-CUDA版本">2.2 CUDA版本</h2><p>CUDA版本的katago比OpenCL版本的强不少，不过安装起来也更复杂，需要安装CUDA和cuDNN两个东西。</p><h3 id="2-2-1-CUDA安装">2.2.1 CUDA安装</h3><p>在katago引擎的<a href="https://github.com/lightvector/KataGo/releases/tag/v1.14.1">下载链接</a>找到有cuda和cudnn的那个版本，发现最新版需要12.1的CUDA和8.9.7的cuDNN。在电脑上通过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nvidia-smi<br></code></pre></td></tr></table></figure><p>来查看是否支持12.1的CUDA版本（显示的值要大于等于12.1，我这里是12.2），如果比12.1低的话可以下载更低版本的引擎。<br><img src="/img/sabaki/nvidia-smi.png" alt="指令输出，右上角显示12.2"></p><p>于是我们在官网找到CUDA12.1的<a href="https://developer.nvidia.com/cuda-12-1-0-download-archive">下载网址</a>，选择&quot;linux–x86_64–Ubuntu–22.04–runfile(local)&quot;（这个要根据具体ubuntu版本进行调整），下面就会出现安装的指令。<br><img src="/img/sabaki/cuda.png" alt="命令行安装" title="命令行安装cuda"><br>运行.run文件后会出现一个图形化的安装界面，可以根据<a href="https://blog.csdn.net/Sihang_Xie/article/details/127347139">这篇文章</a>的指导来做，总之就是在安装的时候<strong>不要点上安装驱动</strong>，否则很容易导致nvidia驱动损坏。</p><h3 id="2-2-2-遇到问题及解决">2.2.2 遇到问题及解决</h3><ol><li>问题：在运行.run文件时，我遇到了安装失败的问题，安装日志显示</li></ol><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">[INFO]: md5 matches, removing file /var/log/nvidia/.uninstallManifests/CUDA_Toolkit_10.2-components/CUDA_Tools_10.2-components/CUDA_Visual_Tools_10.2-components/<br>[ERROR]: boost::filesystem::remove: Directory not empty: &quot;/var/log/nvidia/.uninstallManifests/CUDA_Toolkit_10.2-components/CUDA_Tools_10.2-components/CUDA_Visual_Tools_10.2-components/&quot;<br></code></pre></td></tr></table></figure><ol start="2"><li>解决：在查询<a href="https://tieba.baidu.com/p/6848132251">资料</a>后，我发现在运行.run文件的指令后应该加上一些参数，具体指令如下：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo sh cuda_12.1.0_530.30.02_linux.run --silent --toolkit --samples --librarypath=/usr/local/cuda-12.1<br></code></pre></td></tr></table></figure><p>这条指令运行的时候不会弹出图形界面，在等待一会后运行完成，把~/.bashrc文件更新一下后，通过nvcc -V来看CUDA是否安装成功。（更新bashrc文件的过程详见<a href="https://blog.csdn.net/Sihang_Xie/article/details/127347139">上面这篇文章</a>）</p><ol start="3"><li>这个问题正常情况下是不会出现的。</li></ol><h3 id="2-2-2-cuDNN安装">2.2.2 cuDNN安装</h3><p>这是cuDNN8.9.7的x86<a href="https://developer.nvidia.com/downloads/compute/cudnn/secure/8.9.7/local_installers/12.x/cudnn-linux-x86_64-8.9.7.29_cuda12-archive.tar.xz/">下载链接</a>，也可以在<a href="https://developer.nvidia.cn/rdp/cudnn-archive">官网</a>上找到下载别的版本的cuDNN，不过这个网址可能需要你注册一个nvidia帐号。</p><p>接下来的具体下载步骤可以参考<a href="https://blog.csdn.net/enjoyyl/article/details/134893210">这篇文章</a>，为了方便起见，我将安装指令粘贴过来：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -xvf cudnn-linux-x86_64-8.9.7.29_cuda12-archive.tar.xz<br>sudo cp cudnn-*-archive/include/cudnn*.h /usr/local/cuda/include <br>sudo cp -P cudnn-*-archive/lib/libcudnn* /usr/local/cuda/lib64 <br>sudo chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*<br></code></pre></td></tr></table></figure><h3 id="2-2-3-CUDA版本的引擎安装">2.2.3 CUDA版本的引擎安装</h3><p>与本文2.1.1和2.1.2章过程一样，在katago目录下创建一个katago_cuda文件夹，将引擎文件解压后放入其中，同时也要把权重文件也放入其中，这里不再赘述，下面是成功后的katago目录下的文件：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs txt">katago<br>├── katago_cuda<br>│   ├── analysis_example.cfg<br>│   ├── cacert.pem<br>│   ├── contribute_example.cfg<br>│   ├── default_gtp.cfg<br>│   ├── kata1-b28c512nbt-s7168446720-d4316919285.bin.gz<br>│   ├── katago<br>│   ├── match_example.cfg<br>│   └── README.txt<br>└── katago_opencl<br>    ├── analysis_example.cfg<br>    ├── cacert.pem<br>    ├── contribute_example.cfg<br>    ├── default_gtp.cfg<br>    ├── kata1-b28c512nbt-s7168446720-d4316919285.bin.gz<br>    ├── katago<br>    ├── match_example.cfg<br>    └── README.txt<br></code></pre></td></tr></table></figure><h3 id="2-2-4-配置CUDA版katago">2.2.4 配置CUDA版katago</h3><p>过程与本文2.1.3一样，下面给出我的配置：<br><img src="/img/sabaki/cuda_para.png" alt="cuda版的启动参数配置"><br>在配置完成后点左上三角即可初始化引擎，等待看是否报错/配置成功。</p><h3 id="2-2-5-遇到问题及解决">2.2.5 遇到问题及解决</h3><ol><li>问题：在初始化引擎的时候，我遇到了<strong>error while loading shared libraries: libcudnn.so.8: cannot open shared object file: No such file or directory</strong>的问题，这是因为我们下载cudnn后没有将其移动到文件夹中。</li><li>解决：通过<strong>查找文件名</strong>找到我们刚刚下载的cudnn中的libcudnn_cnn_infer.so.8文件，并建立软链接即可解决。</li></ol>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
      <category>katago</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>katago</tag>
      
      <tag>围棋</tag>
      
      <tag>sabaki</tag>
      
      <tag>人工智能</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
